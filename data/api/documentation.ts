/**
 * Generated by orval v6.29.1 üç∫
 * Do not edit manually.
 * DOCUMENTATION
 * OpenAPI spec version: 1.0.0
 */
import type {
  MutationFunction,
  QueryFunction,
  QueryKey,
  UseMutationOptions,
  UseMutationResult,
  UseQueryOptions,
  UseQueryResult,
} from "@tanstack/react-query";
import type { AxiosError, AxiosRequestConfig, AxiosResponse } from "axios";

import { useMutation, useQuery } from "@tanstack/react-query";
import axios from "axios";

export type GetTerminalsParams = {
  /**
   * Sort by attributes ascending (asc) or descending (desc)
   */
  sort?: string;
  /**
   * Return page/pageSize (default: true)
   */
  "pagination[withCount]"?: boolean;
  /**
   * Page number (default: 0)
   */
  "pagination[page]"?: number;
  /**
   * Page size (default: 25)
   */
  "pagination[pageSize]"?: number;
  /**
   * Offset value (default: 0)
   */
  "pagination[start]"?: number;
  /**
   * Number of entities to return (default: 25)
   */
  "pagination[limit]"?: number;
  /**
   * Fields to return (ex: title,author)
   */
  fields?: string;
  /**
   * Relations to return
   */
  populate?: string;
  /**
   * Filters to apply
   */
  filters?: { [key: string]: any };
  /**
   * Locale to apply
   */
  locale?: string;
};

export type GetLoungesParams = {
  /**
   * Sort by attributes ascending (asc) or descending (desc)
   */
  sort?: string;
  /**
   * Return page/pageSize (default: true)
   */
  "pagination[withCount]"?: boolean;
  /**
   * Page number (default: 0)
   */
  "pagination[page]"?: number;
  /**
   * Page size (default: 25)
   */
  "pagination[pageSize]"?: number;
  /**
   * Offset value (default: 0)
   */
  "pagination[start]"?: number;
  /**
   * Number of entities to return (default: 25)
   */
  "pagination[limit]"?: number;
  /**
   * Fields to return (ex: title,author)
   */
  fields?: string;
  /**
   * Relations to return
   */
  populate?: string;
  /**
   * Filters to apply
   */
  filters?: { [key: string]: any };
  /**
   * Locale to apply
   */
  locale?: string;
};

export type GetDetrimentsParams = {
  /**
   * Sort by attributes ascending (asc) or descending (desc)
   */
  sort?: string;
  /**
   * Return page/pageSize (default: true)
   */
  "pagination[withCount]"?: boolean;
  /**
   * Page number (default: 0)
   */
  "pagination[page]"?: number;
  /**
   * Page size (default: 25)
   */
  "pagination[pageSize]"?: number;
  /**
   * Offset value (default: 0)
   */
  "pagination[start]"?: number;
  /**
   * Number of entities to return (default: 25)
   */
  "pagination[limit]"?: number;
  /**
   * Fields to return (ex: title,author)
   */
  fields?: string;
  /**
   * Relations to return
   */
  populate?: string;
  /**
   * Filters to apply
   */
  filters?: { [key: string]: any };
  /**
   * Locale to apply
   */
  locale?: string;
};

export type GetCardsParams = {
  /**
   * Sort by attributes ascending (asc) or descending (desc)
   */
  sort?: string;
  /**
   * Return page/pageSize (default: true)
   */
  "pagination[withCount]"?: boolean;
  /**
   * Page number (default: 0)
   */
  "pagination[page]"?: number;
  /**
   * Page size (default: 25)
   */
  "pagination[pageSize]"?: number;
  /**
   * Offset value (default: 0)
   */
  "pagination[start]"?: number;
  /**
   * Number of entities to return (default: 25)
   */
  "pagination[limit]"?: number;
  /**
   * Fields to return (ex: title,author)
   */
  fields?: string;
  /**
   * Relations to return
   */
  populate?: string;
  /**
   * Filters to apply
   */
  filters?: { [key: string]: any };
  /**
   * Locale to apply
   */
  locale?: string;
};

export type GetAmenitiesParams = {
  /**
   * Sort by attributes ascending (asc) or descending (desc)
   */
  sort?: string;
  /**
   * Return page/pageSize (default: true)
   */
  "pagination[withCount]"?: boolean;
  /**
   * Page number (default: 0)
   */
  "pagination[page]"?: number;
  /**
   * Page size (default: 25)
   */
  "pagination[pageSize]"?: number;
  /**
   * Offset value (default: 0)
   */
  "pagination[start]"?: number;
  /**
   * Number of entities to return (default: 25)
   */
  "pagination[limit]"?: number;
  /**
   * Fields to return (ex: title,author)
   */
  fields?: string;
  /**
   * Relations to return
   */
  populate?: string;
  /**
   * Filters to apply
   */
  filters?: { [key: string]: any };
  /**
   * Locale to apply
   */
  locale?: string;
};

export type GetAllianceTiersParams = {
  /**
   * Sort by attributes ascending (asc) or descending (desc)
   */
  sort?: string;
  /**
   * Return page/pageSize (default: true)
   */
  "pagination[withCount]"?: boolean;
  /**
   * Page number (default: 0)
   */
  "pagination[page]"?: number;
  /**
   * Page size (default: 25)
   */
  "pagination[pageSize]"?: number;
  /**
   * Offset value (default: 0)
   */
  "pagination[start]"?: number;
  /**
   * Number of entities to return (default: 25)
   */
  "pagination[limit]"?: number;
  /**
   * Fields to return (ex: title,author)
   */
  fields?: string;
  /**
   * Relations to return
   */
  populate?: string;
  /**
   * Filters to apply
   */
  filters?: { [key: string]: any };
  /**
   * Locale to apply
   */
  locale?: string;
};

export type GetAirportsParams = {
  /**
   * Sort by attributes ascending (asc) or descending (desc)
   */
  sort?: string;
  /**
   * Return page/pageSize (default: true)
   */
  "pagination[withCount]"?: boolean;
  /**
   * Page number (default: 0)
   */
  "pagination[page]"?: number;
  /**
   * Page size (default: 25)
   */
  "pagination[pageSize]"?: number;
  /**
   * Offset value (default: 0)
   */
  "pagination[start]"?: number;
  /**
   * Number of entities to return (default: 25)
   */
  "pagination[limit]"?: number;
  /**
   * Fields to return (ex: title,author)
   */
  fields?: string;
  /**
   * Relations to return
   */
  populate?: string;
  /**
   * Filters to apply
   */
  filters?: { [key: string]: any };
  /**
   * Locale to apply
   */
  locale?: string;
};

export type TerminalResponseMeta = { [key: string]: any };

export interface Terminal {
  createdAt?: string;
  createdBy?: TerminalCreatedBy;
  name: string;
  updatedAt?: string;
  updatedBy?: TerminalUpdatedBy;
}

export interface TerminalResponseDataObject {
  attributes?: Terminal;
  id?: number;
}

export interface TerminalResponse {
  data?: TerminalResponseDataObject;
  meta?: TerminalResponseMeta;
}

export type TerminalUpdatedByDataAttributes = { [key: string]: any };

export type TerminalUpdatedByData = {
  attributes?: TerminalUpdatedByDataAttributes;
  id?: number;
};

export type TerminalUpdatedBy = {
  data?: TerminalUpdatedByData;
};

export type TerminalCreatedByDataAttributes = {
  blocked?: boolean;
  createdAt?: string;
  createdBy?: TerminalCreatedByDataAttributesCreatedBy;
  email?: string;
  firstname?: string;
  isActive?: boolean;
  lastname?: string;
  preferedLanguage?: string;
  registrationToken?: string;
  resetPasswordToken?: string;
  roles?: TerminalCreatedByDataAttributesRoles;
  updatedAt?: string;
  updatedBy?: TerminalCreatedByDataAttributesUpdatedBy;
  username?: string;
};

export type TerminalCreatedByData = {
  attributes?: TerminalCreatedByDataAttributes;
  id?: number;
};

export type TerminalCreatedBy = {
  data?: TerminalCreatedByData;
};

export type TerminalCreatedByDataAttributesUpdatedByDataAttributes = {
  [key: string]: any;
};

export type TerminalCreatedByDataAttributesUpdatedByData = {
  attributes?: TerminalCreatedByDataAttributesUpdatedByDataAttributes;
  id?: number;
};

export type TerminalCreatedByDataAttributesUpdatedBy = {
  data?: TerminalCreatedByDataAttributesUpdatedByData;
};

export type TerminalCreatedByDataAttributesRolesDataItem = {
  attributes?: TerminalCreatedByDataAttributesRolesDataItemAttributes;
  id?: number;
};

export type TerminalCreatedByDataAttributesRoles = {
  data?: TerminalCreatedByDataAttributesRolesDataItem[];
};

export type TerminalCreatedByDataAttributesRolesDataItemAttributesUsersDataItemAttributes =
  { [key: string]: any };

export type TerminalCreatedByDataAttributesRolesDataItemAttributesUsersDataItem =
  {
    attributes?: TerminalCreatedByDataAttributesRolesDataItemAttributesUsersDataItemAttributes;
    id?: number;
  };

export type TerminalCreatedByDataAttributesRolesDataItemAttributesUsers = {
  data?: TerminalCreatedByDataAttributesRolesDataItemAttributesUsersDataItem[];
};

export type TerminalCreatedByDataAttributesRolesDataItemAttributes = {
  code?: string;
  createdAt?: string;
  createdBy?: TerminalCreatedByDataAttributesRolesDataItemAttributesCreatedBy;
  description?: string;
  name?: string;
  permissions?: TerminalCreatedByDataAttributesRolesDataItemAttributesPermissions;
  updatedAt?: string;
  updatedBy?: TerminalCreatedByDataAttributesRolesDataItemAttributesUpdatedBy;
  users?: TerminalCreatedByDataAttributesRolesDataItemAttributesUsers;
};

export type TerminalCreatedByDataAttributesRolesDataItemAttributesUpdatedByDataAttributes =
  { [key: string]: any };

export type TerminalCreatedByDataAttributesRolesDataItemAttributesUpdatedByData =
  {
    attributes?: TerminalCreatedByDataAttributesRolesDataItemAttributesUpdatedByDataAttributes;
    id?: number;
  };

export type TerminalCreatedByDataAttributesRolesDataItemAttributesUpdatedBy = {
  data?: TerminalCreatedByDataAttributesRolesDataItemAttributesUpdatedByData;
};

export type TerminalCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItem =
  {
    attributes?: TerminalCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributes;
    id?: number;
  };

export type TerminalCreatedByDataAttributesRolesDataItemAttributesPermissions =
  {
    data?: TerminalCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItem[];
  };

export type TerminalCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributesUpdatedByDataAttributes =
  { [key: string]: any };

export type TerminalCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributesUpdatedByData =
  {
    attributes?: TerminalCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributesUpdatedByDataAttributes;
    id?: number;
  };

export type TerminalCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributesUpdatedBy =
  {
    data?: TerminalCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributesUpdatedByData;
  };

export type TerminalCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributes =
  {
    action?: string;
    actionParameters?: unknown;
    conditions?: unknown;
    createdAt?: string;
    createdBy?: TerminalCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributesCreatedBy;
    properties?: unknown;
    role?: TerminalCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributesRole;
    subject?: string;
    updatedAt?: string;
    updatedBy?: TerminalCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributesUpdatedBy;
  };

export type TerminalCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributesRoleDataAttributes =
  { [key: string]: any };

export type TerminalCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributesRoleData =
  {
    attributes?: TerminalCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributesRoleDataAttributes;
    id?: number;
  };

export type TerminalCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributesRole =
  {
    data?: TerminalCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributesRoleData;
  };

export type TerminalCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributesCreatedByDataAttributes =
  { [key: string]: any };

export type TerminalCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributesCreatedByData =
  {
    attributes?: TerminalCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributesCreatedByDataAttributes;
    id?: number;
  };

export type TerminalCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributesCreatedBy =
  {
    data?: TerminalCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributesCreatedByData;
  };

export type TerminalCreatedByDataAttributesRolesDataItemAttributesCreatedByDataAttributes =
  { [key: string]: any };

export type TerminalCreatedByDataAttributesRolesDataItemAttributesCreatedByData =
  {
    attributes?: TerminalCreatedByDataAttributesRolesDataItemAttributesCreatedByDataAttributes;
    id?: number;
  };

export type TerminalCreatedByDataAttributesRolesDataItemAttributesCreatedBy = {
  data?: TerminalCreatedByDataAttributesRolesDataItemAttributesCreatedByData;
};

export type TerminalCreatedByDataAttributesCreatedByDataAttributes = {
  [key: string]: any;
};

export type TerminalCreatedByDataAttributesCreatedByData = {
  attributes?: TerminalCreatedByDataAttributesCreatedByDataAttributes;
  id?: number;
};

export type TerminalCreatedByDataAttributesCreatedBy = {
  data?: TerminalCreatedByDataAttributesCreatedByData;
};

export type TerminalListResponseMetaPagination = {
  page?: number;
  /** @maximum 1 */
  pageCount?: number;
  /** @minimum 25 */
  pageSize?: number;
  total?: number;
};

export type TerminalListResponseMeta = {
  pagination?: TerminalListResponseMetaPagination;
};

export interface TerminalListResponseDataItem {
  attributes?: Terminal;
  id?: number;
}

export interface TerminalListResponse {
  data?: TerminalListResponseDataItem[];
  meta?: TerminalListResponseMeta;
}

export type TerminalRequestData = {
  name: string;
};

export interface TerminalRequest {
  data: TerminalRequestData;
}

export type LoungeResponseMeta = { [key: string]: any };

export interface LoungeResponse {
  data?: LoungeResponseDataObject;
  meta?: LoungeResponseMeta;
}

export type LoungeUpdatedByDataAttributes = { [key: string]: any };

export type LoungeUpdatedByData = {
  attributes?: LoungeUpdatedByDataAttributes;
  id?: number;
};

export type LoungeUpdatedBy = {
  data?: LoungeUpdatedByData;
};

export type LoungeLocalizations = {
  data?: LoungeListResponseDataItemLocalized[];
};

export interface Lounge {
  airport?: LoungeAirport;
  alliance_access?: LoungeAllianceAccess;
  ambiguous_access: boolean;
  amenities?: LoungeAmenities;
  cards?: LoungeCards;
  createdAt?: string;
  createdBy?: LoungeCreatedBy;
  daypass?: string;
  description: string;
  detriments?: LoungeDetriments;
  directions?: string;
  featured?: boolean;
  googlePlaceId: string;
  guest?: string;
  locale?: string;
  localizations?: LoungeLocalizations;
  moreInfo?: string;
  name?: string;
  notes?: string;
  priorityPass?: boolean;
  slug?: string;
  terminal: string;
  updatedAt?: string;
  updatedBy?: LoungeUpdatedBy;
}

export interface LoungeResponseDataObject {
  attributes?: Lounge;
  id?: number;
}

export type LoungeDetrimentsDataItemAttributes = { [key: string]: any };

export type LoungeDetrimentsDataItem = {
  attributes?: LoungeDetrimentsDataItemAttributes;
  id?: number;
};

export type LoungeDetriments = {
  data?: LoungeDetrimentsDataItem[];
};

export type LoungeCreatedByDataAttributes = { [key: string]: any };

export type LoungeCreatedByData = {
  attributes?: LoungeCreatedByDataAttributes;
  id?: number;
};

export type LoungeCreatedBy = {
  data?: LoungeCreatedByData;
};

export type LoungeCardsDataItemAttributes = { [key: string]: any };

export type LoungeCardsDataItem = {
  attributes?: LoungeCardsDataItemAttributes;
  id?: number;
};

export type LoungeCards = {
  data?: LoungeCardsDataItem[];
};

export type LoungeAmenitiesDataItemAttributes = { [key: string]: any };

export type LoungeAmenitiesDataItem = {
  attributes?: LoungeAmenitiesDataItemAttributes;
  id?: number;
};

export type LoungeAmenities = {
  data?: LoungeAmenitiesDataItem[];
};

export type LoungeAllianceAccessDataItemAttributes = { [key: string]: any };

export type LoungeAllianceAccessDataItem = {
  attributes?: LoungeAllianceAccessDataItemAttributes;
  id?: number;
};

export type LoungeAllianceAccess = {
  data?: LoungeAllianceAccessDataItem[];
};

export type LoungeAirport = {
  data?: LoungeAirportData;
};

export type LoungeAirportDataAttributesUpdatedByDataAttributes = {
  [key: string]: any;
};

export type LoungeAirportDataAttributesUpdatedByData = {
  attributes?: LoungeAirportDataAttributesUpdatedByDataAttributes;
  id?: number;
};

export type LoungeAirportDataAttributesUpdatedBy = {
  data?: LoungeAirportDataAttributesUpdatedByData;
};

export type LoungeAirportDataAttributesState =
  (typeof LoungeAirportDataAttributesState)[keyof typeof LoungeAirportDataAttributesState];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const LoungeAirportDataAttributesState = {
  AL: "AL",
  AK: "AK",
  AZ: "AZ",
  AR: "AR",
  CA: "CA",
  CO: "CO",
  CT: "CT",
  DE: "DE",
  FL: "FL",
  GA: "GA",
  HI: "HI",
  ID: "ID",
  IL: "IL",
  IN: "IN",
  IA: "IA",
  KS: "KS",
  KY: "KY",
  LA: "LA",
  ME: "ME",
  MD: "MD",
  MA: "MA",
  MI: "MI",
  MN: "MN",
  MS: "MS",
  MO: "MO",
  MT: "MT",
  NE: "NE",
  NV: "NV",
  NH: "NH",
  NJ: "NJ",
  NM: "NM",
  NY: "NY",
  NC: "NC",
  ND: "ND",
  OH: "OH",
  OK: "OK",
  OR: "OR",
  PA: "PA",
  RI: "RI",
  SC: "SC",
  SD: "SD",
  TN: "TN",
  TX: "TX",
  UT: "UT",
  VT: "VT",
  VA: "VA",
  WA: "WA",
  WV: "WV",
  WI: "WI",
  WY: "WY",
} as const;

export type LoungeAirportDataAttributesLoungesDataItem = {
  attributes?: LoungeAirportDataAttributesLoungesDataItemAttributes;
  id?: number;
};

export type LoungeAirportDataAttributesLounges = {
  data?: LoungeAirportDataAttributesLoungesDataItem[];
};

export type LoungeAirportDataAttributes = {
  accessDetails?: string;
  city?: string;
  code?: string;
  country?: LoungeAirportDataAttributesCountry;
  createdAt?: string;
  createdBy?: LoungeAirportDataAttributesCreatedBy;
  dayPass?: string;
  lounges?: LoungeAirportDataAttributesLounges;
  name?: string;
  state?: LoungeAirportDataAttributesState;
  updatedAt?: string;
  updatedBy?: LoungeAirportDataAttributesUpdatedBy;
};

export type LoungeAirportData = {
  attributes?: LoungeAirportDataAttributes;
  id?: number;
};

export type LoungeAirportDataAttributesLoungesDataItemAttributesUpdatedByDataAttributes =
  { [key: string]: any };

export type LoungeAirportDataAttributesLoungesDataItemAttributesUpdatedByData =
  {
    attributes?: LoungeAirportDataAttributesLoungesDataItemAttributesUpdatedByDataAttributes;
    id?: number;
  };

export type LoungeAirportDataAttributesLoungesDataItemAttributesUpdatedBy = {
  data?: LoungeAirportDataAttributesLoungesDataItemAttributesUpdatedByData;
};

export type LoungeAirportDataAttributesLoungesDataItemAttributesLocalizations =
  {
    data?: unknown[];
  };

export type LoungeAirportDataAttributesLoungesDataItemAttributes = {
  airport?: LoungeAirportDataAttributesLoungesDataItemAttributesAirport;
  alliance_access?: LoungeAirportDataAttributesLoungesDataItemAttributesAllianceAccess;
  ambiguous_access?: boolean;
  amenities?: LoungeAirportDataAttributesLoungesDataItemAttributesAmenities;
  cards?: LoungeAirportDataAttributesLoungesDataItemAttributesCards;
  createdAt?: string;
  createdBy?: LoungeAirportDataAttributesLoungesDataItemAttributesCreatedBy;
  daypass?: string;
  description?: string;
  detriments?: LoungeAirportDataAttributesLoungesDataItemAttributesDetriments;
  directions?: string;
  featured?: boolean;
  googlePlaceId?: string;
  guest?: string;
  locale?: string;
  localizations?: LoungeAirportDataAttributesLoungesDataItemAttributesLocalizations;
  moreInfo?: string;
  name?: string;
  notes?: string;
  priorityPass?: boolean;
  slug?: string;
  terminal?: string;
  updatedAt?: string;
  updatedBy?: LoungeAirportDataAttributesLoungesDataItemAttributesUpdatedBy;
};

export type LoungeAirportDataAttributesLoungesDataItemAttributesDetrimentsDataItemAttributesUpdatedByDataAttributes =
  { [key: string]: any };

export type LoungeAirportDataAttributesLoungesDataItemAttributesDetrimentsDataItemAttributesUpdatedByData =
  {
    attributes?: LoungeAirportDataAttributesLoungesDataItemAttributesDetrimentsDataItemAttributesUpdatedByDataAttributes;
    id?: number;
  };

export type LoungeAirportDataAttributesLoungesDataItemAttributesDetrimentsDataItemAttributesUpdatedBy =
  {
    data?: LoungeAirportDataAttributesLoungesDataItemAttributesDetrimentsDataItemAttributesUpdatedByData;
  };

export type LoungeAirportDataAttributesLoungesDataItemAttributesDetrimentsDataItemAttributesIconData =
  {
    attributes?: LoungeAirportDataAttributesLoungesDataItemAttributesDetrimentsDataItemAttributesIconDataAttributes;
    id?: number;
  };

export type LoungeAirportDataAttributesLoungesDataItemAttributesDetrimentsDataItemAttributesIcon =
  {
    data?: LoungeAirportDataAttributesLoungesDataItemAttributesDetrimentsDataItemAttributesIconData;
  };

export type LoungeAirportDataAttributesLoungesDataItemAttributesDetrimentsDataItemAttributes =
  {
    createdAt?: string;
    createdBy?: LoungeAirportDataAttributesLoungesDataItemAttributesDetrimentsDataItemAttributesCreatedBy;
    icon?: LoungeAirportDataAttributesLoungesDataItemAttributesDetrimentsDataItemAttributesIcon;
    name?: string;
    updatedAt?: string;
    updatedBy?: LoungeAirportDataAttributesLoungesDataItemAttributesDetrimentsDataItemAttributesUpdatedBy;
  };

export type LoungeAirportDataAttributesLoungesDataItemAttributesDetrimentsDataItem =
  {
    attributes?: LoungeAirportDataAttributesLoungesDataItemAttributesDetrimentsDataItemAttributes;
    id?: number;
  };

export type LoungeAirportDataAttributesLoungesDataItemAttributesDetriments = {
  data?: LoungeAirportDataAttributesLoungesDataItemAttributesDetrimentsDataItem[];
};

export type LoungeAirportDataAttributesLoungesDataItemAttributesDetrimentsDataItemAttributesIconDataAttributesUpdatedByDataAttributes =
  { [key: string]: any };

export type LoungeAirportDataAttributesLoungesDataItemAttributesDetrimentsDataItemAttributesIconDataAttributesUpdatedByData =
  {
    attributes?: LoungeAirportDataAttributesLoungesDataItemAttributesDetrimentsDataItemAttributesIconDataAttributesUpdatedByDataAttributes;
    id?: number;
  };

export type LoungeAirportDataAttributesLoungesDataItemAttributesDetrimentsDataItemAttributesIconDataAttributesUpdatedBy =
  {
    data?: LoungeAirportDataAttributesLoungesDataItemAttributesDetrimentsDataItemAttributesIconDataAttributesUpdatedByData;
  };

export type LoungeAirportDataAttributesLoungesDataItemAttributesDetrimentsDataItemAttributesIconDataAttributesRelatedDataItemAttributes =
  { [key: string]: any };

export type LoungeAirportDataAttributesLoungesDataItemAttributesDetrimentsDataItemAttributesIconDataAttributesRelatedDataItem =
  {
    attributes?: LoungeAirportDataAttributesLoungesDataItemAttributesDetrimentsDataItemAttributesIconDataAttributesRelatedDataItemAttributes;
    id?: number;
  };

export type LoungeAirportDataAttributesLoungesDataItemAttributesDetrimentsDataItemAttributesIconDataAttributesRelated =
  {
    data?: LoungeAirportDataAttributesLoungesDataItemAttributesDetrimentsDataItemAttributesIconDataAttributesRelatedDataItem[];
  };

export type LoungeAirportDataAttributesLoungesDataItemAttributesDetrimentsDataItemAttributesIconDataAttributesFolderDataAttributes =
  { [key: string]: any };

export type LoungeAirportDataAttributesLoungesDataItemAttributesDetrimentsDataItemAttributesIconDataAttributesFolderData =
  {
    attributes?: LoungeAirportDataAttributesLoungesDataItemAttributesDetrimentsDataItemAttributesIconDataAttributesFolderDataAttributes;
    id?: number;
  };

export type LoungeAirportDataAttributesLoungesDataItemAttributesDetrimentsDataItemAttributesIconDataAttributesFolder =
  {
    data?: LoungeAirportDataAttributesLoungesDataItemAttributesDetrimentsDataItemAttributesIconDataAttributesFolderData;
  };

export type LoungeAirportDataAttributesLoungesDataItemAttributesDetrimentsDataItemAttributesIconDataAttributes =
  {
    alternativeText?: string;
    caption?: string;
    createdAt?: string;
    createdBy?: LoungeAirportDataAttributesLoungesDataItemAttributesDetrimentsDataItemAttributesIconDataAttributesCreatedBy;
    ext?: string;
    folder?: LoungeAirportDataAttributesLoungesDataItemAttributesDetrimentsDataItemAttributesIconDataAttributesFolder;
    folderPath?: string;
    formats?: unknown;
    hash?: string;
    height?: number;
    mime?: string;
    name?: string;
    previewUrl?: string;
    provider?: string;
    provider_metadata?: unknown;
    related?: LoungeAirportDataAttributesLoungesDataItemAttributesDetrimentsDataItemAttributesIconDataAttributesRelated;
    size?: number;
    updatedAt?: string;
    updatedBy?: LoungeAirportDataAttributesLoungesDataItemAttributesDetrimentsDataItemAttributesIconDataAttributesUpdatedBy;
    url?: string;
    width?: number;
  };

export type LoungeAirportDataAttributesLoungesDataItemAttributesDetrimentsDataItemAttributesIconDataAttributesCreatedByDataAttributes =
  { [key: string]: any };

export type LoungeAirportDataAttributesLoungesDataItemAttributesDetrimentsDataItemAttributesIconDataAttributesCreatedByData =
  {
    attributes?: LoungeAirportDataAttributesLoungesDataItemAttributesDetrimentsDataItemAttributesIconDataAttributesCreatedByDataAttributes;
    id?: number;
  };

export type LoungeAirportDataAttributesLoungesDataItemAttributesDetrimentsDataItemAttributesIconDataAttributesCreatedBy =
  {
    data?: LoungeAirportDataAttributesLoungesDataItemAttributesDetrimentsDataItemAttributesIconDataAttributesCreatedByData;
  };

export type LoungeAirportDataAttributesLoungesDataItemAttributesDetrimentsDataItemAttributesCreatedByDataAttributes =
  { [key: string]: any };

export type LoungeAirportDataAttributesLoungesDataItemAttributesDetrimentsDataItemAttributesCreatedByData =
  {
    attributes?: LoungeAirportDataAttributesLoungesDataItemAttributesDetrimentsDataItemAttributesCreatedByDataAttributes;
    id?: number;
  };

export type LoungeAirportDataAttributesLoungesDataItemAttributesDetrimentsDataItemAttributesCreatedBy =
  {
    data?: LoungeAirportDataAttributesLoungesDataItemAttributesDetrimentsDataItemAttributesCreatedByData;
  };

export type LoungeAirportDataAttributesLoungesDataItemAttributesCreatedByDataAttributes =
  { [key: string]: any };

export type LoungeAirportDataAttributesLoungesDataItemAttributesCreatedByData =
  {
    attributes?: LoungeAirportDataAttributesLoungesDataItemAttributesCreatedByDataAttributes;
    id?: number;
  };

export type LoungeAirportDataAttributesLoungesDataItemAttributesCreatedBy = {
  data?: LoungeAirportDataAttributesLoungesDataItemAttributesCreatedByData;
};

export type LoungeAirportDataAttributesLoungesDataItemAttributesCardsDataItem =
  {
    attributes?: LoungeAirportDataAttributesLoungesDataItemAttributesCardsDataItemAttributes;
    id?: number;
  };

export type LoungeAirportDataAttributesLoungesDataItemAttributesCards = {
  data?: LoungeAirportDataAttributesLoungesDataItemAttributesCardsDataItem[];
};

export type LoungeAirportDataAttributesLoungesDataItemAttributesCardsDataItemAttributesUpdatedByDataAttributes =
  { [key: string]: any };

export type LoungeAirportDataAttributesLoungesDataItemAttributesCardsDataItemAttributesUpdatedByData =
  {
    attributes?: LoungeAirportDataAttributesLoungesDataItemAttributesCardsDataItemAttributesUpdatedByDataAttributes;
    id?: number;
  };

export type LoungeAirportDataAttributesLoungesDataItemAttributesCardsDataItemAttributesUpdatedBy =
  {
    data?: LoungeAirportDataAttributesLoungesDataItemAttributesCardsDataItemAttributesUpdatedByData;
  };

export type LoungeAirportDataAttributesLoungesDataItemAttributesCardsDataItemAttributesProcessor =
  (typeof LoungeAirportDataAttributesLoungesDataItemAttributesCardsDataItemAttributesProcessor)[keyof typeof LoungeAirportDataAttributesLoungesDataItemAttributesCardsDataItemAttributesProcessor];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const LoungeAirportDataAttributesLoungesDataItemAttributesCardsDataItemAttributesProcessor =
  {
    Visa: "Visa",
    Amex: "Amex",
    Mastercard: "Mastercard",
  } as const;

export type LoungeAirportDataAttributesLoungesDataItemAttributesCardsDataItemAttributesPersonalOrBiz =
  (typeof LoungeAirportDataAttributesLoungesDataItemAttributesCardsDataItemAttributesPersonalOrBiz)[keyof typeof LoungeAirportDataAttributesLoungesDataItemAttributesCardsDataItemAttributesPersonalOrBiz];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const LoungeAirportDataAttributesLoungesDataItemAttributesCardsDataItemAttributesPersonalOrBiz =
  {
    Personal: "Personal",
    Business: "Business",
  } as const;

export type LoungeAirportDataAttributesLoungesDataItemAttributesCardsDataItemAttributesIconData =
  {
    attributes?: LoungeAirportDataAttributesLoungesDataItemAttributesCardsDataItemAttributesIconDataAttributes;
    id?: number;
  };

export type LoungeAirportDataAttributesLoungesDataItemAttributesCardsDataItemAttributesIcon =
  {
    data?: LoungeAirportDataAttributesLoungesDataItemAttributesCardsDataItemAttributesIconData;
  };

export type LoungeAirportDataAttributesLoungesDataItemAttributesCardsDataItemAttributes =
  {
    annualFee?: number;
    bank?: LoungeAirportDataAttributesLoungesDataItemAttributesCardsDataItemAttributesBank;
    createdAt?: string;
    createdBy?: LoungeAirportDataAttributesLoungesDataItemAttributesCardsDataItemAttributesCreatedBy;
    icon?: LoungeAirportDataAttributesLoungesDataItemAttributesCardsDataItemAttributesIcon;
    name?: string;
    personalOrBiz?: LoungeAirportDataAttributesLoungesDataItemAttributesCardsDataItemAttributesPersonalOrBiz;
    processor?: LoungeAirportDataAttributesLoungesDataItemAttributesCardsDataItemAttributesProcessor;
    updatedAt?: string;
    updatedBy?: LoungeAirportDataAttributesLoungesDataItemAttributesCardsDataItemAttributesUpdatedBy;
  };

export type LoungeAirportDataAttributesLoungesDataItemAttributesCardsDataItemAttributesIconDataAttributesUpdatedByDataAttributes =
  { [key: string]: any };

export type LoungeAirportDataAttributesLoungesDataItemAttributesCardsDataItemAttributesIconDataAttributesUpdatedByData =
  {
    attributes?: LoungeAirportDataAttributesLoungesDataItemAttributesCardsDataItemAttributesIconDataAttributesUpdatedByDataAttributes;
    id?: number;
  };

export type LoungeAirportDataAttributesLoungesDataItemAttributesCardsDataItemAttributesIconDataAttributesUpdatedBy =
  {
    data?: LoungeAirportDataAttributesLoungesDataItemAttributesCardsDataItemAttributesIconDataAttributesUpdatedByData;
  };

export type LoungeAirportDataAttributesLoungesDataItemAttributesCardsDataItemAttributesIconDataAttributesRelatedDataItemAttributes =
  { [key: string]: any };

export type LoungeAirportDataAttributesLoungesDataItemAttributesCardsDataItemAttributesIconDataAttributesRelatedDataItem =
  {
    attributes?: LoungeAirportDataAttributesLoungesDataItemAttributesCardsDataItemAttributesIconDataAttributesRelatedDataItemAttributes;
    id?: number;
  };

export type LoungeAirportDataAttributesLoungesDataItemAttributesCardsDataItemAttributesIconDataAttributesRelated =
  {
    data?: LoungeAirportDataAttributesLoungesDataItemAttributesCardsDataItemAttributesIconDataAttributesRelatedDataItem[];
  };

export type LoungeAirportDataAttributesLoungesDataItemAttributesCardsDataItemAttributesIconDataAttributesFolderDataAttributes =
  { [key: string]: any };

export type LoungeAirportDataAttributesLoungesDataItemAttributesCardsDataItemAttributesIconDataAttributesFolderData =
  {
    attributes?: LoungeAirportDataAttributesLoungesDataItemAttributesCardsDataItemAttributesIconDataAttributesFolderDataAttributes;
    id?: number;
  };

export type LoungeAirportDataAttributesLoungesDataItemAttributesCardsDataItemAttributesIconDataAttributesFolder =
  {
    data?: LoungeAirportDataAttributesLoungesDataItemAttributesCardsDataItemAttributesIconDataAttributesFolderData;
  };

export type LoungeAirportDataAttributesLoungesDataItemAttributesCardsDataItemAttributesIconDataAttributesCreatedByData =
  {
    attributes?: LoungeAirportDataAttributesLoungesDataItemAttributesCardsDataItemAttributesIconDataAttributesCreatedByDataAttributes;
    id?: number;
  };

export type LoungeAirportDataAttributesLoungesDataItemAttributesCardsDataItemAttributesIconDataAttributesCreatedBy =
  {
    data?: LoungeAirportDataAttributesLoungesDataItemAttributesCardsDataItemAttributesIconDataAttributesCreatedByData;
  };

export type LoungeAirportDataAttributesLoungesDataItemAttributesCardsDataItemAttributesIconDataAttributes =
  {
    alternativeText?: string;
    caption?: string;
    createdAt?: string;
    createdBy?: LoungeAirportDataAttributesLoungesDataItemAttributesCardsDataItemAttributesIconDataAttributesCreatedBy;
    ext?: string;
    folder?: LoungeAirportDataAttributesLoungesDataItemAttributesCardsDataItemAttributesIconDataAttributesFolder;
    folderPath?: string;
    formats?: unknown;
    hash?: string;
    height?: number;
    mime?: string;
    name?: string;
    previewUrl?: string;
    provider?: string;
    provider_metadata?: unknown;
    related?: LoungeAirportDataAttributesLoungesDataItemAttributesCardsDataItemAttributesIconDataAttributesRelated;
    size?: number;
    updatedAt?: string;
    updatedBy?: LoungeAirportDataAttributesLoungesDataItemAttributesCardsDataItemAttributesIconDataAttributesUpdatedBy;
    url?: string;
    width?: number;
  };

export type LoungeAirportDataAttributesLoungesDataItemAttributesCardsDataItemAttributesIconDataAttributesCreatedByDataAttributes =
  { [key: string]: any };

export type LoungeAirportDataAttributesLoungesDataItemAttributesCardsDataItemAttributesCreatedByDataAttributes =
  { [key: string]: any };

export type LoungeAirportDataAttributesLoungesDataItemAttributesCardsDataItemAttributesCreatedByData =
  {
    attributes?: LoungeAirportDataAttributesLoungesDataItemAttributesCardsDataItemAttributesCreatedByDataAttributes;
    id?: number;
  };

export type LoungeAirportDataAttributesLoungesDataItemAttributesCardsDataItemAttributesCreatedBy =
  {
    data?: LoungeAirportDataAttributesLoungesDataItemAttributesCardsDataItemAttributesCreatedByData;
  };

export type LoungeAirportDataAttributesLoungesDataItemAttributesCardsDataItemAttributesBank =
  (typeof LoungeAirportDataAttributesLoungesDataItemAttributesCardsDataItemAttributesBank)[keyof typeof LoungeAirportDataAttributesLoungesDataItemAttributesCardsDataItemAttributesBank];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const LoungeAirportDataAttributesLoungesDataItemAttributesCardsDataItemAttributesBank =
  {
    Chase: "Chase",
    Amex: "Amex",
    Barclays: "Barclays",
    Citi: "Citi",
    Bank_of_America: "Bank of America",
    Capital_One: "Capital One",
    Wells_Fargo: "Wells Fargo",
  } as const;

export type LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItem =
  {
    attributes?: LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributes;
    id?: number;
  };

export type LoungeAirportDataAttributesLoungesDataItemAttributesAmenities = {
  data?: LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItem[];
};

export type LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesUpdatedByDataAttributes =
  { [key: string]: any };

export type LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesUpdatedByData =
  {
    attributes?: LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesUpdatedByDataAttributes;
    id?: number;
  };

export type LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesUpdatedBy =
  {
    data?: LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesUpdatedByData;
  };

export type LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIcon =
  {
    data?: LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconData;
  };

export type LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributes =
  {
    createdAt?: string;
    createdBy?: LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesCreatedBy;
    icon?: LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIcon;
    name?: string;
    updatedAt?: string;
    updatedBy?: LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesUpdatedBy;
  };

export type LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesUpdatedByDataAttributes =
  { [key: string]: any };

export type LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesUpdatedByData =
  {
    attributes?: LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesUpdatedByDataAttributes;
    id?: number;
  };

export type LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesUpdatedBy =
  {
    data?: LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesUpdatedByData;
  };

export type LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesRelatedDataItemAttributes =
  { [key: string]: any };

export type LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesRelatedDataItem =
  {
    attributes?: LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesRelatedDataItemAttributes;
    id?: number;
  };

export type LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesRelated =
  {
    data?: LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesRelatedDataItem[];
  };

export type LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributes =
  {
    children?: LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesChildren;
    createdAt?: string;
    createdBy?: LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesCreatedBy;
    files?: LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesFiles;
    name?: string;
    parent?: LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesParent;
    path?: string;
    pathId?: number;
    updatedAt?: string;
    updatedBy?: LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesUpdatedBy;
  };

export type LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderData =
  {
    attributes?: LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributes;
    id?: number;
  };

export type LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolder =
  {
    data?: LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderData;
  };

export type LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributes =
  {
    alternativeText?: string;
    caption?: string;
    createdAt?: string;
    createdBy?: LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesCreatedBy;
    ext?: string;
    folder?: LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolder;
    folderPath?: string;
    formats?: unknown;
    hash?: string;
    height?: number;
    mime?: string;
    name?: string;
    previewUrl?: string;
    provider?: string;
    provider_metadata?: unknown;
    related?: LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesRelated;
    size?: number;
    updatedAt?: string;
    updatedBy?: LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesUpdatedBy;
    url?: string;
    width?: number;
  };

export type LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconData =
  {
    attributes?: LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributes;
    id?: number;
  };

export type LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesUpdatedByDataAttributes =
  { [key: string]: any };

export type LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesUpdatedByData =
  {
    attributes?: LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesUpdatedByDataAttributes;
    id?: number;
  };

export type LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesUpdatedBy =
  {
    data?: LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesUpdatedByData;
  };

export type LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesParentDataAttributes =
  { [key: string]: any };

export type LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesParentData =
  {
    attributes?: LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesParentDataAttributes;
    id?: number;
  };

export type LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesParent =
  {
    data?: LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesParentData;
  };

export type LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesFilesDataItem =
  {
    attributes?: LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesFilesDataItemAttributes;
    id?: number;
  };

export type LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesFiles =
  {
    data?: LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesFilesDataItem[];
  };

export type LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesFilesDataItemAttributesUpdatedByDataAttributes =
  { [key: string]: any };

export type LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesFilesDataItemAttributesUpdatedByData =
  {
    attributes?: LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesFilesDataItemAttributesUpdatedByDataAttributes;
    id?: number;
  };

export type LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesFilesDataItemAttributesUpdatedBy =
  {
    data?: LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesFilesDataItemAttributesUpdatedByData;
  };

export type LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesFilesDataItemAttributesRelatedDataItemAttributes =
  { [key: string]: any };

export type LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesFilesDataItemAttributesRelatedDataItem =
  {
    attributes?: LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesFilesDataItemAttributesRelatedDataItemAttributes;
    id?: number;
  };

export type LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesFilesDataItemAttributesRelated =
  {
    data?: LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesFilesDataItemAttributesRelatedDataItem[];
  };

export type LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesFilesDataItemAttributesFolderDataAttributes =
  { [key: string]: any };

export type LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesFilesDataItemAttributesFolderData =
  {
    attributes?: LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesFilesDataItemAttributesFolderDataAttributes;
    id?: number;
  };

export type LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesFilesDataItemAttributesFolder =
  {
    data?: LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesFilesDataItemAttributesFolderData;
  };

export type LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByData =
  {
    attributes?: LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributes;
    id?: number;
  };

export type LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedBy =
  {
    data?: LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByData;
  };

export type LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesFilesDataItemAttributes =
  {
    alternativeText?: string;
    caption?: string;
    createdAt?: string;
    createdBy?: LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedBy;
    ext?: string;
    folder?: LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesFilesDataItemAttributesFolder;
    folderPath?: string;
    formats?: unknown;
    hash?: string;
    height?: number;
    mime?: string;
    name?: string;
    previewUrl?: string;
    provider?: string;
    provider_metadata?: unknown;
    related?: LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesFilesDataItemAttributesRelated;
    size?: number;
    updatedAt?: string;
    updatedBy?: LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesFilesDataItemAttributesUpdatedBy;
    url?: string;
    width?: number;
  };

export type LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesUpdatedByDataAttributes =
  { [key: string]: any };

export type LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesUpdatedByData =
  {
    attributes?: LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesUpdatedByDataAttributes;
    id?: number;
  };

export type LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesUpdatedBy =
  {
    data?: LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesUpdatedByData;
  };

export type LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItem =
  {
    attributes?: LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributes;
    id?: number;
  };

export type LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRoles =
  {
    data?: LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItem[];
  };

export type LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributes =
  {
    blocked?: boolean;
    createdAt?: string;
    createdBy?: LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesCreatedBy;
    email?: string;
    firstname?: string;
    isActive?: boolean;
    lastname?: string;
    preferedLanguage?: string;
    registrationToken?: string;
    resetPasswordToken?: string;
    roles?: LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRoles;
    updatedAt?: string;
    updatedBy?: LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesUpdatedBy;
    username?: string;
  };

export type LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributes =
  {
    code?: string;
    createdAt?: string;
    createdBy?: LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesCreatedBy;
    description?: string;
    name?: string;
    permissions?: LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesPermissions;
    updatedAt?: string;
    updatedBy?: LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesUpdatedBy;
    users?: LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesUsers;
  };

export type LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesUsersDataItemAttributes =
  { [key: string]: any };

export type LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesUsersDataItem =
  {
    attributes?: LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesUsersDataItemAttributes;
    id?: number;
  };

export type LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesUsers =
  {
    data?: LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesUsersDataItem[];
  };

export type LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesUpdatedByDataAttributes =
  { [key: string]: any };

export type LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesUpdatedByData =
  {
    attributes?: LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesUpdatedByDataAttributes;
    id?: number;
  };

export type LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesUpdatedBy =
  {
    data?: LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesUpdatedByData;
  };

export type LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItem =
  {
    attributes?: LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributes;
    id?: number;
  };

export type LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesPermissions =
  {
    data?: LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItem[];
  };

export type LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributesUpdatedByDataAttributes =
  { [key: string]: any };

export type LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributesUpdatedByData =
  {
    attributes?: LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributesUpdatedByDataAttributes;
    id?: number;
  };

export type LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributesUpdatedBy =
  {
    data?: LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributesUpdatedByData;
  };

export type LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributes =
  {
    action?: string;
    actionParameters?: unknown;
    conditions?: unknown;
    createdAt?: string;
    createdBy?: LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributesCreatedBy;
    properties?: unknown;
    role?: LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributesRole;
    subject?: string;
    updatedAt?: string;
    updatedBy?: LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributesUpdatedBy;
  };

export type LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributesRoleDataAttributes =
  { [key: string]: any };

export type LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributesRoleData =
  {
    attributes?: LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributesRoleDataAttributes;
    id?: number;
  };

export type LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributesRole =
  {
    data?: LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributesRoleData;
  };

export type LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributesCreatedByDataAttributes =
  { [key: string]: any };

export type LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributesCreatedByData =
  {
    attributes?: LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributesCreatedByDataAttributes;
    id?: number;
  };

export type LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributesCreatedBy =
  {
    data?: LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributesCreatedByData;
  };

export type LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesCreatedByDataAttributes =
  { [key: string]: any };

export type LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesCreatedByData =
  {
    attributes?: LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesCreatedByDataAttributes;
    id?: number;
  };

export type LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesCreatedBy =
  {
    data?: LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesCreatedByData;
  };

export type LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesCreatedByDataAttributes =
  { [key: string]: any };

export type LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesCreatedByData =
  {
    attributes?: LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesCreatedByDataAttributes;
    id?: number;
  };

export type LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesCreatedBy =
  {
    data?: LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesCreatedByData;
  };

export type LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesCreatedByDataAttributes =
  { [key: string]: any };

export type LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesCreatedByData =
  {
    attributes?: LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesCreatedByDataAttributes;
    id?: number;
  };

export type LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesCreatedBy =
  {
    data?: LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesCreatedByData;
  };

export type LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesChildrenDataItemAttributes =
  { [key: string]: any };

export type LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesChildrenDataItem =
  {
    attributes?: LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesChildrenDataItemAttributes;
    id?: number;
  };

export type LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesChildren =
  {
    data?: LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesChildrenDataItem[];
  };

export type LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesCreatedByDataAttributes =
  { [key: string]: any };

export type LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesCreatedByData =
  {
    attributes?: LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesCreatedByDataAttributes;
    id?: number;
  };

export type LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesCreatedBy =
  {
    data?: LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesCreatedByData;
  };

export type LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesCreatedByDataAttributes =
  { [key: string]: any };

export type LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesCreatedByData =
  {
    attributes?: LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesCreatedByDataAttributes;
    id?: number;
  };

export type LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesCreatedBy =
  {
    data?: LoungeAirportDataAttributesLoungesDataItemAttributesAmenitiesDataItemAttributesCreatedByData;
  };

export type LoungeAirportDataAttributesLoungesDataItemAttributesAllianceAccessDataItem =
  {
    attributes?: LoungeAirportDataAttributesLoungesDataItemAttributesAllianceAccessDataItemAttributes;
    id?: number;
  };

export type LoungeAirportDataAttributesLoungesDataItemAttributesAllianceAccess =
  {
    data?: LoungeAirportDataAttributesLoungesDataItemAttributesAllianceAccessDataItem[];
  };

export type LoungeAirportDataAttributesLoungesDataItemAttributesAllianceAccessDataItemAttributesUpdatedByDataAttributes =
  { [key: string]: any };

export type LoungeAirportDataAttributesLoungesDataItemAttributesAllianceAccessDataItemAttributesUpdatedByData =
  {
    attributes?: LoungeAirportDataAttributesLoungesDataItemAttributesAllianceAccessDataItemAttributesUpdatedByDataAttributes;
    id?: number;
  };

export type LoungeAirportDataAttributesLoungesDataItemAttributesAllianceAccessDataItemAttributesUpdatedBy =
  {
    data?: LoungeAirportDataAttributesLoungesDataItemAttributesAllianceAccessDataItemAttributesUpdatedByData;
  };

export type LoungeAirportDataAttributesLoungesDataItemAttributesAllianceAccessDataItemAttributes =
  {
    createdAt?: string;
    createdBy?: LoungeAirportDataAttributesLoungesDataItemAttributesAllianceAccessDataItemAttributesCreatedBy;
    name?: string;
    updatedAt?: string;
    updatedBy?: LoungeAirportDataAttributesLoungesDataItemAttributesAllianceAccessDataItemAttributesUpdatedBy;
    value?: string;
  };

export type LoungeAirportDataAttributesLoungesDataItemAttributesAllianceAccessDataItemAttributesCreatedByDataAttributes =
  { [key: string]: any };

export type LoungeAirportDataAttributesLoungesDataItemAttributesAllianceAccessDataItemAttributesCreatedByData =
  {
    attributes?: LoungeAirportDataAttributesLoungesDataItemAttributesAllianceAccessDataItemAttributesCreatedByDataAttributes;
    id?: number;
  };

export type LoungeAirportDataAttributesLoungesDataItemAttributesAllianceAccessDataItemAttributesCreatedBy =
  {
    data?: LoungeAirportDataAttributesLoungesDataItemAttributesAllianceAccessDataItemAttributesCreatedByData;
  };

export type LoungeAirportDataAttributesLoungesDataItemAttributesAirportDataAttributes =
  { [key: string]: any };

export type LoungeAirportDataAttributesLoungesDataItemAttributesAirportData = {
  attributes?: LoungeAirportDataAttributesLoungesDataItemAttributesAirportDataAttributes;
  id?: number;
};

export type LoungeAirportDataAttributesLoungesDataItemAttributesAirport = {
  data?: LoungeAirportDataAttributesLoungesDataItemAttributesAirportData;
};

export type LoungeAirportDataAttributesCreatedByDataAttributes = {
  [key: string]: any;
};

export type LoungeAirportDataAttributesCreatedByData = {
  attributes?: LoungeAirportDataAttributesCreatedByDataAttributes;
  id?: number;
};

export type LoungeAirportDataAttributesCreatedBy = {
  data?: LoungeAirportDataAttributesCreatedByData;
};

export type LoungeAirportDataAttributesCountry =
  (typeof LoungeAirportDataAttributesCountry)[keyof typeof LoungeAirportDataAttributesCountry];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const LoungeAirportDataAttributesCountry = {
  Argentina: "Argentina",
  Australia: "Australia",
  Austria: "Austria",
  Bahamas: "Bahamas",
  Bahrain: "Bahrain",
  Bangladesh: "Bangladesh",
  Belgium: "Belgium",
  Belize: "Belize",
  Brazil: "Brazil",
  Bulgaria: "Bulgaria",
  Cambodia: "Cambodia",
  Canada: "Canada",
  Chile: "Chile",
  China: "China",
  Colombia: "Colombia",
  Costa_Rica: "Costa Rica",
  Croatia: "Croatia",
  Cuba: "Cuba",
  Cyprus: "Cyprus",
  Czech_Republic: "Czech Republic",
  Denmark: "Denmark",
  Dominican_Republic: "Dominican Republic",
  Ecuador: "Ecuador",
  Egypt: "Egypt",
  El_Salvador: "El Salvador",
  Estonia: "Estonia",
  Fiji: "Fiji",
  Finland: "Finland",
  France: "France",
  Germany: "Germany",
  Greece: "Greece",
  Guatemala: "Guatemala",
  Honduras: "Honduras",
  Hungary: "Hungary",
  Iceland: "Iceland",
  India: "India",
  Indonesia: "Indonesia",
  Ireland: "Ireland",
  Israel: "Israel",
  Italy: "Italy",
  Jamaica: "Jamaica",
  Japan: "Japan",
  Jordan: "Jordan",
  Kenya: "Kenya",
  Kuwait: "Kuwait",
  Latvia: "Latvia",
  Lebanon: "Lebanon",
  Lithuania: "Lithuania",
  Luxembourg: "Luxembourg",
  Malaysia: "Malaysia",
  Malta: "Malta",
  Mauritius: "Mauritius",
  Mexico: "Mexico",
  Monaco: "Monaco",
  Montenegro: "Montenegro",
  Morocco: "Morocco",
  Myanmar: "Myanmar",
  Nepal: "Nepal",
  Netherlands: "Netherlands",
  New_Zealand: "New Zealand",
  Nicaragua: "Nicaragua",
  Nigeria: "Nigeria",
  Norway: "Norway",
  Oman: "Oman",
  Pakistan: "Pakistan",
  Panama: "Panama",
  Paraguay: "Paraguay",
  Peru: "Peru",
  Philippines: "Philippines",
  Poland: "Poland",
  Portugal: "Portugal",
  Qatar: "Qatar",
  Romania: "Romania",
  Russia: "Russia",
  Saint_Kitts_and_Nevis: "Saint Kitts and Nevis",
  Saint_Lucia: "Saint Lucia",
  Saudi_Arabia: "Saudi Arabia",
  Serbia: "Serbia",
  Singapore: "Singapore",
  Slovakia: "Slovakia",
  Slovenia: "Slovenia",
  South_Africa: "South Africa",
  South_Korea: "South Korea",
  Spain: "Spain",
  Sri_Lanka: "Sri Lanka",
  Sweden: "Sweden",
  Switzerland: "Switzerland",
  Taiwan: "Taiwan",
  Tanzania: "Tanzania",
  Thailand: "Thailand",
  Trinidad_and_Tobago: "Trinidad and Tobago",
  Turkey: "Turkey",
  Uganda: "Uganda",
  Ukraine: "Ukraine",
  United_Arab_Emirates: "United Arab Emirates",
  United_Kingdom: "United Kingdom",
  United_States: "United States",
  Uruguay: "Uruguay",
  Venezuela: "Venezuela",
  Vietnam: "Vietnam",
  Zambia: "Zambia",
  Zimbabwe: "Zimbabwe",
} as const;

export type LoungeListResponseMetaPagination = {
  page?: number;
  /** @maximum 1 */
  pageCount?: number;
  /** @minimum 25 */
  pageSize?: number;
  total?: number;
};

export type LoungeListResponseMeta = {
  pagination?: LoungeListResponseMetaPagination;
};

export interface LoungeListResponseDataItem {
  attributes?: Lounge;
  id?: number;
}

export interface LoungeListResponse {
  data?: LoungeListResponseDataItem[];
  meta?: LoungeListResponseMeta;
}

export type LoungeLocalizationListResponseMetaPagination = {
  page?: number;
  /** @maximum 1 */
  pageCount?: number;
  /** @minimum 25 */
  pageSize?: number;
  total?: number;
};

export type LoungeLocalizationListResponseMeta = {
  pagination?: LoungeLocalizationListResponseMetaPagination;
};

export interface LoungeListResponseDataItemLocalized {
  attributes?: Lounge;
  id?: number;
}

export interface LoungeLocalizationListResponse {
  data?: LoungeListResponseDataItemLocalized[];
  meta?: LoungeLocalizationListResponseMeta;
}

export type LoungeLocalizationResponseMeta = { [key: string]: any };

export interface LoungeResponseDataObjectLocalized {
  attributes?: Lounge;
  id?: number;
}

export interface LoungeLocalizationResponse {
  data?: LoungeResponseDataObjectLocalized;
  meta?: LoungeLocalizationResponseMeta;
}

export interface LoungeRequest {
  data: LoungeRequestData;
}

export type LoungeRequestDataDetrimentsItem = number | string;

export type LoungeRequestDataCardsItem = number | string;

export type LoungeRequestDataAmenitiesItem = number | string;

export type LoungeRequestDataAllianceAccessItem = number | string;

export type LoungeRequestDataAirport = number | string;

export type LoungeRequestData = {
  airport?: LoungeRequestDataAirport;
  alliance_access?: LoungeRequestDataAllianceAccessItem[];
  ambiguous_access: boolean;
  amenities?: LoungeRequestDataAmenitiesItem[];
  cards?: LoungeRequestDataCardsItem[];
  daypass?: string;
  description: string;
  detriments?: LoungeRequestDataDetrimentsItem[];
  directions?: string;
  featured?: boolean;
  googlePlaceId: string;
  guest?: string;
  locale?: string;
  moreInfo?: string;
  name?: string;
  notes?: string;
  priorityPass?: boolean;
  slug?: string;
  terminal: string;
};

export type LoungeLocalizationRequestDetrimentsItem = number | string;

export type LoungeLocalizationRequestCardsItem = number | string;

export type LoungeLocalizationRequestAmenitiesItem = number | string;

export type LoungeLocalizationRequestAllianceAccessItem = number | string;

export type LoungeLocalizationRequestAirport = number | string;

export interface LoungeLocalizationRequest {
  airport?: LoungeLocalizationRequestAirport;
  alliance_access?: LoungeLocalizationRequestAllianceAccessItem[];
  ambiguous_access: boolean;
  amenities?: LoungeLocalizationRequestAmenitiesItem[];
  cards?: LoungeLocalizationRequestCardsItem[];
  daypass?: string;
  description: string;
  detriments?: LoungeLocalizationRequestDetrimentsItem[];
  directions?: string;
  featured?: boolean;
  googlePlaceId: string;
  guest?: string;
  locale: string;
  moreInfo?: string;
  name?: string;
  notes?: string;
  priorityPass?: boolean;
  slug?: string;
  terminal: string;
}

export type DetrimentResponseMeta = { [key: string]: any };

export interface DetrimentResponse {
  data?: DetrimentResponseDataObject;
  meta?: DetrimentResponseMeta;
}

export type DetrimentUpdatedByDataAttributes = { [key: string]: any };

export type DetrimentUpdatedByData = {
  attributes?: DetrimentUpdatedByDataAttributes;
  id?: number;
};

export type DetrimentUpdatedBy = {
  data?: DetrimentUpdatedByData;
};

export type DetrimentIcon = {
  data?: DetrimentIconData;
};

export interface Detriment {
  createdAt?: string;
  createdBy?: DetrimentCreatedBy;
  icon?: DetrimentIcon;
  name?: string;
  updatedAt?: string;
  updatedBy?: DetrimentUpdatedBy;
}

export interface DetrimentResponseDataObject {
  attributes?: Detriment;
  id?: number;
}

export type DetrimentIconDataAttributesUpdatedByDataAttributes = {
  [key: string]: any;
};

export type DetrimentIconDataAttributesUpdatedByData = {
  attributes?: DetrimentIconDataAttributesUpdatedByDataAttributes;
  id?: number;
};

export type DetrimentIconDataAttributesUpdatedBy = {
  data?: DetrimentIconDataAttributesUpdatedByData;
};

export type DetrimentIconDataAttributesRelatedDataItemAttributes = {
  [key: string]: any;
};

export type DetrimentIconDataAttributesRelatedDataItem = {
  attributes?: DetrimentIconDataAttributesRelatedDataItemAttributes;
  id?: number;
};

export type DetrimentIconDataAttributesRelated = {
  data?: DetrimentIconDataAttributesRelatedDataItem[];
};

export type DetrimentIconDataAttributes = {
  alternativeText?: string;
  caption?: string;
  createdAt?: string;
  createdBy?: DetrimentIconDataAttributesCreatedBy;
  ext?: string;
  folder?: DetrimentIconDataAttributesFolder;
  folderPath?: string;
  formats?: unknown;
  hash?: string;
  height?: number;
  mime?: string;
  name?: string;
  previewUrl?: string;
  provider?: string;
  provider_metadata?: unknown;
  related?: DetrimentIconDataAttributesRelated;
  size?: number;
  updatedAt?: string;
  updatedBy?: DetrimentIconDataAttributesUpdatedBy;
  url?: string;
  width?: number;
};

export type DetrimentIconData = {
  attributes?: DetrimentIconDataAttributes;
  id?: number;
};

export type DetrimentIconDataAttributesFolderDataAttributesUpdatedByData = {
  attributes?: DetrimentIconDataAttributesFolderDataAttributesUpdatedByDataAttributes;
  id?: number;
};

export type DetrimentIconDataAttributesFolderDataAttributesUpdatedBy = {
  data?: DetrimentIconDataAttributesFolderDataAttributesUpdatedByData;
};

export type DetrimentIconDataAttributesFolderDataAttributes = {
  children?: DetrimentIconDataAttributesFolderDataAttributesChildren;
  createdAt?: string;
  createdBy?: DetrimentIconDataAttributesFolderDataAttributesCreatedBy;
  files?: DetrimentIconDataAttributesFolderDataAttributesFiles;
  name?: string;
  parent?: DetrimentIconDataAttributesFolderDataAttributesParent;
  path?: string;
  pathId?: number;
  updatedAt?: string;
  updatedBy?: DetrimentIconDataAttributesFolderDataAttributesUpdatedBy;
};

export type DetrimentIconDataAttributesFolderData = {
  attributes?: DetrimentIconDataAttributesFolderDataAttributes;
  id?: number;
};

export type DetrimentIconDataAttributesFolder = {
  data?: DetrimentIconDataAttributesFolderData;
};

export type DetrimentIconDataAttributesFolderDataAttributesUpdatedByDataAttributes =
  { [key: string]: any };

export type DetrimentIconDataAttributesFolderDataAttributesParentDataAttributes =
  { [key: string]: any };

export type DetrimentIconDataAttributesFolderDataAttributesParentData = {
  attributes?: DetrimentIconDataAttributesFolderDataAttributesParentDataAttributes;
  id?: number;
};

export type DetrimentIconDataAttributesFolderDataAttributesParent = {
  data?: DetrimentIconDataAttributesFolderDataAttributesParentData;
};

export type DetrimentIconDataAttributesFolderDataAttributesFilesDataItem = {
  attributes?: DetrimentIconDataAttributesFolderDataAttributesFilesDataItemAttributes;
  id?: number;
};

export type DetrimentIconDataAttributesFolderDataAttributesFiles = {
  data?: DetrimentIconDataAttributesFolderDataAttributesFilesDataItem[];
};

export type DetrimentIconDataAttributesFolderDataAttributesFilesDataItemAttributesUpdatedByDataAttributes =
  { [key: string]: any };

export type DetrimentIconDataAttributesFolderDataAttributesFilesDataItemAttributesUpdatedByData =
  {
    attributes?: DetrimentIconDataAttributesFolderDataAttributesFilesDataItemAttributesUpdatedByDataAttributes;
    id?: number;
  };

export type DetrimentIconDataAttributesFolderDataAttributesFilesDataItemAttributesUpdatedBy =
  {
    data?: DetrimentIconDataAttributesFolderDataAttributesFilesDataItemAttributesUpdatedByData;
  };

export type DetrimentIconDataAttributesFolderDataAttributesFilesDataItemAttributesRelatedDataItemAttributes =
  { [key: string]: any };

export type DetrimentIconDataAttributesFolderDataAttributesFilesDataItemAttributesRelatedDataItem =
  {
    attributes?: DetrimentIconDataAttributesFolderDataAttributesFilesDataItemAttributesRelatedDataItemAttributes;
    id?: number;
  };

export type DetrimentIconDataAttributesFolderDataAttributesFilesDataItemAttributesRelated =
  {
    data?: DetrimentIconDataAttributesFolderDataAttributesFilesDataItemAttributesRelatedDataItem[];
  };

export type DetrimentIconDataAttributesFolderDataAttributesFilesDataItemAttributesFolderDataAttributes =
  { [key: string]: any };

export type DetrimentIconDataAttributesFolderDataAttributesFilesDataItemAttributesFolderData =
  {
    attributes?: DetrimentIconDataAttributesFolderDataAttributesFilesDataItemAttributesFolderDataAttributes;
    id?: number;
  };

export type DetrimentIconDataAttributesFolderDataAttributesFilesDataItemAttributesFolder =
  {
    data?: DetrimentIconDataAttributesFolderDataAttributesFilesDataItemAttributesFolderData;
  };

export type DetrimentIconDataAttributesFolderDataAttributesFilesDataItemAttributes =
  {
    alternativeText?: string;
    caption?: string;
    createdAt?: string;
    createdBy?: DetrimentIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedBy;
    ext?: string;
    folder?: DetrimentIconDataAttributesFolderDataAttributesFilesDataItemAttributesFolder;
    folderPath?: string;
    formats?: unknown;
    hash?: string;
    height?: number;
    mime?: string;
    name?: string;
    previewUrl?: string;
    provider?: string;
    provider_metadata?: unknown;
    related?: DetrimentIconDataAttributesFolderDataAttributesFilesDataItemAttributesRelated;
    size?: number;
    updatedAt?: string;
    updatedBy?: DetrimentIconDataAttributesFolderDataAttributesFilesDataItemAttributesUpdatedBy;
    url?: string;
    width?: number;
  };

export type DetrimentIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributes =
  {
    blocked?: boolean;
    createdAt?: string;
    createdBy?: DetrimentIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesCreatedBy;
    email?: string;
    firstname?: string;
    isActive?: boolean;
    lastname?: string;
    preferedLanguage?: string;
    registrationToken?: string;
    resetPasswordToken?: string;
    roles?: DetrimentIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRoles;
    updatedAt?: string;
    updatedBy?: DetrimentIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesUpdatedBy;
    username?: string;
  };

export type DetrimentIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByData =
  {
    attributes?: DetrimentIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributes;
    id?: number;
  };

export type DetrimentIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedBy =
  {
    data?: DetrimentIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByData;
  };

export type DetrimentIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesUpdatedByDataAttributes =
  { [key: string]: any };

export type DetrimentIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesUpdatedByData =
  {
    attributes?: DetrimentIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesUpdatedByDataAttributes;
    id?: number;
  };

export type DetrimentIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesUpdatedBy =
  {
    data?: DetrimentIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesUpdatedByData;
  };

export type DetrimentIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributes =
  {
    code?: string;
    createdAt?: string;
    createdBy?: DetrimentIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesCreatedBy;
    description?: string;
    name?: string;
    permissions?: DetrimentIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesPermissions;
    updatedAt?: string;
    updatedBy?: DetrimentIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesUpdatedBy;
    users?: DetrimentIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesUsers;
  };

export type DetrimentIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItem =
  {
    attributes?: DetrimentIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributes;
    id?: number;
  };

export type DetrimentIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRoles =
  {
    data?: DetrimentIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItem[];
  };

export type DetrimentIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesUsersDataItemAttributes =
  { [key: string]: any };

export type DetrimentIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesUsersDataItem =
  {
    attributes?: DetrimentIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesUsersDataItemAttributes;
    id?: number;
  };

export type DetrimentIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesUsers =
  {
    data?: DetrimentIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesUsersDataItem[];
  };

export type DetrimentIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesUpdatedByDataAttributes =
  { [key: string]: any };

export type DetrimentIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesUpdatedByData =
  {
    attributes?: DetrimentIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesUpdatedByDataAttributes;
    id?: number;
  };

export type DetrimentIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesUpdatedBy =
  {
    data?: DetrimentIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesUpdatedByData;
  };

export type DetrimentIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributes =
  {
    action?: string;
    actionParameters?: unknown;
    conditions?: unknown;
    createdAt?: string;
    createdBy?: DetrimentIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributesCreatedBy;
    properties?: unknown;
    role?: DetrimentIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributesRole;
    subject?: string;
    updatedAt?: string;
    updatedBy?: DetrimentIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributesUpdatedBy;
  };

export type DetrimentIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItem =
  {
    attributes?: DetrimentIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributes;
    id?: number;
  };

export type DetrimentIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesPermissions =
  {
    data?: DetrimentIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItem[];
  };

export type DetrimentIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributesUpdatedByDataAttributes =
  { [key: string]: any };

export type DetrimentIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributesUpdatedByData =
  {
    attributes?: DetrimentIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributesUpdatedByDataAttributes;
    id?: number;
  };

export type DetrimentIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributesUpdatedBy =
  {
    data?: DetrimentIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributesUpdatedByData;
  };

export type DetrimentIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributesRoleDataAttributes =
  { [key: string]: any };

export type DetrimentIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributesRoleData =
  {
    attributes?: DetrimentIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributesRoleDataAttributes;
    id?: number;
  };

export type DetrimentIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributesRole =
  {
    data?: DetrimentIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributesRoleData;
  };

export type DetrimentIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributesCreatedByDataAttributes =
  { [key: string]: any };

export type DetrimentIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributesCreatedByData =
  {
    attributes?: DetrimentIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributesCreatedByDataAttributes;
    id?: number;
  };

export type DetrimentIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributesCreatedBy =
  {
    data?: DetrimentIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributesCreatedByData;
  };

export type DetrimentIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesCreatedByDataAttributes =
  { [key: string]: any };

export type DetrimentIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesCreatedByData =
  {
    attributes?: DetrimentIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesCreatedByDataAttributes;
    id?: number;
  };

export type DetrimentIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesCreatedBy =
  {
    data?: DetrimentIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesCreatedByData;
  };

export type DetrimentIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesCreatedByDataAttributes =
  { [key: string]: any };

export type DetrimentIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesCreatedByData =
  {
    attributes?: DetrimentIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesCreatedByDataAttributes;
    id?: number;
  };

export type DetrimentIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesCreatedBy =
  {
    data?: DetrimentIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesCreatedByData;
  };

export type DetrimentIconDataAttributesFolderDataAttributesCreatedByDataAttributes =
  { [key: string]: any };

export type DetrimentIconDataAttributesFolderDataAttributesCreatedByData = {
  attributes?: DetrimentIconDataAttributesFolderDataAttributesCreatedByDataAttributes;
  id?: number;
};

export type DetrimentIconDataAttributesFolderDataAttributesCreatedBy = {
  data?: DetrimentIconDataAttributesFolderDataAttributesCreatedByData;
};

export type DetrimentIconDataAttributesFolderDataAttributesChildrenDataItemAttributes =
  { [key: string]: any };

export type DetrimentIconDataAttributesFolderDataAttributesChildrenDataItem = {
  attributes?: DetrimentIconDataAttributesFolderDataAttributesChildrenDataItemAttributes;
  id?: number;
};

export type DetrimentIconDataAttributesFolderDataAttributesChildren = {
  data?: DetrimentIconDataAttributesFolderDataAttributesChildrenDataItem[];
};

export type DetrimentIconDataAttributesCreatedByDataAttributes = {
  [key: string]: any;
};

export type DetrimentIconDataAttributesCreatedByData = {
  attributes?: DetrimentIconDataAttributesCreatedByDataAttributes;
  id?: number;
};

export type DetrimentIconDataAttributesCreatedBy = {
  data?: DetrimentIconDataAttributesCreatedByData;
};

export type DetrimentCreatedByDataAttributes = { [key: string]: any };

export type DetrimentCreatedByData = {
  attributes?: DetrimentCreatedByDataAttributes;
  id?: number;
};

export type DetrimentCreatedBy = {
  data?: DetrimentCreatedByData;
};

export type DetrimentListResponseMetaPagination = {
  page?: number;
  /** @maximum 1 */
  pageCount?: number;
  /** @minimum 25 */
  pageSize?: number;
  total?: number;
};

export type DetrimentListResponseMeta = {
  pagination?: DetrimentListResponseMetaPagination;
};

export interface DetrimentListResponseDataItem {
  attributes?: Detriment;
  id?: number;
}

export interface DetrimentListResponse {
  data?: DetrimentListResponseDataItem[];
  meta?: DetrimentListResponseMeta;
}

export type DetrimentRequestDataIcon = number | string;

export type DetrimentRequestData = {
  icon?: DetrimentRequestDataIcon;
  name?: string;
};

export interface DetrimentRequest {
  data: DetrimentRequestData;
}

export type CardResponseMeta = { [key: string]: any };

export interface CardResponseDataObject {
  attributes?: Card;
  id?: number;
}

export interface CardResponse {
  data?: CardResponseDataObject;
  meta?: CardResponseMeta;
}

export type CardUpdatedByDataAttributes = { [key: string]: any };

export type CardUpdatedByData = {
  attributes?: CardUpdatedByDataAttributes;
  id?: number;
};

export type CardUpdatedBy = {
  data?: CardUpdatedByData;
};

export type CardProcessor = (typeof CardProcessor)[keyof typeof CardProcessor];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const CardProcessor = {
  Visa: "Visa",
  Amex: "Amex",
  Mastercard: "Mastercard",
} as const;

export type CardPersonalOrBiz =
  (typeof CardPersonalOrBiz)[keyof typeof CardPersonalOrBiz];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const CardPersonalOrBiz = {
  Personal: "Personal",
  Business: "Business",
} as const;

export type CardIconData = {
  attributes?: CardIconDataAttributes;
  id?: number;
};

export type CardIcon = {
  data?: CardIconData;
};

export interface Card {
  annualFee?: number;
  bank?: CardBank;
  createdAt?: string;
  createdBy?: CardCreatedBy;
  icon?: CardIcon;
  name?: string;
  personalOrBiz?: CardPersonalOrBiz;
  processor?: CardProcessor;
  updatedAt?: string;
  updatedBy?: CardUpdatedBy;
}

export type CardIconDataAttributesUpdatedByDataAttributes = {
  [key: string]: any;
};

export type CardIconDataAttributesUpdatedByData = {
  attributes?: CardIconDataAttributesUpdatedByDataAttributes;
  id?: number;
};

export type CardIconDataAttributesUpdatedBy = {
  data?: CardIconDataAttributesUpdatedByData;
};

export type CardIconDataAttributes = {
  alternativeText?: string;
  caption?: string;
  createdAt?: string;
  createdBy?: CardIconDataAttributesCreatedBy;
  ext?: string;
  folder?: CardIconDataAttributesFolder;
  folderPath?: string;
  formats?: unknown;
  hash?: string;
  height?: number;
  mime?: string;
  name?: string;
  previewUrl?: string;
  provider?: string;
  provider_metadata?: unknown;
  related?: CardIconDataAttributesRelated;
  size?: number;
  updatedAt?: string;
  updatedBy?: CardIconDataAttributesUpdatedBy;
  url?: string;
  width?: number;
};

export type CardIconDataAttributesRelatedDataItemAttributes = {
  [key: string]: any;
};

export type CardIconDataAttributesRelatedDataItem = {
  attributes?: CardIconDataAttributesRelatedDataItemAttributes;
  id?: number;
};

export type CardIconDataAttributesRelated = {
  data?: CardIconDataAttributesRelatedDataItem[];
};

export type CardIconDataAttributesFolderData = {
  attributes?: CardIconDataAttributesFolderDataAttributes;
  id?: number;
};

export type CardIconDataAttributesFolder = {
  data?: CardIconDataAttributesFolderData;
};

export type CardIconDataAttributesFolderDataAttributesUpdatedByDataAttributes =
  { [key: string]: any };

export type CardIconDataAttributesFolderDataAttributesUpdatedByData = {
  attributes?: CardIconDataAttributesFolderDataAttributesUpdatedByDataAttributes;
  id?: number;
};

export type CardIconDataAttributesFolderDataAttributesUpdatedBy = {
  data?: CardIconDataAttributesFolderDataAttributesUpdatedByData;
};

export type CardIconDataAttributesFolderDataAttributes = {
  children?: CardIconDataAttributesFolderDataAttributesChildren;
  createdAt?: string;
  createdBy?: CardIconDataAttributesFolderDataAttributesCreatedBy;
  files?: CardIconDataAttributesFolderDataAttributesFiles;
  name?: string;
  parent?: CardIconDataAttributesFolderDataAttributesParent;
  path?: string;
  pathId?: number;
  updatedAt?: string;
  updatedBy?: CardIconDataAttributesFolderDataAttributesUpdatedBy;
};

export type CardIconDataAttributesFolderDataAttributesParentDataAttributes = {
  [key: string]: any;
};

export type CardIconDataAttributesFolderDataAttributesParentData = {
  attributes?: CardIconDataAttributesFolderDataAttributesParentDataAttributes;
  id?: number;
};

export type CardIconDataAttributesFolderDataAttributesParent = {
  data?: CardIconDataAttributesFolderDataAttributesParentData;
};

export type CardIconDataAttributesFolderDataAttributesFilesDataItemAttributes =
  {
    alternativeText?: string;
    caption?: string;
    createdAt?: string;
    createdBy?: CardIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedBy;
    ext?: string;
    folder?: CardIconDataAttributesFolderDataAttributesFilesDataItemAttributesFolder;
    folderPath?: string;
    formats?: unknown;
    hash?: string;
    height?: number;
    mime?: string;
    name?: string;
    previewUrl?: string;
    provider?: string;
    provider_metadata?: unknown;
    related?: CardIconDataAttributesFolderDataAttributesFilesDataItemAttributesRelated;
    size?: number;
    updatedAt?: string;
    updatedBy?: CardIconDataAttributesFolderDataAttributesFilesDataItemAttributesUpdatedBy;
    url?: string;
    width?: number;
  };

export type CardIconDataAttributesFolderDataAttributesFilesDataItem = {
  attributes?: CardIconDataAttributesFolderDataAttributesFilesDataItemAttributes;
  id?: number;
};

export type CardIconDataAttributesFolderDataAttributesFiles = {
  data?: CardIconDataAttributesFolderDataAttributesFilesDataItem[];
};

export type CardIconDataAttributesFolderDataAttributesFilesDataItemAttributesUpdatedByDataAttributes =
  { [key: string]: any };

export type CardIconDataAttributesFolderDataAttributesFilesDataItemAttributesUpdatedByData =
  {
    attributes?: CardIconDataAttributesFolderDataAttributesFilesDataItemAttributesUpdatedByDataAttributes;
    id?: number;
  };

export type CardIconDataAttributesFolderDataAttributesFilesDataItemAttributesUpdatedBy =
  {
    data?: CardIconDataAttributesFolderDataAttributesFilesDataItemAttributesUpdatedByData;
  };

export type CardIconDataAttributesFolderDataAttributesFilesDataItemAttributesRelatedDataItemAttributes =
  { [key: string]: any };

export type CardIconDataAttributesFolderDataAttributesFilesDataItemAttributesRelatedDataItem =
  {
    attributes?: CardIconDataAttributesFolderDataAttributesFilesDataItemAttributesRelatedDataItemAttributes;
    id?: number;
  };

export type CardIconDataAttributesFolderDataAttributesFilesDataItemAttributesRelated =
  {
    data?: CardIconDataAttributesFolderDataAttributesFilesDataItemAttributesRelatedDataItem[];
  };

export type CardIconDataAttributesFolderDataAttributesFilesDataItemAttributesFolderDataAttributes =
  { [key: string]: any };

export type CardIconDataAttributesFolderDataAttributesFilesDataItemAttributesFolderData =
  {
    attributes?: CardIconDataAttributesFolderDataAttributesFilesDataItemAttributesFolderDataAttributes;
    id?: number;
  };

export type CardIconDataAttributesFolderDataAttributesFilesDataItemAttributesFolder =
  {
    data?: CardIconDataAttributesFolderDataAttributesFilesDataItemAttributesFolderData;
  };

export type CardIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedBy =
  {
    data?: CardIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByData;
  };

export type CardIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesUpdatedByDataAttributes =
  { [key: string]: any };

export type CardIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesUpdatedByData =
  {
    attributes?: CardIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesUpdatedByDataAttributes;
    id?: number;
  };

export type CardIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesUpdatedBy =
  {
    data?: CardIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesUpdatedByData;
  };

export type CardIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRoles =
  {
    data?: CardIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItem[];
  };

export type CardIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributes =
  {
    blocked?: boolean;
    createdAt?: string;
    createdBy?: CardIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesCreatedBy;
    email?: string;
    firstname?: string;
    isActive?: boolean;
    lastname?: string;
    preferedLanguage?: string;
    registrationToken?: string;
    resetPasswordToken?: string;
    roles?: CardIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRoles;
    updatedAt?: string;
    updatedBy?: CardIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesUpdatedBy;
    username?: string;
  };

export type CardIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByData =
  {
    attributes?: CardIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributes;
    id?: number;
  };

export type CardIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesUsersDataItemAttributes =
  { [key: string]: any };

export type CardIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesUsersDataItem =
  {
    attributes?: CardIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesUsersDataItemAttributes;
    id?: number;
  };

export type CardIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesUsers =
  {
    data?: CardIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesUsersDataItem[];
  };

export type CardIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesUpdatedByDataAttributes =
  { [key: string]: any };

export type CardIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesUpdatedByData =
  {
    attributes?: CardIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesUpdatedByDataAttributes;
    id?: number;
  };

export type CardIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesUpdatedBy =
  {
    data?: CardIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesUpdatedByData;
  };

export type CardIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItem =
  {
    attributes?: CardIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributes;
    id?: number;
  };

export type CardIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesPermissions =
  {
    data?: CardIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItem[];
  };

export type CardIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributes =
  {
    code?: string;
    createdAt?: string;
    createdBy?: CardIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesCreatedBy;
    description?: string;
    name?: string;
    permissions?: CardIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesPermissions;
    updatedAt?: string;
    updatedBy?: CardIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesUpdatedBy;
    users?: CardIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesUsers;
  };

export type CardIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItem =
  {
    attributes?: CardIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributes;
    id?: number;
  };

export type CardIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributesUpdatedByDataAttributes =
  { [key: string]: any };

export type CardIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributesUpdatedByData =
  {
    attributes?: CardIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributesUpdatedByDataAttributes;
    id?: number;
  };

export type CardIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributesUpdatedBy =
  {
    data?: CardIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributesUpdatedByData;
  };

export type CardIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributesRoleDataAttributes =
  { [key: string]: any };

export type CardIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributesRoleData =
  {
    attributes?: CardIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributesRoleDataAttributes;
    id?: number;
  };

export type CardIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributesRole =
  {
    data?: CardIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributesRoleData;
  };

export type CardIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributesCreatedByDataAttributes =
  { [key: string]: any };

export type CardIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributesCreatedByData =
  {
    attributes?: CardIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributesCreatedByDataAttributes;
    id?: number;
  };

export type CardIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributesCreatedBy =
  {
    data?: CardIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributesCreatedByData;
  };

export type CardIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributes =
  {
    action?: string;
    actionParameters?: unknown;
    conditions?: unknown;
    createdAt?: string;
    createdBy?: CardIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributesCreatedBy;
    properties?: unknown;
    role?: CardIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributesRole;
    subject?: string;
    updatedAt?: string;
    updatedBy?: CardIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributesUpdatedBy;
  };

export type CardIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesCreatedByDataAttributes =
  { [key: string]: any };

export type CardIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesCreatedByData =
  {
    attributes?: CardIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesCreatedByDataAttributes;
    id?: number;
  };

export type CardIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesCreatedBy =
  {
    data?: CardIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesCreatedByData;
  };

export type CardIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesCreatedByDataAttributes =
  { [key: string]: any };

export type CardIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesCreatedByData =
  {
    attributes?: CardIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesCreatedByDataAttributes;
    id?: number;
  };

export type CardIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesCreatedBy =
  {
    data?: CardIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesCreatedByData;
  };

export type CardIconDataAttributesFolderDataAttributesCreatedByDataAttributes =
  { [key: string]: any };

export type CardIconDataAttributesFolderDataAttributesCreatedByData = {
  attributes?: CardIconDataAttributesFolderDataAttributesCreatedByDataAttributes;
  id?: number;
};

export type CardIconDataAttributesFolderDataAttributesCreatedBy = {
  data?: CardIconDataAttributesFolderDataAttributesCreatedByData;
};

export type CardIconDataAttributesFolderDataAttributesChildrenDataItemAttributes =
  { [key: string]: any };

export type CardIconDataAttributesFolderDataAttributesChildrenDataItem = {
  attributes?: CardIconDataAttributesFolderDataAttributesChildrenDataItemAttributes;
  id?: number;
};

export type CardIconDataAttributesFolderDataAttributesChildren = {
  data?: CardIconDataAttributesFolderDataAttributesChildrenDataItem[];
};

export type CardIconDataAttributesCreatedBy = {
  data?: CardIconDataAttributesCreatedByData;
};

export type CardIconDataAttributesCreatedByDataAttributes = {
  [key: string]: any;
};

export type CardIconDataAttributesCreatedByData = {
  attributes?: CardIconDataAttributesCreatedByDataAttributes;
  id?: number;
};

export type CardCreatedByDataAttributes = { [key: string]: any };

export type CardCreatedByData = {
  attributes?: CardCreatedByDataAttributes;
  id?: number;
};

export type CardCreatedBy = {
  data?: CardCreatedByData;
};

export type CardBank = (typeof CardBank)[keyof typeof CardBank];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const CardBank = {
  Chase: "Chase",
  Amex: "Amex",
  Barclays: "Barclays",
  Citi: "Citi",
  Bank_of_America: "Bank of America",
  Capital_One: "Capital One",
  Wells_Fargo: "Wells Fargo",
} as const;

export type CardListResponseMetaPagination = {
  page?: number;
  /** @maximum 1 */
  pageCount?: number;
  /** @minimum 25 */
  pageSize?: number;
  total?: number;
};

export type CardListResponseMeta = {
  pagination?: CardListResponseMetaPagination;
};

export interface CardListResponseDataItem {
  attributes?: Card;
  id?: number;
}

export interface CardListResponse {
  data?: CardListResponseDataItem[];
  meta?: CardListResponseMeta;
}

export type CardRequestDataProcessor =
  (typeof CardRequestDataProcessor)[keyof typeof CardRequestDataProcessor];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const CardRequestDataProcessor = {
  Visa: "Visa",
  Amex: "Amex",
  Mastercard: "Mastercard",
} as const;

export type CardRequestDataPersonalOrBiz =
  (typeof CardRequestDataPersonalOrBiz)[keyof typeof CardRequestDataPersonalOrBiz];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const CardRequestDataPersonalOrBiz = {
  Personal: "Personal",
  Business: "Business",
} as const;

export type CardRequestDataIcon = number | string;

export type CardRequestDataBank =
  (typeof CardRequestDataBank)[keyof typeof CardRequestDataBank];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const CardRequestDataBank = {
  Chase: "Chase",
  Amex: "Amex",
  Barclays: "Barclays",
  Citi: "Citi",
  Bank_of_America: "Bank of America",
  Capital_One: "Capital One",
  Wells_Fargo: "Wells Fargo",
} as const;

export type CardRequestData = {
  annualFee?: number;
  bank?: CardRequestDataBank;
  icon?: CardRequestDataIcon;
  name?: string;
  personalOrBiz?: CardRequestDataPersonalOrBiz;
  processor?: CardRequestDataProcessor;
};

export interface CardRequest {
  data: CardRequestData;
}

export type AmenityResponseMeta = { [key: string]: any };

export interface Amenity {
  createdAt?: string;
  createdBy?: AmenityCreatedBy;
  icon?: AmenityIcon;
  name: string;
  updatedAt?: string;
  updatedBy?: AmenityUpdatedBy;
}

export interface AmenityResponseDataObject {
  attributes?: Amenity;
  id?: number;
}

export interface AmenityResponse {
  data?: AmenityResponseDataObject;
  meta?: AmenityResponseMeta;
}

export type AmenityUpdatedByDataAttributes = { [key: string]: any };

export type AmenityUpdatedByData = {
  attributes?: AmenityUpdatedByDataAttributes;
  id?: number;
};

export type AmenityUpdatedBy = {
  data?: AmenityUpdatedByData;
};

export type AmenityIconData = {
  attributes?: AmenityIconDataAttributes;
  id?: number;
};

export type AmenityIcon = {
  data?: AmenityIconData;
};

export type AmenityIconDataAttributesUpdatedByDataAttributes = {
  [key: string]: any;
};

export type AmenityIconDataAttributesUpdatedByData = {
  attributes?: AmenityIconDataAttributesUpdatedByDataAttributes;
  id?: number;
};

export type AmenityIconDataAttributesUpdatedBy = {
  data?: AmenityIconDataAttributesUpdatedByData;
};

export type AmenityIconDataAttributesRelatedDataItemAttributes = {
  [key: string]: any;
};

export type AmenityIconDataAttributesRelatedDataItem = {
  attributes?: AmenityIconDataAttributesRelatedDataItemAttributes;
  id?: number;
};

export type AmenityIconDataAttributesRelated = {
  data?: AmenityIconDataAttributesRelatedDataItem[];
};

export type AmenityIconDataAttributesFolderData = {
  attributes?: AmenityIconDataAttributesFolderDataAttributes;
  id?: number;
};

export type AmenityIconDataAttributesFolder = {
  data?: AmenityIconDataAttributesFolderData;
};

export type AmenityIconDataAttributes = {
  alternativeText?: string;
  caption?: string;
  createdAt?: string;
  createdBy?: AmenityIconDataAttributesCreatedBy;
  ext?: string;
  folder?: AmenityIconDataAttributesFolder;
  folderPath?: string;
  formats?: unknown;
  hash?: string;
  height?: number;
  mime?: string;
  name?: string;
  previewUrl?: string;
  provider?: string;
  provider_metadata?: unknown;
  related?: AmenityIconDataAttributesRelated;
  size?: number;
  updatedAt?: string;
  updatedBy?: AmenityIconDataAttributesUpdatedBy;
  url?: string;
  width?: number;
};

export type AmenityIconDataAttributesFolderDataAttributesUpdatedByDataAttributes =
  { [key: string]: any };

export type AmenityIconDataAttributesFolderDataAttributesUpdatedByData = {
  attributes?: AmenityIconDataAttributesFolderDataAttributesUpdatedByDataAttributes;
  id?: number;
};

export type AmenityIconDataAttributesFolderDataAttributesUpdatedBy = {
  data?: AmenityIconDataAttributesFolderDataAttributesUpdatedByData;
};

export type AmenityIconDataAttributesFolderDataAttributesParentDataAttributes =
  { [key: string]: any };

export type AmenityIconDataAttributesFolderDataAttributesParentData = {
  attributes?: AmenityIconDataAttributesFolderDataAttributesParentDataAttributes;
  id?: number;
};

export type AmenityIconDataAttributesFolderDataAttributesParent = {
  data?: AmenityIconDataAttributesFolderDataAttributesParentData;
};

export type AmenityIconDataAttributesFolderDataAttributesFilesDataItem = {
  attributes?: AmenityIconDataAttributesFolderDataAttributesFilesDataItemAttributes;
  id?: number;
};

export type AmenityIconDataAttributesFolderDataAttributesFiles = {
  data?: AmenityIconDataAttributesFolderDataAttributesFilesDataItem[];
};

export type AmenityIconDataAttributesFolderDataAttributes = {
  children?: AmenityIconDataAttributesFolderDataAttributesChildren;
  createdAt?: string;
  createdBy?: AmenityIconDataAttributesFolderDataAttributesCreatedBy;
  files?: AmenityIconDataAttributesFolderDataAttributesFiles;
  name?: string;
  parent?: AmenityIconDataAttributesFolderDataAttributesParent;
  path?: string;
  pathId?: number;
  updatedAt?: string;
  updatedBy?: AmenityIconDataAttributesFolderDataAttributesUpdatedBy;
};

export type AmenityIconDataAttributesFolderDataAttributesFilesDataItemAttributesUpdatedByDataAttributes =
  { [key: string]: any };

export type AmenityIconDataAttributesFolderDataAttributesFilesDataItemAttributesUpdatedByData =
  {
    attributes?: AmenityIconDataAttributesFolderDataAttributesFilesDataItemAttributesUpdatedByDataAttributes;
    id?: number;
  };

export type AmenityIconDataAttributesFolderDataAttributesFilesDataItemAttributesUpdatedBy =
  {
    data?: AmenityIconDataAttributesFolderDataAttributesFilesDataItemAttributesUpdatedByData;
  };

export type AmenityIconDataAttributesFolderDataAttributesFilesDataItemAttributesRelatedDataItemAttributes =
  { [key: string]: any };

export type AmenityIconDataAttributesFolderDataAttributesFilesDataItemAttributesRelatedDataItem =
  {
    attributes?: AmenityIconDataAttributesFolderDataAttributesFilesDataItemAttributesRelatedDataItemAttributes;
    id?: number;
  };

export type AmenityIconDataAttributesFolderDataAttributesFilesDataItemAttributesRelated =
  {
    data?: AmenityIconDataAttributesFolderDataAttributesFilesDataItemAttributesRelatedDataItem[];
  };

export type AmenityIconDataAttributesFolderDataAttributesFilesDataItemAttributes =
  {
    alternativeText?: string;
    caption?: string;
    createdAt?: string;
    createdBy?: AmenityIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedBy;
    ext?: string;
    folder?: AmenityIconDataAttributesFolderDataAttributesFilesDataItemAttributesFolder;
    folderPath?: string;
    formats?: unknown;
    hash?: string;
    height?: number;
    mime?: string;
    name?: string;
    previewUrl?: string;
    provider?: string;
    provider_metadata?: unknown;
    related?: AmenityIconDataAttributesFolderDataAttributesFilesDataItemAttributesRelated;
    size?: number;
    updatedAt?: string;
    updatedBy?: AmenityIconDataAttributesFolderDataAttributesFilesDataItemAttributesUpdatedBy;
    url?: string;
    width?: number;
  };

export type AmenityIconDataAttributesFolderDataAttributesFilesDataItemAttributesFolderDataAttributes =
  { [key: string]: any };

export type AmenityIconDataAttributesFolderDataAttributesFilesDataItemAttributesFolderData =
  {
    attributes?: AmenityIconDataAttributesFolderDataAttributesFilesDataItemAttributesFolderDataAttributes;
    id?: number;
  };

export type AmenityIconDataAttributesFolderDataAttributesFilesDataItemAttributesFolder =
  {
    data?: AmenityIconDataAttributesFolderDataAttributesFilesDataItemAttributesFolderData;
  };

export type AmenityIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedBy =
  {
    data?: AmenityIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByData;
  };

export type AmenityIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesUpdatedByDataAttributes =
  { [key: string]: any };

export type AmenityIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesUpdatedByData =
  {
    attributes?: AmenityIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesUpdatedByDataAttributes;
    id?: number;
  };

export type AmenityIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesUpdatedBy =
  {
    data?: AmenityIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesUpdatedByData;
  };

export type AmenityIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItem =
  {
    attributes?: AmenityIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributes;
    id?: number;
  };

export type AmenityIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRoles =
  {
    data?: AmenityIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItem[];
  };

export type AmenityIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributes =
  {
    blocked?: boolean;
    createdAt?: string;
    createdBy?: AmenityIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesCreatedBy;
    email?: string;
    firstname?: string;
    isActive?: boolean;
    lastname?: string;
    preferedLanguage?: string;
    registrationToken?: string;
    resetPasswordToken?: string;
    roles?: AmenityIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRoles;
    updatedAt?: string;
    updatedBy?: AmenityIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesUpdatedBy;
    username?: string;
  };

export type AmenityIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByData =
  {
    attributes?: AmenityIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributes;
    id?: number;
  };

export type AmenityIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesUsersDataItemAttributes =
  { [key: string]: any };

export type AmenityIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesUsersDataItem =
  {
    attributes?: AmenityIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesUsersDataItemAttributes;
    id?: number;
  };

export type AmenityIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesUsers =
  {
    data?: AmenityIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesUsersDataItem[];
  };

export type AmenityIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributes =
  {
    code?: string;
    createdAt?: string;
    createdBy?: AmenityIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesCreatedBy;
    description?: string;
    name?: string;
    permissions?: AmenityIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesPermissions;
    updatedAt?: string;
    updatedBy?: AmenityIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesUpdatedBy;
    users?: AmenityIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesUsers;
  };

export type AmenityIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesUpdatedByDataAttributes =
  { [key: string]: any };

export type AmenityIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesUpdatedByData =
  {
    attributes?: AmenityIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesUpdatedByDataAttributes;
    id?: number;
  };

export type AmenityIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesUpdatedBy =
  {
    data?: AmenityIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesUpdatedByData;
  };

export type AmenityIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributes =
  {
    action?: string;
    actionParameters?: unknown;
    conditions?: unknown;
    createdAt?: string;
    createdBy?: AmenityIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributesCreatedBy;
    properties?: unknown;
    role?: AmenityIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributesRole;
    subject?: string;
    updatedAt?: string;
    updatedBy?: AmenityIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributesUpdatedBy;
  };

export type AmenityIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItem =
  {
    attributes?: AmenityIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributes;
    id?: number;
  };

export type AmenityIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesPermissions =
  {
    data?: AmenityIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItem[];
  };

export type AmenityIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributesUpdatedByDataAttributes =
  { [key: string]: any };

export type AmenityIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributesUpdatedByData =
  {
    attributes?: AmenityIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributesUpdatedByDataAttributes;
    id?: number;
  };

export type AmenityIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributesUpdatedBy =
  {
    data?: AmenityIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributesUpdatedByData;
  };

export type AmenityIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributesRoleDataAttributes =
  { [key: string]: any };

export type AmenityIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributesRoleData =
  {
    attributes?: AmenityIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributesRoleDataAttributes;
    id?: number;
  };

export type AmenityIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributesRole =
  {
    data?: AmenityIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributesRoleData;
  };

export type AmenityIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributesCreatedByDataAttributes =
  { [key: string]: any };

export type AmenityIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributesCreatedByData =
  {
    attributes?: AmenityIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributesCreatedByDataAttributes;
    id?: number;
  };

export type AmenityIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributesCreatedBy =
  {
    data?: AmenityIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributesCreatedByData;
  };

export type AmenityIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesCreatedByDataAttributes =
  { [key: string]: any };

export type AmenityIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesCreatedByData =
  {
    attributes?: AmenityIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesCreatedByDataAttributes;
    id?: number;
  };

export type AmenityIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesCreatedBy =
  {
    data?: AmenityIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesRolesDataItemAttributesCreatedByData;
  };

export type AmenityIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesCreatedByDataAttributes =
  { [key: string]: any };

export type AmenityIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesCreatedByData =
  {
    attributes?: AmenityIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesCreatedByDataAttributes;
    id?: number;
  };

export type AmenityIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesCreatedBy =
  {
    data?: AmenityIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributesCreatedByData;
  };

export type AmenityIconDataAttributesFolderDataAttributesCreatedByDataAttributes =
  { [key: string]: any };

export type AmenityIconDataAttributesFolderDataAttributesCreatedByData = {
  attributes?: AmenityIconDataAttributesFolderDataAttributesCreatedByDataAttributes;
  id?: number;
};

export type AmenityIconDataAttributesFolderDataAttributesCreatedBy = {
  data?: AmenityIconDataAttributesFolderDataAttributesCreatedByData;
};

export type AmenityIconDataAttributesFolderDataAttributesChildrenDataItemAttributes =
  { [key: string]: any };

export type AmenityIconDataAttributesFolderDataAttributesChildrenDataItem = {
  attributes?: AmenityIconDataAttributesFolderDataAttributesChildrenDataItemAttributes;
  id?: number;
};

export type AmenityIconDataAttributesFolderDataAttributesChildren = {
  data?: AmenityIconDataAttributesFolderDataAttributesChildrenDataItem[];
};

export type AmenityIconDataAttributesCreatedByDataAttributes = {
  [key: string]: any;
};

export type AmenityIconDataAttributesCreatedByData = {
  attributes?: AmenityIconDataAttributesCreatedByDataAttributes;
  id?: number;
};

export type AmenityIconDataAttributesCreatedBy = {
  data?: AmenityIconDataAttributesCreatedByData;
};

export type AmenityCreatedByDataAttributes = { [key: string]: any };

export type AmenityCreatedByData = {
  attributes?: AmenityCreatedByDataAttributes;
  id?: number;
};

export type AmenityCreatedBy = {
  data?: AmenityCreatedByData;
};

export type AmenityListResponseMetaPagination = {
  page?: number;
  /** @maximum 1 */
  pageCount?: number;
  /** @minimum 25 */
  pageSize?: number;
  total?: number;
};

export type AmenityListResponseMeta = {
  pagination?: AmenityListResponseMetaPagination;
};

export interface AmenityListResponseDataItem {
  attributes?: Amenity;
  id?: number;
}

export interface AmenityListResponse {
  data?: AmenityListResponseDataItem[];
  meta?: AmenityListResponseMeta;
}

export type AmenityRequestDataIcon = number | string;

export type AmenityRequestData = {
  icon?: AmenityRequestDataIcon;
  name: string;
};

export interface AmenityRequest {
  data: AmenityRequestData;
}

export type AllianceTierResponseMeta = { [key: string]: any };

export interface AllianceTierResponseDataObject {
  attributes?: AllianceTier;
  id?: number;
}

export interface AllianceTierResponse {
  data?: AllianceTierResponseDataObject;
  meta?: AllianceTierResponseMeta;
}

export type AllianceTierUpdatedByDataAttributes = { [key: string]: any };

export type AllianceTierUpdatedByData = {
  attributes?: AllianceTierUpdatedByDataAttributes;
  id?: number;
};

export type AllianceTierUpdatedBy = {
  data?: AllianceTierUpdatedByData;
};

export type AllianceTierCreatedByData = {
  attributes?: AllianceTierCreatedByDataAttributes;
  id?: number;
};

export type AllianceTierCreatedBy = {
  data?: AllianceTierCreatedByData;
};

export interface AllianceTier {
  createdAt?: string;
  createdBy?: AllianceTierCreatedBy;
  name: string;
  updatedAt?: string;
  updatedBy?: AllianceTierUpdatedBy;
  value: string;
}

export type AllianceTierCreatedByDataAttributesUpdatedByDataAttributes = {
  [key: string]: any;
};

export type AllianceTierCreatedByDataAttributesUpdatedByData = {
  attributes?: AllianceTierCreatedByDataAttributesUpdatedByDataAttributes;
  id?: number;
};

export type AllianceTierCreatedByDataAttributesUpdatedBy = {
  data?: AllianceTierCreatedByDataAttributesUpdatedByData;
};

export type AllianceTierCreatedByDataAttributesRolesDataItem = {
  attributes?: AllianceTierCreatedByDataAttributesRolesDataItemAttributes;
  id?: number;
};

export type AllianceTierCreatedByDataAttributesRoles = {
  data?: AllianceTierCreatedByDataAttributesRolesDataItem[];
};

export type AllianceTierCreatedByDataAttributes = {
  blocked?: boolean;
  createdAt?: string;
  createdBy?: AllianceTierCreatedByDataAttributesCreatedBy;
  email?: string;
  firstname?: string;
  isActive?: boolean;
  lastname?: string;
  preferedLanguage?: string;
  registrationToken?: string;
  resetPasswordToken?: string;
  roles?: AllianceTierCreatedByDataAttributesRoles;
  updatedAt?: string;
  updatedBy?: AllianceTierCreatedByDataAttributesUpdatedBy;
  username?: string;
};

export type AllianceTierCreatedByDataAttributesRolesDataItemAttributesUsersDataItemAttributes =
  { [key: string]: any };

export type AllianceTierCreatedByDataAttributesRolesDataItemAttributesUsersDataItem =
  {
    attributes?: AllianceTierCreatedByDataAttributesRolesDataItemAttributesUsersDataItemAttributes;
    id?: number;
  };

export type AllianceTierCreatedByDataAttributesRolesDataItemAttributesUsers = {
  data?: AllianceTierCreatedByDataAttributesRolesDataItemAttributesUsersDataItem[];
};

export type AllianceTierCreatedByDataAttributesRolesDataItemAttributesUpdatedByDataAttributes =
  { [key: string]: any };

export type AllianceTierCreatedByDataAttributesRolesDataItemAttributesUpdatedByData =
  {
    attributes?: AllianceTierCreatedByDataAttributesRolesDataItemAttributesUpdatedByDataAttributes;
    id?: number;
  };

export type AllianceTierCreatedByDataAttributesRolesDataItemAttributesUpdatedBy =
  {
    data?: AllianceTierCreatedByDataAttributesRolesDataItemAttributesUpdatedByData;
  };

export type AllianceTierCreatedByDataAttributesRolesDataItemAttributesPermissions =
  {
    data?: AllianceTierCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItem[];
  };

export type AllianceTierCreatedByDataAttributesRolesDataItemAttributes = {
  code?: string;
  createdAt?: string;
  createdBy?: AllianceTierCreatedByDataAttributesRolesDataItemAttributesCreatedBy;
  description?: string;
  name?: string;
  permissions?: AllianceTierCreatedByDataAttributesRolesDataItemAttributesPermissions;
  updatedAt?: string;
  updatedBy?: AllianceTierCreatedByDataAttributesRolesDataItemAttributesUpdatedBy;
  users?: AllianceTierCreatedByDataAttributesRolesDataItemAttributesUsers;
};

export type AllianceTierCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributesUpdatedByDataAttributes =
  { [key: string]: any };

export type AllianceTierCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributesUpdatedByData =
  {
    attributes?: AllianceTierCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributesUpdatedByDataAttributes;
    id?: number;
  };

export type AllianceTierCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributesUpdatedBy =
  {
    data?: AllianceTierCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributesUpdatedByData;
  };

export type AllianceTierCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributesRoleDataAttributes =
  { [key: string]: any };

export type AllianceTierCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributesRoleData =
  {
    attributes?: AllianceTierCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributesRoleDataAttributes;
    id?: number;
  };

export type AllianceTierCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributesRole =
  {
    data?: AllianceTierCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributesRoleData;
  };

export type AllianceTierCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributesCreatedByDataAttributes =
  { [key: string]: any };

export type AllianceTierCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributesCreatedByData =
  {
    attributes?: AllianceTierCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributesCreatedByDataAttributes;
    id?: number;
  };

export type AllianceTierCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributesCreatedBy =
  {
    data?: AllianceTierCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributesCreatedByData;
  };

export type AllianceTierCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributes =
  {
    action?: string;
    actionParameters?: unknown;
    conditions?: unknown;
    createdAt?: string;
    createdBy?: AllianceTierCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributesCreatedBy;
    properties?: unknown;
    role?: AllianceTierCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributesRole;
    subject?: string;
    updatedAt?: string;
    updatedBy?: AllianceTierCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributesUpdatedBy;
  };

export type AllianceTierCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItem =
  {
    attributes?: AllianceTierCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributes;
    id?: number;
  };

export type AllianceTierCreatedByDataAttributesRolesDataItemAttributesCreatedByDataAttributes =
  { [key: string]: any };

export type AllianceTierCreatedByDataAttributesRolesDataItemAttributesCreatedByData =
  {
    attributes?: AllianceTierCreatedByDataAttributesRolesDataItemAttributesCreatedByDataAttributes;
    id?: number;
  };

export type AllianceTierCreatedByDataAttributesRolesDataItemAttributesCreatedBy =
  {
    data?: AllianceTierCreatedByDataAttributesRolesDataItemAttributesCreatedByData;
  };

export type AllianceTierCreatedByDataAttributesCreatedByDataAttributes = {
  [key: string]: any;
};

export type AllianceTierCreatedByDataAttributesCreatedByData = {
  attributes?: AllianceTierCreatedByDataAttributesCreatedByDataAttributes;
  id?: number;
};

export type AllianceTierCreatedByDataAttributesCreatedBy = {
  data?: AllianceTierCreatedByDataAttributesCreatedByData;
};

export type AllianceTierListResponseMeta = {
  pagination?: AllianceTierListResponseMetaPagination;
};

export interface AllianceTierListResponse {
  data?: AllianceTierListResponseDataItem[];
  meta?: AllianceTierListResponseMeta;
}

export type AllianceTierListResponseMetaPagination = {
  page?: number;
  /** @maximum 1 */
  pageCount?: number;
  /** @minimum 25 */
  pageSize?: number;
  total?: number;
};

export interface AllianceTierListResponseDataItem {
  attributes?: AllianceTier;
  id?: number;
}

export type AllianceTierRequestData = {
  name: string;
  value: string;
};

export interface AllianceTierRequest {
  data: AllianceTierRequestData;
}

export type AirportResponseMeta = { [key: string]: any };

export interface AirportResponse {
  data?: AirportResponseDataObject;
  meta?: AirportResponseMeta;
}

export type AirportUpdatedByDataAttributes = { [key: string]: any };

export type AirportUpdatedByData = {
  attributes?: AirportUpdatedByDataAttributes;
  id?: number;
};

export type AirportUpdatedBy = {
  data?: AirportUpdatedByData;
};

export type AirportState = (typeof AirportState)[keyof typeof AirportState];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const AirportState = {
  AL: "AL",
  AK: "AK",
  AZ: "AZ",
  AR: "AR",
  CA: "CA",
  CO: "CO",
  CT: "CT",
  DE: "DE",
  FL: "FL",
  GA: "GA",
  HI: "HI",
  ID: "ID",
  IL: "IL",
  IN: "IN",
  IA: "IA",
  KS: "KS",
  KY: "KY",
  LA: "LA",
  ME: "ME",
  MD: "MD",
  MA: "MA",
  MI: "MI",
  MN: "MN",
  MS: "MS",
  MO: "MO",
  MT: "MT",
  NE: "NE",
  NV: "NV",
  NH: "NH",
  NJ: "NJ",
  NM: "NM",
  NY: "NY",
  NC: "NC",
  ND: "ND",
  OH: "OH",
  OK: "OK",
  OR: "OR",
  PA: "PA",
  RI: "RI",
  SC: "SC",
  SD: "SD",
  TN: "TN",
  TX: "TX",
  UT: "UT",
  VT: "VT",
  VA: "VA",
  WA: "WA",
  WV: "WV",
  WI: "WI",
  WY: "WY",
} as const;

export type AirportLounges = {
  data?: AirportLoungesDataItem[];
};

export interface Airport {
  accessDetails?: string;
  city: string;
  code: string;
  country: AirportCountry;
  createdAt?: string;
  createdBy?: AirportCreatedBy;
  dayPass?: string;
  lounges?: AirportLounges;
  name: string;
  state?: AirportState;
  updatedAt?: string;
  updatedBy?: AirportUpdatedBy;
}

export interface AirportResponseDataObject {
  attributes?: Airport;
  id?: number;
}

export type AirportLoungesDataItemAttributesUpdatedByDataAttributes = {
  [key: string]: any;
};

export type AirportLoungesDataItemAttributesUpdatedByData = {
  attributes?: AirportLoungesDataItemAttributesUpdatedByDataAttributes;
  id?: number;
};

export type AirportLoungesDataItemAttributesUpdatedBy = {
  data?: AirportLoungesDataItemAttributesUpdatedByData;
};

export type AirportLoungesDataItemAttributesLocalizations = {
  data?: unknown[];
};

export type AirportLoungesDataItemAttributes = {
  airport?: AirportLoungesDataItemAttributesAirport;
  alliance_access?: AirportLoungesDataItemAttributesAllianceAccess;
  ambiguous_access?: boolean;
  amenities?: AirportLoungesDataItemAttributesAmenities;
  cards?: AirportLoungesDataItemAttributesCards;
  createdAt?: string;
  createdBy?: AirportLoungesDataItemAttributesCreatedBy;
  daypass?: string;
  description?: string;
  detriments?: AirportLoungesDataItemAttributesDetriments;
  directions?: string;
  featured?: boolean;
  googlePlaceId?: string;
  guest?: string;
  locale?: string;
  localizations?: AirportLoungesDataItemAttributesLocalizations;
  moreInfo?: string;
  name?: string;
  notes?: string;
  priorityPass?: boolean;
  slug?: string;
  terminal?: string;
  updatedAt?: string;
  updatedBy?: AirportLoungesDataItemAttributesUpdatedBy;
};

export type AirportLoungesDataItem = {
  attributes?: AirportLoungesDataItemAttributes;
  id?: number;
};

export type AirportLoungesDataItemAttributesDetrimentsDataItemAttributes = {
  createdAt?: string;
  createdBy?: AirportLoungesDataItemAttributesDetrimentsDataItemAttributesCreatedBy;
  icon?: AirportLoungesDataItemAttributesDetrimentsDataItemAttributesIcon;
  name?: string;
  updatedAt?: string;
  updatedBy?: AirportLoungesDataItemAttributesDetrimentsDataItemAttributesUpdatedBy;
};

export type AirportLoungesDataItemAttributesDetrimentsDataItem = {
  attributes?: AirportLoungesDataItemAttributesDetrimentsDataItemAttributes;
  id?: number;
};

export type AirportLoungesDataItemAttributesDetriments = {
  data?: AirportLoungesDataItemAttributesDetrimentsDataItem[];
};

export type AirportLoungesDataItemAttributesDetrimentsDataItemAttributesUpdatedByDataAttributes =
  { [key: string]: any };

export type AirportLoungesDataItemAttributesDetrimentsDataItemAttributesUpdatedByData =
  {
    attributes?: AirportLoungesDataItemAttributesDetrimentsDataItemAttributesUpdatedByDataAttributes;
    id?: number;
  };

export type AirportLoungesDataItemAttributesDetrimentsDataItemAttributesUpdatedBy =
  {
    data?: AirportLoungesDataItemAttributesDetrimentsDataItemAttributesUpdatedByData;
  };

export type AirportLoungesDataItemAttributesDetrimentsDataItemAttributesIconData =
  {
    attributes?: AirportLoungesDataItemAttributesDetrimentsDataItemAttributesIconDataAttributes;
    id?: number;
  };

export type AirportLoungesDataItemAttributesDetrimentsDataItemAttributesIcon = {
  data?: AirportLoungesDataItemAttributesDetrimentsDataItemAttributesIconData;
};

export type AirportLoungesDataItemAttributesDetrimentsDataItemAttributesIconDataAttributesUpdatedByDataAttributes =
  { [key: string]: any };

export type AirportLoungesDataItemAttributesDetrimentsDataItemAttributesIconDataAttributesUpdatedByData =
  {
    attributes?: AirportLoungesDataItemAttributesDetrimentsDataItemAttributesIconDataAttributesUpdatedByDataAttributes;
    id?: number;
  };

export type AirportLoungesDataItemAttributesDetrimentsDataItemAttributesIconDataAttributesUpdatedBy =
  {
    data?: AirportLoungesDataItemAttributesDetrimentsDataItemAttributesIconDataAttributesUpdatedByData;
  };

export type AirportLoungesDataItemAttributesDetrimentsDataItemAttributesIconDataAttributesRelatedDataItemAttributes =
  { [key: string]: any };

export type AirportLoungesDataItemAttributesDetrimentsDataItemAttributesIconDataAttributesRelatedDataItem =
  {
    attributes?: AirportLoungesDataItemAttributesDetrimentsDataItemAttributesIconDataAttributesRelatedDataItemAttributes;
    id?: number;
  };

export type AirportLoungesDataItemAttributesDetrimentsDataItemAttributesIconDataAttributesRelated =
  {
    data?: AirportLoungesDataItemAttributesDetrimentsDataItemAttributesIconDataAttributesRelatedDataItem[];
  };

export type AirportLoungesDataItemAttributesDetrimentsDataItemAttributesIconDataAttributesFolderDataAttributes =
  { [key: string]: any };

export type AirportLoungesDataItemAttributesDetrimentsDataItemAttributesIconDataAttributesFolderData =
  {
    attributes?: AirportLoungesDataItemAttributesDetrimentsDataItemAttributesIconDataAttributesFolderDataAttributes;
    id?: number;
  };

export type AirportLoungesDataItemAttributesDetrimentsDataItemAttributesIconDataAttributesFolder =
  {
    data?: AirportLoungesDataItemAttributesDetrimentsDataItemAttributesIconDataAttributesFolderData;
  };

export type AirportLoungesDataItemAttributesDetrimentsDataItemAttributesIconDataAttributes =
  {
    alternativeText?: string;
    caption?: string;
    createdAt?: string;
    createdBy?: AirportLoungesDataItemAttributesDetrimentsDataItemAttributesIconDataAttributesCreatedBy;
    ext?: string;
    folder?: AirportLoungesDataItemAttributesDetrimentsDataItemAttributesIconDataAttributesFolder;
    folderPath?: string;
    formats?: unknown;
    hash?: string;
    height?: number;
    mime?: string;
    name?: string;
    previewUrl?: string;
    provider?: string;
    provider_metadata?: unknown;
    related?: AirportLoungesDataItemAttributesDetrimentsDataItemAttributesIconDataAttributesRelated;
    size?: number;
    updatedAt?: string;
    updatedBy?: AirportLoungesDataItemAttributesDetrimentsDataItemAttributesIconDataAttributesUpdatedBy;
    url?: string;
    width?: number;
  };

export type AirportLoungesDataItemAttributesDetrimentsDataItemAttributesIconDataAttributesCreatedByDataAttributes =
  { [key: string]: any };

export type AirportLoungesDataItemAttributesDetrimentsDataItemAttributesIconDataAttributesCreatedByData =
  {
    attributes?: AirportLoungesDataItemAttributesDetrimentsDataItemAttributesIconDataAttributesCreatedByDataAttributes;
    id?: number;
  };

export type AirportLoungesDataItemAttributesDetrimentsDataItemAttributesIconDataAttributesCreatedBy =
  {
    data?: AirportLoungesDataItemAttributesDetrimentsDataItemAttributesIconDataAttributesCreatedByData;
  };

export type AirportLoungesDataItemAttributesDetrimentsDataItemAttributesCreatedByDataAttributes =
  { [key: string]: any };

export type AirportLoungesDataItemAttributesDetrimentsDataItemAttributesCreatedByData =
  {
    attributes?: AirportLoungesDataItemAttributesDetrimentsDataItemAttributesCreatedByDataAttributes;
    id?: number;
  };

export type AirportLoungesDataItemAttributesDetrimentsDataItemAttributesCreatedBy =
  {
    data?: AirportLoungesDataItemAttributesDetrimentsDataItemAttributesCreatedByData;
  };

export type AirportLoungesDataItemAttributesCreatedByDataAttributes = {
  [key: string]: any;
};

export type AirportLoungesDataItemAttributesCreatedByData = {
  attributes?: AirportLoungesDataItemAttributesCreatedByDataAttributes;
  id?: number;
};

export type AirportLoungesDataItemAttributesCreatedBy = {
  data?: AirportLoungesDataItemAttributesCreatedByData;
};

export type AirportLoungesDataItemAttributesCardsDataItemAttributes = {
  annualFee?: number;
  bank?: AirportLoungesDataItemAttributesCardsDataItemAttributesBank;
  createdAt?: string;
  createdBy?: AirportLoungesDataItemAttributesCardsDataItemAttributesCreatedBy;
  icon?: AirportLoungesDataItemAttributesCardsDataItemAttributesIcon;
  name?: string;
  personalOrBiz?: AirportLoungesDataItemAttributesCardsDataItemAttributesPersonalOrBiz;
  processor?: AirportLoungesDataItemAttributesCardsDataItemAttributesProcessor;
  updatedAt?: string;
  updatedBy?: AirportLoungesDataItemAttributesCardsDataItemAttributesUpdatedBy;
};

export type AirportLoungesDataItemAttributesCardsDataItem = {
  attributes?: AirportLoungesDataItemAttributesCardsDataItemAttributes;
  id?: number;
};

export type AirportLoungesDataItemAttributesCards = {
  data?: AirportLoungesDataItemAttributesCardsDataItem[];
};

export type AirportLoungesDataItemAttributesCardsDataItemAttributesUpdatedByDataAttributes =
  { [key: string]: any };

export type AirportLoungesDataItemAttributesCardsDataItemAttributesUpdatedByData =
  {
    attributes?: AirportLoungesDataItemAttributesCardsDataItemAttributesUpdatedByDataAttributes;
    id?: number;
  };

export type AirportLoungesDataItemAttributesCardsDataItemAttributesUpdatedBy = {
  data?: AirportLoungesDataItemAttributesCardsDataItemAttributesUpdatedByData;
};

export type AirportLoungesDataItemAttributesCardsDataItemAttributesProcessor =
  (typeof AirportLoungesDataItemAttributesCardsDataItemAttributesProcessor)[keyof typeof AirportLoungesDataItemAttributesCardsDataItemAttributesProcessor];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const AirportLoungesDataItemAttributesCardsDataItemAttributesProcessor =
  {
    Visa: "Visa",
    Amex: "Amex",
    Mastercard: "Mastercard",
  } as const;

export type AirportLoungesDataItemAttributesCardsDataItemAttributesPersonalOrBiz =
  (typeof AirportLoungesDataItemAttributesCardsDataItemAttributesPersonalOrBiz)[keyof typeof AirportLoungesDataItemAttributesCardsDataItemAttributesPersonalOrBiz];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const AirportLoungesDataItemAttributesCardsDataItemAttributesPersonalOrBiz =
  {
    Personal: "Personal",
    Business: "Business",
  } as const;

export type AirportLoungesDataItemAttributesCardsDataItemAttributesIconData = {
  attributes?: AirportLoungesDataItemAttributesCardsDataItemAttributesIconDataAttributes;
  id?: number;
};

export type AirportLoungesDataItemAttributesCardsDataItemAttributesIcon = {
  data?: AirportLoungesDataItemAttributesCardsDataItemAttributesIconData;
};

export type AirportLoungesDataItemAttributesCardsDataItemAttributesIconDataAttributesUpdatedByDataAttributes =
  { [key: string]: any };

export type AirportLoungesDataItemAttributesCardsDataItemAttributesIconDataAttributesUpdatedByData =
  {
    attributes?: AirportLoungesDataItemAttributesCardsDataItemAttributesIconDataAttributesUpdatedByDataAttributes;
    id?: number;
  };

export type AirportLoungesDataItemAttributesCardsDataItemAttributesIconDataAttributesUpdatedBy =
  {
    data?: AirportLoungesDataItemAttributesCardsDataItemAttributesIconDataAttributesUpdatedByData;
  };

export type AirportLoungesDataItemAttributesCardsDataItemAttributesIconDataAttributesRelatedDataItemAttributes =
  { [key: string]: any };

export type AirportLoungesDataItemAttributesCardsDataItemAttributesIconDataAttributesRelatedDataItem =
  {
    attributes?: AirportLoungesDataItemAttributesCardsDataItemAttributesIconDataAttributesRelatedDataItemAttributes;
    id?: number;
  };

export type AirportLoungesDataItemAttributesCardsDataItemAttributesIconDataAttributesRelated =
  {
    data?: AirportLoungesDataItemAttributesCardsDataItemAttributesIconDataAttributesRelatedDataItem[];
  };

export type AirportLoungesDataItemAttributesCardsDataItemAttributesIconDataAttributesFolderDataAttributes =
  { [key: string]: any };

export type AirportLoungesDataItemAttributesCardsDataItemAttributesIconDataAttributesFolderData =
  {
    attributes?: AirportLoungesDataItemAttributesCardsDataItemAttributesIconDataAttributesFolderDataAttributes;
    id?: number;
  };

export type AirportLoungesDataItemAttributesCardsDataItemAttributesIconDataAttributesFolder =
  {
    data?: AirportLoungesDataItemAttributesCardsDataItemAttributesIconDataAttributesFolderData;
  };

export type AirportLoungesDataItemAttributesCardsDataItemAttributesIconDataAttributes =
  {
    alternativeText?: string;
    caption?: string;
    createdAt?: string;
    createdBy?: AirportLoungesDataItemAttributesCardsDataItemAttributesIconDataAttributesCreatedBy;
    ext?: string;
    folder?: AirportLoungesDataItemAttributesCardsDataItemAttributesIconDataAttributesFolder;
    folderPath?: string;
    formats?: unknown;
    hash?: string;
    height?: number;
    mime?: string;
    name?: string;
    previewUrl?: string;
    provider?: string;
    provider_metadata?: unknown;
    related?: AirportLoungesDataItemAttributesCardsDataItemAttributesIconDataAttributesRelated;
    size?: number;
    updatedAt?: string;
    updatedBy?: AirportLoungesDataItemAttributesCardsDataItemAttributesIconDataAttributesUpdatedBy;
    url?: string;
    width?: number;
  };

export type AirportLoungesDataItemAttributesCardsDataItemAttributesIconDataAttributesCreatedByDataAttributes =
  { [key: string]: any };

export type AirportLoungesDataItemAttributesCardsDataItemAttributesIconDataAttributesCreatedByData =
  {
    attributes?: AirportLoungesDataItemAttributesCardsDataItemAttributesIconDataAttributesCreatedByDataAttributes;
    id?: number;
  };

export type AirportLoungesDataItemAttributesCardsDataItemAttributesIconDataAttributesCreatedBy =
  {
    data?: AirportLoungesDataItemAttributesCardsDataItemAttributesIconDataAttributesCreatedByData;
  };

export type AirportLoungesDataItemAttributesCardsDataItemAttributesCreatedByDataAttributes =
  { [key: string]: any };

export type AirportLoungesDataItemAttributesCardsDataItemAttributesCreatedByData =
  {
    attributes?: AirportLoungesDataItemAttributesCardsDataItemAttributesCreatedByDataAttributes;
    id?: number;
  };

export type AirportLoungesDataItemAttributesCardsDataItemAttributesCreatedBy = {
  data?: AirportLoungesDataItemAttributesCardsDataItemAttributesCreatedByData;
};

export type AirportLoungesDataItemAttributesCardsDataItemAttributesBank =
  (typeof AirportLoungesDataItemAttributesCardsDataItemAttributesBank)[keyof typeof AirportLoungesDataItemAttributesCardsDataItemAttributesBank];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const AirportLoungesDataItemAttributesCardsDataItemAttributesBank = {
  Chase: "Chase",
  Amex: "Amex",
  Barclays: "Barclays",
  Citi: "Citi",
  Bank_of_America: "Bank of America",
  Capital_One: "Capital One",
  Wells_Fargo: "Wells Fargo",
} as const;

export type AirportLoungesDataItemAttributesAmenitiesDataItemAttributesUpdatedByDataAttributes =
  { [key: string]: any };

export type AirportLoungesDataItemAttributesAmenitiesDataItemAttributesUpdatedByData =
  {
    attributes?: AirportLoungesDataItemAttributesAmenitiesDataItemAttributesUpdatedByDataAttributes;
    id?: number;
  };

export type AirportLoungesDataItemAttributesAmenitiesDataItemAttributesUpdatedBy =
  {
    data?: AirportLoungesDataItemAttributesAmenitiesDataItemAttributesUpdatedByData;
  };

export type AirportLoungesDataItemAttributesAmenitiesDataItemAttributesIconData =
  {
    attributes?: AirportLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributes;
    id?: number;
  };

export type AirportLoungesDataItemAttributesAmenitiesDataItemAttributesIcon = {
  data?: AirportLoungesDataItemAttributesAmenitiesDataItemAttributesIconData;
};

export type AirportLoungesDataItemAttributesAmenitiesDataItemAttributes = {
  createdAt?: string;
  createdBy?: AirportLoungesDataItemAttributesAmenitiesDataItemAttributesCreatedBy;
  icon?: AirportLoungesDataItemAttributesAmenitiesDataItemAttributesIcon;
  name?: string;
  updatedAt?: string;
  updatedBy?: AirportLoungesDataItemAttributesAmenitiesDataItemAttributesUpdatedBy;
};

export type AirportLoungesDataItemAttributesAmenitiesDataItem = {
  attributes?: AirportLoungesDataItemAttributesAmenitiesDataItemAttributes;
  id?: number;
};

export type AirportLoungesDataItemAttributesAmenities = {
  data?: AirportLoungesDataItemAttributesAmenitiesDataItem[];
};

export type AirportLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesUpdatedByDataAttributes =
  { [key: string]: any };

export type AirportLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesUpdatedByData =
  {
    attributes?: AirportLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesUpdatedByDataAttributes;
    id?: number;
  };

export type AirportLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesUpdatedBy =
  {
    data?: AirportLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesUpdatedByData;
  };

export type AirportLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesRelatedDataItemAttributes =
  { [key: string]: any };

export type AirportLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesRelatedDataItem =
  {
    attributes?: AirportLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesRelatedDataItemAttributes;
    id?: number;
  };

export type AirportLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesRelated =
  {
    data?: AirportLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesRelatedDataItem[];
  };

export type AirportLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributes =
  {
    children?: AirportLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesChildren;
    createdAt?: string;
    createdBy?: AirportLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesCreatedBy;
    files?: AirportLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesFiles;
    name?: string;
    parent?: AirportLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesParent;
    path?: string;
    pathId?: number;
    updatedAt?: string;
    updatedBy?: AirportLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesUpdatedBy;
  };

export type AirportLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderData =
  {
    attributes?: AirportLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributes;
    id?: number;
  };

export type AirportLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolder =
  {
    data?: AirportLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderData;
  };

export type AirportLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributes =
  {
    alternativeText?: string;
    caption?: string;
    createdAt?: string;
    createdBy?: AirportLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesCreatedBy;
    ext?: string;
    folder?: AirportLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolder;
    folderPath?: string;
    formats?: unknown;
    hash?: string;
    height?: number;
    mime?: string;
    name?: string;
    previewUrl?: string;
    provider?: string;
    provider_metadata?: unknown;
    related?: AirportLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesRelated;
    size?: number;
    updatedAt?: string;
    updatedBy?: AirportLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesUpdatedBy;
    url?: string;
    width?: number;
  };

export type AirportLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesUpdatedByDataAttributes =
  { [key: string]: any };

export type AirportLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesUpdatedByData =
  {
    attributes?: AirportLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesUpdatedByDataAttributes;
    id?: number;
  };

export type AirportLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesUpdatedBy =
  {
    data?: AirportLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesUpdatedByData;
  };

export type AirportLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesParentDataAttributes =
  { [key: string]: any };

export type AirportLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesParentData =
  {
    attributes?: AirportLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesParentDataAttributes;
    id?: number;
  };

export type AirportLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesParent =
  {
    data?: AirportLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesParentData;
  };

export type AirportLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesFiles =
  {
    data?: AirportLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesFilesDataItem[];
  };

export type AirportLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesFilesDataItemAttributesUpdatedByDataAttributes =
  { [key: string]: any };

export type AirportLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesFilesDataItemAttributesUpdatedByData =
  {
    attributes?: AirportLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesFilesDataItemAttributesUpdatedByDataAttributes;
    id?: number;
  };

export type AirportLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesFilesDataItemAttributesUpdatedBy =
  {
    data?: AirportLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesFilesDataItemAttributesUpdatedByData;
  };

export type AirportLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesFilesDataItemAttributesRelatedDataItemAttributes =
  { [key: string]: any };

export type AirportLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesFilesDataItemAttributesRelatedDataItem =
  {
    attributes?: AirportLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesFilesDataItemAttributesRelatedDataItemAttributes;
    id?: number;
  };

export type AirportLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesFilesDataItemAttributesRelated =
  {
    data?: AirportLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesFilesDataItemAttributesRelatedDataItem[];
  };

export type AirportLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesFilesDataItemAttributesFolderDataAttributes =
  { [key: string]: any };

export type AirportLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesFilesDataItemAttributesFolderData =
  {
    attributes?: AirportLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesFilesDataItemAttributesFolderDataAttributes;
    id?: number;
  };

export type AirportLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesFilesDataItemAttributesFolder =
  {
    data?: AirportLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesFilesDataItemAttributesFolderData;
  };

export type AirportLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributes =
  { [key: string]: any };

export type AirportLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByData =
  {
    attributes?: AirportLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByDataAttributes;
    id?: number;
  };

export type AirportLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedBy =
  {
    data?: AirportLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedByData;
  };

export type AirportLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesFilesDataItemAttributes =
  {
    alternativeText?: string;
    caption?: string;
    createdAt?: string;
    createdBy?: AirportLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesFilesDataItemAttributesCreatedBy;
    ext?: string;
    folder?: AirportLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesFilesDataItemAttributesFolder;
    folderPath?: string;
    formats?: unknown;
    hash?: string;
    height?: number;
    mime?: string;
    name?: string;
    previewUrl?: string;
    provider?: string;
    provider_metadata?: unknown;
    related?: AirportLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesFilesDataItemAttributesRelated;
    size?: number;
    updatedAt?: string;
    updatedBy?: AirportLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesFilesDataItemAttributesUpdatedBy;
    url?: string;
    width?: number;
  };

export type AirportLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesFilesDataItem =
  {
    attributes?: AirportLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesFilesDataItemAttributes;
    id?: number;
  };

export type AirportLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesCreatedByDataAttributes =
  { [key: string]: any };

export type AirportLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesCreatedByData =
  {
    attributes?: AirportLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesCreatedByDataAttributes;
    id?: number;
  };

export type AirportLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesCreatedBy =
  {
    data?: AirportLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesCreatedByData;
  };

export type AirportLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesChildrenDataItemAttributes =
  { [key: string]: any };

export type AirportLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesChildrenDataItem =
  {
    attributes?: AirportLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesChildrenDataItemAttributes;
    id?: number;
  };

export type AirportLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesChildren =
  {
    data?: AirportLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesFolderDataAttributesChildrenDataItem[];
  };

export type AirportLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesCreatedByDataAttributes =
  { [key: string]: any };

export type AirportLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesCreatedByData =
  {
    attributes?: AirportLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesCreatedByDataAttributes;
    id?: number;
  };

export type AirportLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesCreatedBy =
  {
    data?: AirportLoungesDataItemAttributesAmenitiesDataItemAttributesIconDataAttributesCreatedByData;
  };

export type AirportLoungesDataItemAttributesAmenitiesDataItemAttributesCreatedByDataAttributes =
  { [key: string]: any };

export type AirportLoungesDataItemAttributesAmenitiesDataItemAttributesCreatedByData =
  {
    attributes?: AirportLoungesDataItemAttributesAmenitiesDataItemAttributesCreatedByDataAttributes;
    id?: number;
  };

export type AirportLoungesDataItemAttributesAmenitiesDataItemAttributesCreatedBy =
  {
    data?: AirportLoungesDataItemAttributesAmenitiesDataItemAttributesCreatedByData;
  };

export type AirportLoungesDataItemAttributesAllianceAccessDataItem = {
  attributes?: AirportLoungesDataItemAttributesAllianceAccessDataItemAttributes;
  id?: number;
};

export type AirportLoungesDataItemAttributesAllianceAccess = {
  data?: AirportLoungesDataItemAttributesAllianceAccessDataItem[];
};

export type AirportLoungesDataItemAttributesAllianceAccessDataItemAttributesUpdatedByDataAttributes =
  { [key: string]: any };

export type AirportLoungesDataItemAttributesAllianceAccessDataItemAttributesUpdatedByData =
  {
    attributes?: AirportLoungesDataItemAttributesAllianceAccessDataItemAttributesUpdatedByDataAttributes;
    id?: number;
  };

export type AirportLoungesDataItemAttributesAllianceAccessDataItemAttributesUpdatedBy =
  {
    data?: AirportLoungesDataItemAttributesAllianceAccessDataItemAttributesUpdatedByData;
  };

export type AirportLoungesDataItemAttributesAllianceAccessDataItemAttributesCreatedByDataAttributes =
  { [key: string]: any };

export type AirportLoungesDataItemAttributesAllianceAccessDataItemAttributesCreatedByData =
  {
    attributes?: AirportLoungesDataItemAttributesAllianceAccessDataItemAttributesCreatedByDataAttributes;
    id?: number;
  };

export type AirportLoungesDataItemAttributesAllianceAccessDataItemAttributesCreatedBy =
  {
    data?: AirportLoungesDataItemAttributesAllianceAccessDataItemAttributesCreatedByData;
  };

export type AirportLoungesDataItemAttributesAllianceAccessDataItemAttributes = {
  createdAt?: string;
  createdBy?: AirportLoungesDataItemAttributesAllianceAccessDataItemAttributesCreatedBy;
  name?: string;
  updatedAt?: string;
  updatedBy?: AirportLoungesDataItemAttributesAllianceAccessDataItemAttributesUpdatedBy;
  value?: string;
};

export type AirportLoungesDataItemAttributesAirportData = {
  attributes?: AirportLoungesDataItemAttributesAirportDataAttributes;
  id?: number;
};

export type AirportLoungesDataItemAttributesAirport = {
  data?: AirportLoungesDataItemAttributesAirportData;
};

export type AirportLoungesDataItemAttributesAirportDataAttributesUpdatedByDataAttributes =
  { [key: string]: any };

export type AirportLoungesDataItemAttributesAirportDataAttributesUpdatedByData =
  {
    attributes?: AirportLoungesDataItemAttributesAirportDataAttributesUpdatedByDataAttributes;
    id?: number;
  };

export type AirportLoungesDataItemAttributesAirportDataAttributesUpdatedBy = {
  data?: AirportLoungesDataItemAttributesAirportDataAttributesUpdatedByData;
};

export type AirportLoungesDataItemAttributesAirportDataAttributesState =
  (typeof AirportLoungesDataItemAttributesAirportDataAttributesState)[keyof typeof AirportLoungesDataItemAttributesAirportDataAttributesState];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const AirportLoungesDataItemAttributesAirportDataAttributesState = {
  AL: "AL",
  AK: "AK",
  AZ: "AZ",
  AR: "AR",
  CA: "CA",
  CO: "CO",
  CT: "CT",
  DE: "DE",
  FL: "FL",
  GA: "GA",
  HI: "HI",
  ID: "ID",
  IL: "IL",
  IN: "IN",
  IA: "IA",
  KS: "KS",
  KY: "KY",
  LA: "LA",
  ME: "ME",
  MD: "MD",
  MA: "MA",
  MI: "MI",
  MN: "MN",
  MS: "MS",
  MO: "MO",
  MT: "MT",
  NE: "NE",
  NV: "NV",
  NH: "NH",
  NJ: "NJ",
  NM: "NM",
  NY: "NY",
  NC: "NC",
  ND: "ND",
  OH: "OH",
  OK: "OK",
  OR: "OR",
  PA: "PA",
  RI: "RI",
  SC: "SC",
  SD: "SD",
  TN: "TN",
  TX: "TX",
  UT: "UT",
  VT: "VT",
  VA: "VA",
  WA: "WA",
  WV: "WV",
  WI: "WI",
  WY: "WY",
} as const;

export type AirportLoungesDataItemAttributesAirportDataAttributes = {
  accessDetails?: string;
  city?: string;
  code?: string;
  country?: AirportLoungesDataItemAttributesAirportDataAttributesCountry;
  createdAt?: string;
  createdBy?: AirportLoungesDataItemAttributesAirportDataAttributesCreatedBy;
  dayPass?: string;
  lounges?: AirportLoungesDataItemAttributesAirportDataAttributesLounges;
  name?: string;
  state?: AirportLoungesDataItemAttributesAirportDataAttributesState;
  updatedAt?: string;
  updatedBy?: AirportLoungesDataItemAttributesAirportDataAttributesUpdatedBy;
};

export type AirportLoungesDataItemAttributesAirportDataAttributesLoungesDataItemAttributes =
  { [key: string]: any };

export type AirportLoungesDataItemAttributesAirportDataAttributesLoungesDataItem =
  {
    attributes?: AirportLoungesDataItemAttributesAirportDataAttributesLoungesDataItemAttributes;
    id?: number;
  };

export type AirportLoungesDataItemAttributesAirportDataAttributesLounges = {
  data?: AirportLoungesDataItemAttributesAirportDataAttributesLoungesDataItem[];
};

export type AirportLoungesDataItemAttributesAirportDataAttributesCreatedByDataAttributesUpdatedBy =
  {
    data?: AirportLoungesDataItemAttributesAirportDataAttributesCreatedByDataAttributesUpdatedByData;
  };

export type AirportLoungesDataItemAttributesAirportDataAttributesCreatedByDataAttributes =
  {
    blocked?: boolean;
    createdAt?: string;
    createdBy?: AirportLoungesDataItemAttributesAirportDataAttributesCreatedByDataAttributesCreatedBy;
    email?: string;
    firstname?: string;
    isActive?: boolean;
    lastname?: string;
    preferedLanguage?: string;
    registrationToken?: string;
    resetPasswordToken?: string;
    roles?: AirportLoungesDataItemAttributesAirportDataAttributesCreatedByDataAttributesRoles;
    updatedAt?: string;
    updatedBy?: AirportLoungesDataItemAttributesAirportDataAttributesCreatedByDataAttributesUpdatedBy;
    username?: string;
  };

export type AirportLoungesDataItemAttributesAirportDataAttributesCreatedByData =
  {
    attributes?: AirportLoungesDataItemAttributesAirportDataAttributesCreatedByDataAttributes;
    id?: number;
  };

export type AirportLoungesDataItemAttributesAirportDataAttributesCreatedBy = {
  data?: AirportLoungesDataItemAttributesAirportDataAttributesCreatedByData;
};

export type AirportLoungesDataItemAttributesAirportDataAttributesCreatedByDataAttributesUpdatedByDataAttributes =
  { [key: string]: any };

export type AirportLoungesDataItemAttributesAirportDataAttributesCreatedByDataAttributesUpdatedByData =
  {
    attributes?: AirportLoungesDataItemAttributesAirportDataAttributesCreatedByDataAttributesUpdatedByDataAttributes;
    id?: number;
  };

export type AirportLoungesDataItemAttributesAirportDataAttributesCreatedByDataAttributesRolesDataItem =
  {
    attributes?: AirportLoungesDataItemAttributesAirportDataAttributesCreatedByDataAttributesRolesDataItemAttributes;
    id?: number;
  };

export type AirportLoungesDataItemAttributesAirportDataAttributesCreatedByDataAttributesRoles =
  {
    data?: AirportLoungesDataItemAttributesAirportDataAttributesCreatedByDataAttributesRolesDataItem[];
  };

export type AirportLoungesDataItemAttributesAirportDataAttributesCreatedByDataAttributesRolesDataItemAttributesUsersDataItemAttributes =
  { [key: string]: any };

export type AirportLoungesDataItemAttributesAirportDataAttributesCreatedByDataAttributesRolesDataItemAttributesUsersDataItem =
  {
    attributes?: AirportLoungesDataItemAttributesAirportDataAttributesCreatedByDataAttributesRolesDataItemAttributesUsersDataItemAttributes;
    id?: number;
  };

export type AirportLoungesDataItemAttributesAirportDataAttributesCreatedByDataAttributesRolesDataItemAttributesUsers =
  {
    data?: AirportLoungesDataItemAttributesAirportDataAttributesCreatedByDataAttributesRolesDataItemAttributesUsersDataItem[];
  };

export type AirportLoungesDataItemAttributesAirportDataAttributesCreatedByDataAttributesRolesDataItemAttributesUpdatedByDataAttributes =
  { [key: string]: any };

export type AirportLoungesDataItemAttributesAirportDataAttributesCreatedByDataAttributesRolesDataItemAttributesUpdatedByData =
  {
    attributes?: AirportLoungesDataItemAttributesAirportDataAttributesCreatedByDataAttributesRolesDataItemAttributesUpdatedByDataAttributes;
    id?: number;
  };

export type AirportLoungesDataItemAttributesAirportDataAttributesCreatedByDataAttributesRolesDataItemAttributesUpdatedBy =
  {
    data?: AirportLoungesDataItemAttributesAirportDataAttributesCreatedByDataAttributesRolesDataItemAttributesUpdatedByData;
  };

export type AirportLoungesDataItemAttributesAirportDataAttributesCreatedByDataAttributesRolesDataItemAttributesPermissions =
  {
    data?: AirportLoungesDataItemAttributesAirportDataAttributesCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItem[];
  };

export type AirportLoungesDataItemAttributesAirportDataAttributesCreatedByDataAttributesRolesDataItemAttributes =
  {
    code?: string;
    createdAt?: string;
    createdBy?: AirportLoungesDataItemAttributesAirportDataAttributesCreatedByDataAttributesRolesDataItemAttributesCreatedBy;
    description?: string;
    name?: string;
    permissions?: AirportLoungesDataItemAttributesAirportDataAttributesCreatedByDataAttributesRolesDataItemAttributesPermissions;
    updatedAt?: string;
    updatedBy?: AirportLoungesDataItemAttributesAirportDataAttributesCreatedByDataAttributesRolesDataItemAttributesUpdatedBy;
    users?: AirportLoungesDataItemAttributesAirportDataAttributesCreatedByDataAttributesRolesDataItemAttributesUsers;
  };

export type AirportLoungesDataItemAttributesAirportDataAttributesCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributesUpdatedByDataAttributes =
  { [key: string]: any };

export type AirportLoungesDataItemAttributesAirportDataAttributesCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributesUpdatedByData =
  {
    attributes?: AirportLoungesDataItemAttributesAirportDataAttributesCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributesUpdatedByDataAttributes;
    id?: number;
  };

export type AirportLoungesDataItemAttributesAirportDataAttributesCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributesUpdatedBy =
  {
    data?: AirportLoungesDataItemAttributesAirportDataAttributesCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributesUpdatedByData;
  };

export type AirportLoungesDataItemAttributesAirportDataAttributesCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributesRoleDataAttributes =
  { [key: string]: any };

export type AirportLoungesDataItemAttributesAirportDataAttributesCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributesRoleData =
  {
    attributes?: AirportLoungesDataItemAttributesAirportDataAttributesCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributesRoleDataAttributes;
    id?: number;
  };

export type AirportLoungesDataItemAttributesAirportDataAttributesCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributesRole =
  {
    data?: AirportLoungesDataItemAttributesAirportDataAttributesCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributesRoleData;
  };

export type AirportLoungesDataItemAttributesAirportDataAttributesCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributesCreatedByDataAttributes =
  { [key: string]: any };

export type AirportLoungesDataItemAttributesAirportDataAttributesCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributesCreatedByData =
  {
    attributes?: AirportLoungesDataItemAttributesAirportDataAttributesCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributesCreatedByDataAttributes;
    id?: number;
  };

export type AirportLoungesDataItemAttributesAirportDataAttributesCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributesCreatedBy =
  {
    data?: AirportLoungesDataItemAttributesAirportDataAttributesCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributesCreatedByData;
  };

export type AirportLoungesDataItemAttributesAirportDataAttributesCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributes =
  {
    action?: string;
    actionParameters?: unknown;
    conditions?: unknown;
    createdAt?: string;
    createdBy?: AirportLoungesDataItemAttributesAirportDataAttributesCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributesCreatedBy;
    properties?: unknown;
    role?: AirportLoungesDataItemAttributesAirportDataAttributesCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributesRole;
    subject?: string;
    updatedAt?: string;
    updatedBy?: AirportLoungesDataItemAttributesAirportDataAttributesCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributesUpdatedBy;
  };

export type AirportLoungesDataItemAttributesAirportDataAttributesCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItem =
  {
    attributes?: AirportLoungesDataItemAttributesAirportDataAttributesCreatedByDataAttributesRolesDataItemAttributesPermissionsDataItemAttributes;
    id?: number;
  };

export type AirportLoungesDataItemAttributesAirportDataAttributesCreatedByDataAttributesRolesDataItemAttributesCreatedByDataAttributes =
  { [key: string]: any };

export type AirportLoungesDataItemAttributesAirportDataAttributesCreatedByDataAttributesRolesDataItemAttributesCreatedByData =
  {
    attributes?: AirportLoungesDataItemAttributesAirportDataAttributesCreatedByDataAttributesRolesDataItemAttributesCreatedByDataAttributes;
    id?: number;
  };

export type AirportLoungesDataItemAttributesAirportDataAttributesCreatedByDataAttributesRolesDataItemAttributesCreatedBy =
  {
    data?: AirportLoungesDataItemAttributesAirportDataAttributesCreatedByDataAttributesRolesDataItemAttributesCreatedByData;
  };

export type AirportLoungesDataItemAttributesAirportDataAttributesCreatedByDataAttributesCreatedByDataAttributes =
  { [key: string]: any };

export type AirportLoungesDataItemAttributesAirportDataAttributesCreatedByDataAttributesCreatedByData =
  {
    attributes?: AirportLoungesDataItemAttributesAirportDataAttributesCreatedByDataAttributesCreatedByDataAttributes;
    id?: number;
  };

export type AirportLoungesDataItemAttributesAirportDataAttributesCreatedByDataAttributesCreatedBy =
  {
    data?: AirportLoungesDataItemAttributesAirportDataAttributesCreatedByDataAttributesCreatedByData;
  };

export type AirportLoungesDataItemAttributesAirportDataAttributesCountry =
  (typeof AirportLoungesDataItemAttributesAirportDataAttributesCountry)[keyof typeof AirportLoungesDataItemAttributesAirportDataAttributesCountry];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const AirportLoungesDataItemAttributesAirportDataAttributesCountry = {
  Argentina: "Argentina",
  Australia: "Australia",
  Austria: "Austria",
  Bahamas: "Bahamas",
  Bahrain: "Bahrain",
  Bangladesh: "Bangladesh",
  Belgium: "Belgium",
  Belize: "Belize",
  Brazil: "Brazil",
  Bulgaria: "Bulgaria",
  Cambodia: "Cambodia",
  Canada: "Canada",
  Chile: "Chile",
  China: "China",
  Colombia: "Colombia",
  Costa_Rica: "Costa Rica",
  Croatia: "Croatia",
  Cuba: "Cuba",
  Cyprus: "Cyprus",
  Czech_Republic: "Czech Republic",
  Denmark: "Denmark",
  Dominican_Republic: "Dominican Republic",
  Ecuador: "Ecuador",
  Egypt: "Egypt",
  El_Salvador: "El Salvador",
  Estonia: "Estonia",
  Fiji: "Fiji",
  Finland: "Finland",
  France: "France",
  Germany: "Germany",
  Greece: "Greece",
  Guatemala: "Guatemala",
  Honduras: "Honduras",
  Hungary: "Hungary",
  Iceland: "Iceland",
  India: "India",
  Indonesia: "Indonesia",
  Ireland: "Ireland",
  Israel: "Israel",
  Italy: "Italy",
  Jamaica: "Jamaica",
  Japan: "Japan",
  Jordan: "Jordan",
  Kenya: "Kenya",
  Kuwait: "Kuwait",
  Latvia: "Latvia",
  Lebanon: "Lebanon",
  Lithuania: "Lithuania",
  Luxembourg: "Luxembourg",
  Malaysia: "Malaysia",
  Malta: "Malta",
  Mauritius: "Mauritius",
  Mexico: "Mexico",
  Monaco: "Monaco",
  Montenegro: "Montenegro",
  Morocco: "Morocco",
  Myanmar: "Myanmar",
  Nepal: "Nepal",
  Netherlands: "Netherlands",
  New_Zealand: "New Zealand",
  Nicaragua: "Nicaragua",
  Nigeria: "Nigeria",
  Norway: "Norway",
  Oman: "Oman",
  Pakistan: "Pakistan",
  Panama: "Panama",
  Paraguay: "Paraguay",
  Peru: "Peru",
  Philippines: "Philippines",
  Poland: "Poland",
  Portugal: "Portugal",
  Qatar: "Qatar",
  Romania: "Romania",
  Russia: "Russia",
  Saint_Kitts_and_Nevis: "Saint Kitts and Nevis",
  Saint_Lucia: "Saint Lucia",
  Saudi_Arabia: "Saudi Arabia",
  Serbia: "Serbia",
  Singapore: "Singapore",
  Slovakia: "Slovakia",
  Slovenia: "Slovenia",
  South_Africa: "South Africa",
  South_Korea: "South Korea",
  Spain: "Spain",
  Sri_Lanka: "Sri Lanka",
  Sweden: "Sweden",
  Switzerland: "Switzerland",
  Taiwan: "Taiwan",
  Tanzania: "Tanzania",
  Thailand: "Thailand",
  Trinidad_and_Tobago: "Trinidad and Tobago",
  Turkey: "Turkey",
  Uganda: "Uganda",
  Ukraine: "Ukraine",
  United_Arab_Emirates: "United Arab Emirates",
  United_Kingdom: "United Kingdom",
  United_States: "United States",
  Uruguay: "Uruguay",
  Venezuela: "Venezuela",
  Vietnam: "Vietnam",
  Zambia: "Zambia",
  Zimbabwe: "Zimbabwe",
} as const;

export type AirportCreatedByDataAttributes = { [key: string]: any };

export type AirportCreatedByData = {
  attributes?: AirportCreatedByDataAttributes;
  id?: number;
};

export type AirportCreatedBy = {
  data?: AirportCreatedByData;
};

export type AirportCountry =
  (typeof AirportCountry)[keyof typeof AirportCountry];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const AirportCountry = {
  Argentina: "Argentina",
  Australia: "Australia",
  Austria: "Austria",
  Bahamas: "Bahamas",
  Bahrain: "Bahrain",
  Bangladesh: "Bangladesh",
  Belgium: "Belgium",
  Belize: "Belize",
  Brazil: "Brazil",
  Bulgaria: "Bulgaria",
  Cambodia: "Cambodia",
  Canada: "Canada",
  Chile: "Chile",
  China: "China",
  Colombia: "Colombia",
  Costa_Rica: "Costa Rica",
  Croatia: "Croatia",
  Cuba: "Cuba",
  Cyprus: "Cyprus",
  Czech_Republic: "Czech Republic",
  Denmark: "Denmark",
  Dominican_Republic: "Dominican Republic",
  Ecuador: "Ecuador",
  Egypt: "Egypt",
  El_Salvador: "El Salvador",
  Estonia: "Estonia",
  Fiji: "Fiji",
  Finland: "Finland",
  France: "France",
  Germany: "Germany",
  Greece: "Greece",
  Guatemala: "Guatemala",
  Honduras: "Honduras",
  Hungary: "Hungary",
  Iceland: "Iceland",
  India: "India",
  Indonesia: "Indonesia",
  Ireland: "Ireland",
  Israel: "Israel",
  Italy: "Italy",
  Jamaica: "Jamaica",
  Japan: "Japan",
  Jordan: "Jordan",
  Kenya: "Kenya",
  Kuwait: "Kuwait",
  Latvia: "Latvia",
  Lebanon: "Lebanon",
  Lithuania: "Lithuania",
  Luxembourg: "Luxembourg",
  Malaysia: "Malaysia",
  Malta: "Malta",
  Mauritius: "Mauritius",
  Mexico: "Mexico",
  Monaco: "Monaco",
  Montenegro: "Montenegro",
  Morocco: "Morocco",
  Myanmar: "Myanmar",
  Nepal: "Nepal",
  Netherlands: "Netherlands",
  New_Zealand: "New Zealand",
  Nicaragua: "Nicaragua",
  Nigeria: "Nigeria",
  Norway: "Norway",
  Oman: "Oman",
  Pakistan: "Pakistan",
  Panama: "Panama",
  Paraguay: "Paraguay",
  Peru: "Peru",
  Philippines: "Philippines",
  Poland: "Poland",
  Portugal: "Portugal",
  Qatar: "Qatar",
  Romania: "Romania",
  Russia: "Russia",
  Saint_Kitts_and_Nevis: "Saint Kitts and Nevis",
  Saint_Lucia: "Saint Lucia",
  Saudi_Arabia: "Saudi Arabia",
  Serbia: "Serbia",
  Singapore: "Singapore",
  Slovakia: "Slovakia",
  Slovenia: "Slovenia",
  South_Africa: "South Africa",
  South_Korea: "South Korea",
  Spain: "Spain",
  Sri_Lanka: "Sri Lanka",
  Sweden: "Sweden",
  Switzerland: "Switzerland",
  Taiwan: "Taiwan",
  Tanzania: "Tanzania",
  Thailand: "Thailand",
  Trinidad_and_Tobago: "Trinidad and Tobago",
  Turkey: "Turkey",
  Uganda: "Uganda",
  Ukraine: "Ukraine",
  United_Arab_Emirates: "United Arab Emirates",
  United_Kingdom: "United Kingdom",
  United_States: "United States",
  Uruguay: "Uruguay",
  Venezuela: "Venezuela",
  Vietnam: "Vietnam",
  Zambia: "Zambia",
  Zimbabwe: "Zimbabwe",
} as const;

export type AirportListResponseMetaPagination = {
  page?: number;
  /** @maximum 1 */
  pageCount?: number;
  /** @minimum 25 */
  pageSize?: number;
  total?: number;
};

export type AirportListResponseMeta = {
  pagination?: AirportListResponseMetaPagination;
};

export interface AirportListResponseDataItem {
  attributes?: Airport;
  id?: number;
}

export interface AirportListResponse {
  data?: AirportListResponseDataItem[];
  meta?: AirportListResponseMeta;
}

export interface AirportRequest {
  data: AirportRequestData;
}

export type AirportRequestDataState =
  (typeof AirportRequestDataState)[keyof typeof AirportRequestDataState];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const AirportRequestDataState = {
  AL: "AL",
  AK: "AK",
  AZ: "AZ",
  AR: "AR",
  CA: "CA",
  CO: "CO",
  CT: "CT",
  DE: "DE",
  FL: "FL",
  GA: "GA",
  HI: "HI",
  ID: "ID",
  IL: "IL",
  IN: "IN",
  IA: "IA",
  KS: "KS",
  KY: "KY",
  LA: "LA",
  ME: "ME",
  MD: "MD",
  MA: "MA",
  MI: "MI",
  MN: "MN",
  MS: "MS",
  MO: "MO",
  MT: "MT",
  NE: "NE",
  NV: "NV",
  NH: "NH",
  NJ: "NJ",
  NM: "NM",
  NY: "NY",
  NC: "NC",
  ND: "ND",
  OH: "OH",
  OK: "OK",
  OR: "OR",
  PA: "PA",
  RI: "RI",
  SC: "SC",
  SD: "SD",
  TN: "TN",
  TX: "TX",
  UT: "UT",
  VT: "VT",
  VA: "VA",
  WA: "WA",
  WV: "WV",
  WI: "WI",
  WY: "WY",
} as const;

export type AirportRequestDataLoungesItem = number | string;

export type AirportRequestDataCountry =
  (typeof AirportRequestDataCountry)[keyof typeof AirportRequestDataCountry];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const AirportRequestDataCountry = {
  Argentina: "Argentina",
  Australia: "Australia",
  Austria: "Austria",
  Bahamas: "Bahamas",
  Bahrain: "Bahrain",
  Bangladesh: "Bangladesh",
  Belgium: "Belgium",
  Belize: "Belize",
  Brazil: "Brazil",
  Bulgaria: "Bulgaria",
  Cambodia: "Cambodia",
  Canada: "Canada",
  Chile: "Chile",
  China: "China",
  Colombia: "Colombia",
  Costa_Rica: "Costa Rica",
  Croatia: "Croatia",
  Cuba: "Cuba",
  Cyprus: "Cyprus",
  Czech_Republic: "Czech Republic",
  Denmark: "Denmark",
  Dominican_Republic: "Dominican Republic",
  Ecuador: "Ecuador",
  Egypt: "Egypt",
  El_Salvador: "El Salvador",
  Estonia: "Estonia",
  Fiji: "Fiji",
  Finland: "Finland",
  France: "France",
  Germany: "Germany",
  Greece: "Greece",
  Guatemala: "Guatemala",
  Honduras: "Honduras",
  Hungary: "Hungary",
  Iceland: "Iceland",
  India: "India",
  Indonesia: "Indonesia",
  Ireland: "Ireland",
  Israel: "Israel",
  Italy: "Italy",
  Jamaica: "Jamaica",
  Japan: "Japan",
  Jordan: "Jordan",
  Kenya: "Kenya",
  Kuwait: "Kuwait",
  Latvia: "Latvia",
  Lebanon: "Lebanon",
  Lithuania: "Lithuania",
  Luxembourg: "Luxembourg",
  Malaysia: "Malaysia",
  Malta: "Malta",
  Mauritius: "Mauritius",
  Mexico: "Mexico",
  Monaco: "Monaco",
  Montenegro: "Montenegro",
  Morocco: "Morocco",
  Myanmar: "Myanmar",
  Nepal: "Nepal",
  Netherlands: "Netherlands",
  New_Zealand: "New Zealand",
  Nicaragua: "Nicaragua",
  Nigeria: "Nigeria",
  Norway: "Norway",
  Oman: "Oman",
  Pakistan: "Pakistan",
  Panama: "Panama",
  Paraguay: "Paraguay",
  Peru: "Peru",
  Philippines: "Philippines",
  Poland: "Poland",
  Portugal: "Portugal",
  Qatar: "Qatar",
  Romania: "Romania",
  Russia: "Russia",
  Saint_Kitts_and_Nevis: "Saint Kitts and Nevis",
  Saint_Lucia: "Saint Lucia",
  Saudi_Arabia: "Saudi Arabia",
  Serbia: "Serbia",
  Singapore: "Singapore",
  Slovakia: "Slovakia",
  Slovenia: "Slovenia",
  South_Africa: "South Africa",
  South_Korea: "South Korea",
  Spain: "Spain",
  Sri_Lanka: "Sri Lanka",
  Sweden: "Sweden",
  Switzerland: "Switzerland",
  Taiwan: "Taiwan",
  Tanzania: "Tanzania",
  Thailand: "Thailand",
  Trinidad_and_Tobago: "Trinidad and Tobago",
  Turkey: "Turkey",
  Uganda: "Uganda",
  Ukraine: "Ukraine",
  United_Arab_Emirates: "United Arab Emirates",
  United_Kingdom: "United Kingdom",
  United_States: "United States",
  Uruguay: "Uruguay",
  Venezuela: "Venezuela",
  Vietnam: "Vietnam",
  Zambia: "Zambia",
  Zimbabwe: "Zimbabwe",
} as const;

export type AirportRequestData = {
  accessDetails?: string;
  city: string;
  code: string;
  country: AirportRequestDataCountry;
  dayPass?: string;
  lounges?: AirportRequestDataLoungesItem[];
  name: string;
  state?: AirportRequestDataState;
};

export type ErrorErrorDetails = { [key: string]: any };

export type ErrorError = {
  details?: ErrorErrorDetails;
  message?: string;
  name?: string;
  status?: number;
};

export interface Error {
  /** @nullable */
  data?: ErrorData;
  error: ErrorError;
}

export type ErrorDataOneOfTwoItem = { [key: string]: any };

export type ErrorDataOneOf = { [key: string]: any };

/**
 * @nullable
 */
export type ErrorData = ErrorDataOneOf | ErrorDataOneOfTwoItem[] | null;

export const getAirports = (
  params?: GetAirportsParams,
  options?: AxiosRequestConfig,
): Promise<AxiosResponse<AirportListResponse>> => {
  return axios.get(`/airports`, {
    ...options,
    params: { ...params, ...options?.params },
  });
};

export const getGetAirportsQueryKey = (params?: GetAirportsParams) => {
  return [`/airports`, ...(params ? [params] : [])] as const;
};

export const getGetAirportsQueryOptions = <
  TData = Awaited<ReturnType<typeof getAirports>>,
  TError = AxiosError<Error>,
>(
  params?: GetAirportsParams,
  options?: {
    query?: Partial<
      UseQueryOptions<Awaited<ReturnType<typeof getAirports>>, TError, TData>
    >;
    axios?: AxiosRequestConfig;
  },
) => {
  const { query: queryOptions, axios: axiosOptions } = options ?? {};

  const queryKey = queryOptions?.queryKey ?? getGetAirportsQueryKey(params);

  const queryFn: QueryFunction<Awaited<ReturnType<typeof getAirports>>> = ({
    signal,
  }) => getAirports(params, { signal, ...axiosOptions });

  return { queryKey, queryFn, ...queryOptions } as UseQueryOptions<
    Awaited<ReturnType<typeof getAirports>>,
    TError,
    TData
  > & { queryKey: QueryKey };
};

export type GetAirportsQueryResult = NonNullable<
  Awaited<ReturnType<typeof getAirports>>
>;
export type GetAirportsQueryError = AxiosError<Error>;

export const useGetAirports = <
  TData = Awaited<ReturnType<typeof getAirports>>,
  TError = AxiosError<Error>,
>(
  params?: GetAirportsParams,
  options?: {
    query?: Partial<
      UseQueryOptions<Awaited<ReturnType<typeof getAirports>>, TError, TData>
    >;
    axios?: AxiosRequestConfig;
  },
): UseQueryResult<TData, TError> & { queryKey: QueryKey } => {
  const queryOptions = getGetAirportsQueryOptions(params, options);

  const query = useQuery(queryOptions) as UseQueryResult<TData, TError> & {
    queryKey: QueryKey;
  };

  query.queryKey = queryOptions.queryKey;

  return query;
};

export const postAirports = (
  airportRequest: AirportRequest,
  options?: AxiosRequestConfig,
): Promise<AxiosResponse<AirportResponse>> => {
  return axios.post(`/airports`, airportRequest, options);
};

export const getPostAirportsMutationOptions = <
  TError = AxiosError<Error>,
  TContext = unknown,
>(options?: {
  mutation?: UseMutationOptions<
    Awaited<ReturnType<typeof postAirports>>,
    TError,
    { data: AirportRequest },
    TContext
  >;
  axios?: AxiosRequestConfig;
}): UseMutationOptions<
  Awaited<ReturnType<typeof postAirports>>,
  TError,
  { data: AirportRequest },
  TContext
> => {
  const { mutation: mutationOptions, axios: axiosOptions } = options ?? {};

  const mutationFn: MutationFunction<
    Awaited<ReturnType<typeof postAirports>>,
    { data: AirportRequest }
  > = (props) => {
    const { data } = props ?? {};

    return postAirports(data, axiosOptions);
  };

  return { mutationFn, ...mutationOptions };
};

export type PostAirportsMutationResult = NonNullable<
  Awaited<ReturnType<typeof postAirports>>
>;
export type PostAirportsMutationBody = AirportRequest;
export type PostAirportsMutationError = AxiosError<Error>;

export const usePostAirports = <
  TError = AxiosError<Error>,
  TContext = unknown,
>(options?: {
  mutation?: UseMutationOptions<
    Awaited<ReturnType<typeof postAirports>>,
    TError,
    { data: AirportRequest },
    TContext
  >;
  axios?: AxiosRequestConfig;
}): UseMutationResult<
  Awaited<ReturnType<typeof postAirports>>,
  TError,
  { data: AirportRequest },
  TContext
> => {
  const mutationOptions = getPostAirportsMutationOptions(options);

  return useMutation(mutationOptions);
};

export const getAirportsId = (
  id: number,
  options?: AxiosRequestConfig,
): Promise<AxiosResponse<AirportResponse>> => {
  return axios.get(`/airports/${id}`, options);
};

export const getGetAirportsIdQueryKey = (id: number) => {
  return [`/airports/${id}`] as const;
};

export const getGetAirportsIdQueryOptions = <
  TData = Awaited<ReturnType<typeof getAirportsId>>,
  TError = AxiosError<Error>,
>(
  id: number,
  options?: {
    query?: Partial<
      UseQueryOptions<Awaited<ReturnType<typeof getAirportsId>>, TError, TData>
    >;
    axios?: AxiosRequestConfig;
  },
) => {
  const { query: queryOptions, axios: axiosOptions } = options ?? {};

  const queryKey = queryOptions?.queryKey ?? getGetAirportsIdQueryKey(id);

  const queryFn: QueryFunction<Awaited<ReturnType<typeof getAirportsId>>> = ({
    signal,
  }) => getAirportsId(id, { signal, ...axiosOptions });

  return {
    queryKey,
    queryFn,
    enabled: !!id,
    ...queryOptions,
  } as UseQueryOptions<
    Awaited<ReturnType<typeof getAirportsId>>,
    TError,
    TData
  > & { queryKey: QueryKey };
};

export type GetAirportsIdQueryResult = NonNullable<
  Awaited<ReturnType<typeof getAirportsId>>
>;
export type GetAirportsIdQueryError = AxiosError<Error>;

export const useGetAirportsId = <
  TData = Awaited<ReturnType<typeof getAirportsId>>,
  TError = AxiosError<Error>,
>(
  id: number,
  options?: {
    query?: Partial<
      UseQueryOptions<Awaited<ReturnType<typeof getAirportsId>>, TError, TData>
    >;
    axios?: AxiosRequestConfig;
  },
): UseQueryResult<TData, TError> & { queryKey: QueryKey } => {
  const queryOptions = getGetAirportsIdQueryOptions(id, options);

  const query = useQuery(queryOptions) as UseQueryResult<TData, TError> & {
    queryKey: QueryKey;
  };

  query.queryKey = queryOptions.queryKey;

  return query;
};

export const putAirportsId = (
  id: number,
  airportRequest: AirportRequest,
  options?: AxiosRequestConfig,
): Promise<AxiosResponse<AirportResponse>> => {
  return axios.put(`/airports/${id}`, airportRequest, options);
};

export const getPutAirportsIdMutationOptions = <
  TError = AxiosError<Error>,
  TContext = unknown,
>(options?: {
  mutation?: UseMutationOptions<
    Awaited<ReturnType<typeof putAirportsId>>,
    TError,
    { id: number; data: AirportRequest },
    TContext
  >;
  axios?: AxiosRequestConfig;
}): UseMutationOptions<
  Awaited<ReturnType<typeof putAirportsId>>,
  TError,
  { id: number; data: AirportRequest },
  TContext
> => {
  const { mutation: mutationOptions, axios: axiosOptions } = options ?? {};

  const mutationFn: MutationFunction<
    Awaited<ReturnType<typeof putAirportsId>>,
    { id: number; data: AirportRequest }
  > = (props) => {
    const { id, data } = props ?? {};

    return putAirportsId(id, data, axiosOptions);
  };

  return { mutationFn, ...mutationOptions };
};

export type PutAirportsIdMutationResult = NonNullable<
  Awaited<ReturnType<typeof putAirportsId>>
>;
export type PutAirportsIdMutationBody = AirportRequest;
export type PutAirportsIdMutationError = AxiosError<Error>;

export const usePutAirportsId = <
  TError = AxiosError<Error>,
  TContext = unknown,
>(options?: {
  mutation?: UseMutationOptions<
    Awaited<ReturnType<typeof putAirportsId>>,
    TError,
    { id: number; data: AirportRequest },
    TContext
  >;
  axios?: AxiosRequestConfig;
}): UseMutationResult<
  Awaited<ReturnType<typeof putAirportsId>>,
  TError,
  { id: number; data: AirportRequest },
  TContext
> => {
  const mutationOptions = getPutAirportsIdMutationOptions(options);

  return useMutation(mutationOptions);
};

export const deleteAirportsId = (
  id: number,
  options?: AxiosRequestConfig,
): Promise<AxiosResponse<number>> => {
  return axios.delete(`/airports/${id}`, options);
};

export const getDeleteAirportsIdMutationOptions = <
  TError = AxiosError<Error>,
  TContext = unknown,
>(options?: {
  mutation?: UseMutationOptions<
    Awaited<ReturnType<typeof deleteAirportsId>>,
    TError,
    { id: number },
    TContext
  >;
  axios?: AxiosRequestConfig;
}): UseMutationOptions<
  Awaited<ReturnType<typeof deleteAirportsId>>,
  TError,
  { id: number },
  TContext
> => {
  const { mutation: mutationOptions, axios: axiosOptions } = options ?? {};

  const mutationFn: MutationFunction<
    Awaited<ReturnType<typeof deleteAirportsId>>,
    { id: number }
  > = (props) => {
    const { id } = props ?? {};

    return deleteAirportsId(id, axiosOptions);
  };

  return { mutationFn, ...mutationOptions };
};

export type DeleteAirportsIdMutationResult = NonNullable<
  Awaited<ReturnType<typeof deleteAirportsId>>
>;

export type DeleteAirportsIdMutationError = AxiosError<Error>;

export const useDeleteAirportsId = <
  TError = AxiosError<Error>,
  TContext = unknown,
>(options?: {
  mutation?: UseMutationOptions<
    Awaited<ReturnType<typeof deleteAirportsId>>,
    TError,
    { id: number },
    TContext
  >;
  axios?: AxiosRequestConfig;
}): UseMutationResult<
  Awaited<ReturnType<typeof deleteAirportsId>>,
  TError,
  { id: number },
  TContext
> => {
  const mutationOptions = getDeleteAirportsIdMutationOptions(options);

  return useMutation(mutationOptions);
};

export const getAllianceTiers = (
  params?: GetAllianceTiersParams,
  options?: AxiosRequestConfig,
): Promise<AxiosResponse<AllianceTierListResponse>> => {
  return axios.get(`/alliance-tiers`, {
    ...options,
    params: { ...params, ...options?.params },
  });
};

export const getGetAllianceTiersQueryKey = (
  params?: GetAllianceTiersParams,
) => {
  return [`/alliance-tiers`, ...(params ? [params] : [])] as const;
};

export const getGetAllianceTiersQueryOptions = <
  TData = Awaited<ReturnType<typeof getAllianceTiers>>,
  TError = AxiosError<Error>,
>(
  params?: GetAllianceTiersParams,
  options?: {
    query?: Partial<
      UseQueryOptions<
        Awaited<ReturnType<typeof getAllianceTiers>>,
        TError,
        TData
      >
    >;
    axios?: AxiosRequestConfig;
  },
) => {
  const { query: queryOptions, axios: axiosOptions } = options ?? {};

  const queryKey =
    queryOptions?.queryKey ?? getGetAllianceTiersQueryKey(params);

  const queryFn: QueryFunction<
    Awaited<ReturnType<typeof getAllianceTiers>>
  > = ({ signal }) => getAllianceTiers(params, { signal, ...axiosOptions });

  return { queryKey, queryFn, ...queryOptions } as UseQueryOptions<
    Awaited<ReturnType<typeof getAllianceTiers>>,
    TError,
    TData
  > & { queryKey: QueryKey };
};

export type GetAllianceTiersQueryResult = NonNullable<
  Awaited<ReturnType<typeof getAllianceTiers>>
>;
export type GetAllianceTiersQueryError = AxiosError<Error>;

export const useGetAllianceTiers = <
  TData = Awaited<ReturnType<typeof getAllianceTiers>>,
  TError = AxiosError<Error>,
>(
  params?: GetAllianceTiersParams,
  options?: {
    query?: Partial<
      UseQueryOptions<
        Awaited<ReturnType<typeof getAllianceTiers>>,
        TError,
        TData
      >
    >;
    axios?: AxiosRequestConfig;
  },
): UseQueryResult<TData, TError> & { queryKey: QueryKey } => {
  const queryOptions = getGetAllianceTiersQueryOptions(params, options);

  const query = useQuery(queryOptions) as UseQueryResult<TData, TError> & {
    queryKey: QueryKey;
  };

  query.queryKey = queryOptions.queryKey;

  return query;
};

export const postAllianceTiers = (
  allianceTierRequest: AllianceTierRequest,
  options?: AxiosRequestConfig,
): Promise<AxiosResponse<AllianceTierResponse>> => {
  return axios.post(`/alliance-tiers`, allianceTierRequest, options);
};

export const getPostAllianceTiersMutationOptions = <
  TError = AxiosError<Error>,
  TContext = unknown,
>(options?: {
  mutation?: UseMutationOptions<
    Awaited<ReturnType<typeof postAllianceTiers>>,
    TError,
    { data: AllianceTierRequest },
    TContext
  >;
  axios?: AxiosRequestConfig;
}): UseMutationOptions<
  Awaited<ReturnType<typeof postAllianceTiers>>,
  TError,
  { data: AllianceTierRequest },
  TContext
> => {
  const { mutation: mutationOptions, axios: axiosOptions } = options ?? {};

  const mutationFn: MutationFunction<
    Awaited<ReturnType<typeof postAllianceTiers>>,
    { data: AllianceTierRequest }
  > = (props) => {
    const { data } = props ?? {};

    return postAllianceTiers(data, axiosOptions);
  };

  return { mutationFn, ...mutationOptions };
};

export type PostAllianceTiersMutationResult = NonNullable<
  Awaited<ReturnType<typeof postAllianceTiers>>
>;
export type PostAllianceTiersMutationBody = AllianceTierRequest;
export type PostAllianceTiersMutationError = AxiosError<Error>;

export const usePostAllianceTiers = <
  TError = AxiosError<Error>,
  TContext = unknown,
>(options?: {
  mutation?: UseMutationOptions<
    Awaited<ReturnType<typeof postAllianceTiers>>,
    TError,
    { data: AllianceTierRequest },
    TContext
  >;
  axios?: AxiosRequestConfig;
}): UseMutationResult<
  Awaited<ReturnType<typeof postAllianceTiers>>,
  TError,
  { data: AllianceTierRequest },
  TContext
> => {
  const mutationOptions = getPostAllianceTiersMutationOptions(options);

  return useMutation(mutationOptions);
};

export const getAllianceTiersId = (
  id: number,
  options?: AxiosRequestConfig,
): Promise<AxiosResponse<AllianceTierResponse>> => {
  return axios.get(`/alliance-tiers/${id}`, options);
};

export const getGetAllianceTiersIdQueryKey = (id: number) => {
  return [`/alliance-tiers/${id}`] as const;
};

export const getGetAllianceTiersIdQueryOptions = <
  TData = Awaited<ReturnType<typeof getAllianceTiersId>>,
  TError = AxiosError<Error>,
>(
  id: number,
  options?: {
    query?: Partial<
      UseQueryOptions<
        Awaited<ReturnType<typeof getAllianceTiersId>>,
        TError,
        TData
      >
    >;
    axios?: AxiosRequestConfig;
  },
) => {
  const { query: queryOptions, axios: axiosOptions } = options ?? {};

  const queryKey = queryOptions?.queryKey ?? getGetAllianceTiersIdQueryKey(id);

  const queryFn: QueryFunction<
    Awaited<ReturnType<typeof getAllianceTiersId>>
  > = ({ signal }) => getAllianceTiersId(id, { signal, ...axiosOptions });

  return {
    queryKey,
    queryFn,
    enabled: !!id,
    ...queryOptions,
  } as UseQueryOptions<
    Awaited<ReturnType<typeof getAllianceTiersId>>,
    TError,
    TData
  > & { queryKey: QueryKey };
};

export type GetAllianceTiersIdQueryResult = NonNullable<
  Awaited<ReturnType<typeof getAllianceTiersId>>
>;
export type GetAllianceTiersIdQueryError = AxiosError<Error>;

export const useGetAllianceTiersId = <
  TData = Awaited<ReturnType<typeof getAllianceTiersId>>,
  TError = AxiosError<Error>,
>(
  id: number,
  options?: {
    query?: Partial<
      UseQueryOptions<
        Awaited<ReturnType<typeof getAllianceTiersId>>,
        TError,
        TData
      >
    >;
    axios?: AxiosRequestConfig;
  },
): UseQueryResult<TData, TError> & { queryKey: QueryKey } => {
  const queryOptions = getGetAllianceTiersIdQueryOptions(id, options);

  const query = useQuery(queryOptions) as UseQueryResult<TData, TError> & {
    queryKey: QueryKey;
  };

  query.queryKey = queryOptions.queryKey;

  return query;
};

export const putAllianceTiersId = (
  id: number,
  allianceTierRequest: AllianceTierRequest,
  options?: AxiosRequestConfig,
): Promise<AxiosResponse<AllianceTierResponse>> => {
  return axios.put(`/alliance-tiers/${id}`, allianceTierRequest, options);
};

export const getPutAllianceTiersIdMutationOptions = <
  TError = AxiosError<Error>,
  TContext = unknown,
>(options?: {
  mutation?: UseMutationOptions<
    Awaited<ReturnType<typeof putAllianceTiersId>>,
    TError,
    { id: number; data: AllianceTierRequest },
    TContext
  >;
  axios?: AxiosRequestConfig;
}): UseMutationOptions<
  Awaited<ReturnType<typeof putAllianceTiersId>>,
  TError,
  { id: number; data: AllianceTierRequest },
  TContext
> => {
  const { mutation: mutationOptions, axios: axiosOptions } = options ?? {};

  const mutationFn: MutationFunction<
    Awaited<ReturnType<typeof putAllianceTiersId>>,
    { id: number; data: AllianceTierRequest }
  > = (props) => {
    const { id, data } = props ?? {};

    return putAllianceTiersId(id, data, axiosOptions);
  };

  return { mutationFn, ...mutationOptions };
};

export type PutAllianceTiersIdMutationResult = NonNullable<
  Awaited<ReturnType<typeof putAllianceTiersId>>
>;
export type PutAllianceTiersIdMutationBody = AllianceTierRequest;
export type PutAllianceTiersIdMutationError = AxiosError<Error>;

export const usePutAllianceTiersId = <
  TError = AxiosError<Error>,
  TContext = unknown,
>(options?: {
  mutation?: UseMutationOptions<
    Awaited<ReturnType<typeof putAllianceTiersId>>,
    TError,
    { id: number; data: AllianceTierRequest },
    TContext
  >;
  axios?: AxiosRequestConfig;
}): UseMutationResult<
  Awaited<ReturnType<typeof putAllianceTiersId>>,
  TError,
  { id: number; data: AllianceTierRequest },
  TContext
> => {
  const mutationOptions = getPutAllianceTiersIdMutationOptions(options);

  return useMutation(mutationOptions);
};

export const deleteAllianceTiersId = (
  id: number,
  options?: AxiosRequestConfig,
): Promise<AxiosResponse<number>> => {
  return axios.delete(`/alliance-tiers/${id}`, options);
};

export const getDeleteAllianceTiersIdMutationOptions = <
  TError = AxiosError<Error>,
  TContext = unknown,
>(options?: {
  mutation?: UseMutationOptions<
    Awaited<ReturnType<typeof deleteAllianceTiersId>>,
    TError,
    { id: number },
    TContext
  >;
  axios?: AxiosRequestConfig;
}): UseMutationOptions<
  Awaited<ReturnType<typeof deleteAllianceTiersId>>,
  TError,
  { id: number },
  TContext
> => {
  const { mutation: mutationOptions, axios: axiosOptions } = options ?? {};

  const mutationFn: MutationFunction<
    Awaited<ReturnType<typeof deleteAllianceTiersId>>,
    { id: number }
  > = (props) => {
    const { id } = props ?? {};

    return deleteAllianceTiersId(id, axiosOptions);
  };

  return { mutationFn, ...mutationOptions };
};

export type DeleteAllianceTiersIdMutationResult = NonNullable<
  Awaited<ReturnType<typeof deleteAllianceTiersId>>
>;

export type DeleteAllianceTiersIdMutationError = AxiosError<Error>;

export const useDeleteAllianceTiersId = <
  TError = AxiosError<Error>,
  TContext = unknown,
>(options?: {
  mutation?: UseMutationOptions<
    Awaited<ReturnType<typeof deleteAllianceTiersId>>,
    TError,
    { id: number },
    TContext
  >;
  axios?: AxiosRequestConfig;
}): UseMutationResult<
  Awaited<ReturnType<typeof deleteAllianceTiersId>>,
  TError,
  { id: number },
  TContext
> => {
  const mutationOptions = getDeleteAllianceTiersIdMutationOptions(options);

  return useMutation(mutationOptions);
};

export const getAmenities = (
  params?: GetAmenitiesParams,
  options?: AxiosRequestConfig,
): Promise<AxiosResponse<AmenityListResponse>> => {
  return axios.get(`/amenities`, {
    ...options,
    params: { ...params, ...options?.params },
  });
};

export const getGetAmenitiesQueryKey = (params?: GetAmenitiesParams) => {
  return [`/amenities`, ...(params ? [params] : [])] as const;
};

export const getGetAmenitiesQueryOptions = <
  TData = Awaited<ReturnType<typeof getAmenities>>,
  TError = AxiosError<Error>,
>(
  params?: GetAmenitiesParams,
  options?: {
    query?: Partial<
      UseQueryOptions<Awaited<ReturnType<typeof getAmenities>>, TError, TData>
    >;
    axios?: AxiosRequestConfig;
  },
) => {
  const { query: queryOptions, axios: axiosOptions } = options ?? {};

  const queryKey = queryOptions?.queryKey ?? getGetAmenitiesQueryKey(params);

  const queryFn: QueryFunction<Awaited<ReturnType<typeof getAmenities>>> = ({
    signal,
  }) => getAmenities(params, { signal, ...axiosOptions });

  return { queryKey, queryFn, ...queryOptions } as UseQueryOptions<
    Awaited<ReturnType<typeof getAmenities>>,
    TError,
    TData
  > & { queryKey: QueryKey };
};

export type GetAmenitiesQueryResult = NonNullable<
  Awaited<ReturnType<typeof getAmenities>>
>;
export type GetAmenitiesQueryError = AxiosError<Error>;

export const useGetAmenities = <
  TData = Awaited<ReturnType<typeof getAmenities>>,
  TError = AxiosError<Error>,
>(
  params?: GetAmenitiesParams,
  options?: {
    query?: Partial<
      UseQueryOptions<Awaited<ReturnType<typeof getAmenities>>, TError, TData>
    >;
    axios?: AxiosRequestConfig;
  },
): UseQueryResult<TData, TError> & { queryKey: QueryKey } => {
  const queryOptions = getGetAmenitiesQueryOptions(params, options);

  const query = useQuery(queryOptions) as UseQueryResult<TData, TError> & {
    queryKey: QueryKey;
  };

  query.queryKey = queryOptions.queryKey;

  return query;
};

export const postAmenities = (
  amenityRequest: AmenityRequest,
  options?: AxiosRequestConfig,
): Promise<AxiosResponse<AmenityResponse>> => {
  return axios.post(`/amenities`, amenityRequest, options);
};

export const getPostAmenitiesMutationOptions = <
  TError = AxiosError<Error>,
  TContext = unknown,
>(options?: {
  mutation?: UseMutationOptions<
    Awaited<ReturnType<typeof postAmenities>>,
    TError,
    { data: AmenityRequest },
    TContext
  >;
  axios?: AxiosRequestConfig;
}): UseMutationOptions<
  Awaited<ReturnType<typeof postAmenities>>,
  TError,
  { data: AmenityRequest },
  TContext
> => {
  const { mutation: mutationOptions, axios: axiosOptions } = options ?? {};

  const mutationFn: MutationFunction<
    Awaited<ReturnType<typeof postAmenities>>,
    { data: AmenityRequest }
  > = (props) => {
    const { data } = props ?? {};

    return postAmenities(data, axiosOptions);
  };

  return { mutationFn, ...mutationOptions };
};

export type PostAmenitiesMutationResult = NonNullable<
  Awaited<ReturnType<typeof postAmenities>>
>;
export type PostAmenitiesMutationBody = AmenityRequest;
export type PostAmenitiesMutationError = AxiosError<Error>;

export const usePostAmenities = <
  TError = AxiosError<Error>,
  TContext = unknown,
>(options?: {
  mutation?: UseMutationOptions<
    Awaited<ReturnType<typeof postAmenities>>,
    TError,
    { data: AmenityRequest },
    TContext
  >;
  axios?: AxiosRequestConfig;
}): UseMutationResult<
  Awaited<ReturnType<typeof postAmenities>>,
  TError,
  { data: AmenityRequest },
  TContext
> => {
  const mutationOptions = getPostAmenitiesMutationOptions(options);

  return useMutation(mutationOptions);
};

export const getAmenitiesId = (
  id: number,
  options?: AxiosRequestConfig,
): Promise<AxiosResponse<AmenityResponse>> => {
  return axios.get(`/amenities/${id}`, options);
};

export const getGetAmenitiesIdQueryKey = (id: number) => {
  return [`/amenities/${id}`] as const;
};

export const getGetAmenitiesIdQueryOptions = <
  TData = Awaited<ReturnType<typeof getAmenitiesId>>,
  TError = AxiosError<Error>,
>(
  id: number,
  options?: {
    query?: Partial<
      UseQueryOptions<Awaited<ReturnType<typeof getAmenitiesId>>, TError, TData>
    >;
    axios?: AxiosRequestConfig;
  },
) => {
  const { query: queryOptions, axios: axiosOptions } = options ?? {};

  const queryKey = queryOptions?.queryKey ?? getGetAmenitiesIdQueryKey(id);

  const queryFn: QueryFunction<Awaited<ReturnType<typeof getAmenitiesId>>> = ({
    signal,
  }) => getAmenitiesId(id, { signal, ...axiosOptions });

  return {
    queryKey,
    queryFn,
    enabled: !!id,
    ...queryOptions,
  } as UseQueryOptions<
    Awaited<ReturnType<typeof getAmenitiesId>>,
    TError,
    TData
  > & { queryKey: QueryKey };
};

export type GetAmenitiesIdQueryResult = NonNullable<
  Awaited<ReturnType<typeof getAmenitiesId>>
>;
export type GetAmenitiesIdQueryError = AxiosError<Error>;

export const useGetAmenitiesId = <
  TData = Awaited<ReturnType<typeof getAmenitiesId>>,
  TError = AxiosError<Error>,
>(
  id: number,
  options?: {
    query?: Partial<
      UseQueryOptions<Awaited<ReturnType<typeof getAmenitiesId>>, TError, TData>
    >;
    axios?: AxiosRequestConfig;
  },
): UseQueryResult<TData, TError> & { queryKey: QueryKey } => {
  const queryOptions = getGetAmenitiesIdQueryOptions(id, options);

  const query = useQuery(queryOptions) as UseQueryResult<TData, TError> & {
    queryKey: QueryKey;
  };

  query.queryKey = queryOptions.queryKey;

  return query;
};

export const putAmenitiesId = (
  id: number,
  amenityRequest: AmenityRequest,
  options?: AxiosRequestConfig,
): Promise<AxiosResponse<AmenityResponse>> => {
  return axios.put(`/amenities/${id}`, amenityRequest, options);
};

export const getPutAmenitiesIdMutationOptions = <
  TError = AxiosError<Error>,
  TContext = unknown,
>(options?: {
  mutation?: UseMutationOptions<
    Awaited<ReturnType<typeof putAmenitiesId>>,
    TError,
    { id: number; data: AmenityRequest },
    TContext
  >;
  axios?: AxiosRequestConfig;
}): UseMutationOptions<
  Awaited<ReturnType<typeof putAmenitiesId>>,
  TError,
  { id: number; data: AmenityRequest },
  TContext
> => {
  const { mutation: mutationOptions, axios: axiosOptions } = options ?? {};

  const mutationFn: MutationFunction<
    Awaited<ReturnType<typeof putAmenitiesId>>,
    { id: number; data: AmenityRequest }
  > = (props) => {
    const { id, data } = props ?? {};

    return putAmenitiesId(id, data, axiosOptions);
  };

  return { mutationFn, ...mutationOptions };
};

export type PutAmenitiesIdMutationResult = NonNullable<
  Awaited<ReturnType<typeof putAmenitiesId>>
>;
export type PutAmenitiesIdMutationBody = AmenityRequest;
export type PutAmenitiesIdMutationError = AxiosError<Error>;

export const usePutAmenitiesId = <
  TError = AxiosError<Error>,
  TContext = unknown,
>(options?: {
  mutation?: UseMutationOptions<
    Awaited<ReturnType<typeof putAmenitiesId>>,
    TError,
    { id: number; data: AmenityRequest },
    TContext
  >;
  axios?: AxiosRequestConfig;
}): UseMutationResult<
  Awaited<ReturnType<typeof putAmenitiesId>>,
  TError,
  { id: number; data: AmenityRequest },
  TContext
> => {
  const mutationOptions = getPutAmenitiesIdMutationOptions(options);

  return useMutation(mutationOptions);
};

export const deleteAmenitiesId = (
  id: number,
  options?: AxiosRequestConfig,
): Promise<AxiosResponse<number>> => {
  return axios.delete(`/amenities/${id}`, options);
};

export const getDeleteAmenitiesIdMutationOptions = <
  TError = AxiosError<Error>,
  TContext = unknown,
>(options?: {
  mutation?: UseMutationOptions<
    Awaited<ReturnType<typeof deleteAmenitiesId>>,
    TError,
    { id: number },
    TContext
  >;
  axios?: AxiosRequestConfig;
}): UseMutationOptions<
  Awaited<ReturnType<typeof deleteAmenitiesId>>,
  TError,
  { id: number },
  TContext
> => {
  const { mutation: mutationOptions, axios: axiosOptions } = options ?? {};

  const mutationFn: MutationFunction<
    Awaited<ReturnType<typeof deleteAmenitiesId>>,
    { id: number }
  > = (props) => {
    const { id } = props ?? {};

    return deleteAmenitiesId(id, axiosOptions);
  };

  return { mutationFn, ...mutationOptions };
};

export type DeleteAmenitiesIdMutationResult = NonNullable<
  Awaited<ReturnType<typeof deleteAmenitiesId>>
>;

export type DeleteAmenitiesIdMutationError = AxiosError<Error>;

export const useDeleteAmenitiesId = <
  TError = AxiosError<Error>,
  TContext = unknown,
>(options?: {
  mutation?: UseMutationOptions<
    Awaited<ReturnType<typeof deleteAmenitiesId>>,
    TError,
    { id: number },
    TContext
  >;
  axios?: AxiosRequestConfig;
}): UseMutationResult<
  Awaited<ReturnType<typeof deleteAmenitiesId>>,
  TError,
  { id: number },
  TContext
> => {
  const mutationOptions = getDeleteAmenitiesIdMutationOptions(options);

  return useMutation(mutationOptions);
};

export const getCards = (
  params?: GetCardsParams,
  options?: AxiosRequestConfig,
): Promise<AxiosResponse<CardListResponse>> => {
  return axios.get(`/cards`, {
    ...options,
    params: { ...params, ...options?.params },
  });
};

export const getGetCardsQueryKey = (params?: GetCardsParams) => {
  return [`/cards`, ...(params ? [params] : [])] as const;
};

export const getGetCardsQueryOptions = <
  TData = Awaited<ReturnType<typeof getCards>>,
  TError = AxiosError<Error>,
>(
  params?: GetCardsParams,
  options?: {
    query?: Partial<
      UseQueryOptions<Awaited<ReturnType<typeof getCards>>, TError, TData>
    >;
    axios?: AxiosRequestConfig;
  },
) => {
  const { query: queryOptions, axios: axiosOptions } = options ?? {};

  const queryKey = queryOptions?.queryKey ?? getGetCardsQueryKey(params);

  const queryFn: QueryFunction<Awaited<ReturnType<typeof getCards>>> = ({
    signal,
  }) => getCards(params, { signal, ...axiosOptions });

  return { queryKey, queryFn, ...queryOptions } as UseQueryOptions<
    Awaited<ReturnType<typeof getCards>>,
    TError,
    TData
  > & { queryKey: QueryKey };
};

export type GetCardsQueryResult = NonNullable<
  Awaited<ReturnType<typeof getCards>>
>;
export type GetCardsQueryError = AxiosError<Error>;

export const useGetCards = <
  TData = Awaited<ReturnType<typeof getCards>>,
  TError = AxiosError<Error>,
>(
  params?: GetCardsParams,
  options?: {
    query?: Partial<
      UseQueryOptions<Awaited<ReturnType<typeof getCards>>, TError, TData>
    >;
    axios?: AxiosRequestConfig;
  },
): UseQueryResult<TData, TError> & { queryKey: QueryKey } => {
  const queryOptions = getGetCardsQueryOptions(params, options);

  const query = useQuery(queryOptions) as UseQueryResult<TData, TError> & {
    queryKey: QueryKey;
  };

  query.queryKey = queryOptions.queryKey;

  return query;
};

export const postCards = (
  cardRequest: CardRequest,
  options?: AxiosRequestConfig,
): Promise<AxiosResponse<CardResponse>> => {
  return axios.post(`/cards`, cardRequest, options);
};

export const getPostCardsMutationOptions = <
  TError = AxiosError<Error>,
  TContext = unknown,
>(options?: {
  mutation?: UseMutationOptions<
    Awaited<ReturnType<typeof postCards>>,
    TError,
    { data: CardRequest },
    TContext
  >;
  axios?: AxiosRequestConfig;
}): UseMutationOptions<
  Awaited<ReturnType<typeof postCards>>,
  TError,
  { data: CardRequest },
  TContext
> => {
  const { mutation: mutationOptions, axios: axiosOptions } = options ?? {};

  const mutationFn: MutationFunction<
    Awaited<ReturnType<typeof postCards>>,
    { data: CardRequest }
  > = (props) => {
    const { data } = props ?? {};

    return postCards(data, axiosOptions);
  };

  return { mutationFn, ...mutationOptions };
};

export type PostCardsMutationResult = NonNullable<
  Awaited<ReturnType<typeof postCards>>
>;
export type PostCardsMutationBody = CardRequest;
export type PostCardsMutationError = AxiosError<Error>;

export const usePostCards = <
  TError = AxiosError<Error>,
  TContext = unknown,
>(options?: {
  mutation?: UseMutationOptions<
    Awaited<ReturnType<typeof postCards>>,
    TError,
    { data: CardRequest },
    TContext
  >;
  axios?: AxiosRequestConfig;
}): UseMutationResult<
  Awaited<ReturnType<typeof postCards>>,
  TError,
  { data: CardRequest },
  TContext
> => {
  const mutationOptions = getPostCardsMutationOptions(options);

  return useMutation(mutationOptions);
};

export const getCardsId = (
  id: number,
  options?: AxiosRequestConfig,
): Promise<AxiosResponse<CardResponse>> => {
  return axios.get(`/cards/${id}`, options);
};

export const getGetCardsIdQueryKey = (id: number) => {
  return [`/cards/${id}`] as const;
};

export const getGetCardsIdQueryOptions = <
  TData = Awaited<ReturnType<typeof getCardsId>>,
  TError = AxiosError<Error>,
>(
  id: number,
  options?: {
    query?: Partial<
      UseQueryOptions<Awaited<ReturnType<typeof getCardsId>>, TError, TData>
    >;
    axios?: AxiosRequestConfig;
  },
) => {
  const { query: queryOptions, axios: axiosOptions } = options ?? {};

  const queryKey = queryOptions?.queryKey ?? getGetCardsIdQueryKey(id);

  const queryFn: QueryFunction<Awaited<ReturnType<typeof getCardsId>>> = ({
    signal,
  }) => getCardsId(id, { signal, ...axiosOptions });

  return {
    queryKey,
    queryFn,
    enabled: !!id,
    ...queryOptions,
  } as UseQueryOptions<
    Awaited<ReturnType<typeof getCardsId>>,
    TError,
    TData
  > & { queryKey: QueryKey };
};

export type GetCardsIdQueryResult = NonNullable<
  Awaited<ReturnType<typeof getCardsId>>
>;
export type GetCardsIdQueryError = AxiosError<Error>;

export const useGetCardsId = <
  TData = Awaited<ReturnType<typeof getCardsId>>,
  TError = AxiosError<Error>,
>(
  id: number,
  options?: {
    query?: Partial<
      UseQueryOptions<Awaited<ReturnType<typeof getCardsId>>, TError, TData>
    >;
    axios?: AxiosRequestConfig;
  },
): UseQueryResult<TData, TError> & { queryKey: QueryKey } => {
  const queryOptions = getGetCardsIdQueryOptions(id, options);

  const query = useQuery(queryOptions) as UseQueryResult<TData, TError> & {
    queryKey: QueryKey;
  };

  query.queryKey = queryOptions.queryKey;

  return query;
};

export const putCardsId = (
  id: number,
  cardRequest: CardRequest,
  options?: AxiosRequestConfig,
): Promise<AxiosResponse<CardResponse>> => {
  return axios.put(`/cards/${id}`, cardRequest, options);
};

export const getPutCardsIdMutationOptions = <
  TError = AxiosError<Error>,
  TContext = unknown,
>(options?: {
  mutation?: UseMutationOptions<
    Awaited<ReturnType<typeof putCardsId>>,
    TError,
    { id: number; data: CardRequest },
    TContext
  >;
  axios?: AxiosRequestConfig;
}): UseMutationOptions<
  Awaited<ReturnType<typeof putCardsId>>,
  TError,
  { id: number; data: CardRequest },
  TContext
> => {
  const { mutation: mutationOptions, axios: axiosOptions } = options ?? {};

  const mutationFn: MutationFunction<
    Awaited<ReturnType<typeof putCardsId>>,
    { id: number; data: CardRequest }
  > = (props) => {
    const { id, data } = props ?? {};

    return putCardsId(id, data, axiosOptions);
  };

  return { mutationFn, ...mutationOptions };
};

export type PutCardsIdMutationResult = NonNullable<
  Awaited<ReturnType<typeof putCardsId>>
>;
export type PutCardsIdMutationBody = CardRequest;
export type PutCardsIdMutationError = AxiosError<Error>;

export const usePutCardsId = <
  TError = AxiosError<Error>,
  TContext = unknown,
>(options?: {
  mutation?: UseMutationOptions<
    Awaited<ReturnType<typeof putCardsId>>,
    TError,
    { id: number; data: CardRequest },
    TContext
  >;
  axios?: AxiosRequestConfig;
}): UseMutationResult<
  Awaited<ReturnType<typeof putCardsId>>,
  TError,
  { id: number; data: CardRequest },
  TContext
> => {
  const mutationOptions = getPutCardsIdMutationOptions(options);

  return useMutation(mutationOptions);
};

export const deleteCardsId = (
  id: number,
  options?: AxiosRequestConfig,
): Promise<AxiosResponse<number>> => {
  return axios.delete(`/cards/${id}`, options);
};

export const getDeleteCardsIdMutationOptions = <
  TError = AxiosError<Error>,
  TContext = unknown,
>(options?: {
  mutation?: UseMutationOptions<
    Awaited<ReturnType<typeof deleteCardsId>>,
    TError,
    { id: number },
    TContext
  >;
  axios?: AxiosRequestConfig;
}): UseMutationOptions<
  Awaited<ReturnType<typeof deleteCardsId>>,
  TError,
  { id: number },
  TContext
> => {
  const { mutation: mutationOptions, axios: axiosOptions } = options ?? {};

  const mutationFn: MutationFunction<
    Awaited<ReturnType<typeof deleteCardsId>>,
    { id: number }
  > = (props) => {
    const { id } = props ?? {};

    return deleteCardsId(id, axiosOptions);
  };

  return { mutationFn, ...mutationOptions };
};

export type DeleteCardsIdMutationResult = NonNullable<
  Awaited<ReturnType<typeof deleteCardsId>>
>;

export type DeleteCardsIdMutationError = AxiosError<Error>;

export const useDeleteCardsId = <
  TError = AxiosError<Error>,
  TContext = unknown,
>(options?: {
  mutation?: UseMutationOptions<
    Awaited<ReturnType<typeof deleteCardsId>>,
    TError,
    { id: number },
    TContext
  >;
  axios?: AxiosRequestConfig;
}): UseMutationResult<
  Awaited<ReturnType<typeof deleteCardsId>>,
  TError,
  { id: number },
  TContext
> => {
  const mutationOptions = getDeleteCardsIdMutationOptions(options);

  return useMutation(mutationOptions);
};

export const getDetriments = (
  params?: GetDetrimentsParams,
  options?: AxiosRequestConfig,
): Promise<AxiosResponse<DetrimentListResponse>> => {
  return axios.get(`/detriments`, {
    ...options,
    params: { ...params, ...options?.params },
  });
};

export const getGetDetrimentsQueryKey = (params?: GetDetrimentsParams) => {
  return [`/detriments`, ...(params ? [params] : [])] as const;
};

export const getGetDetrimentsQueryOptions = <
  TData = Awaited<ReturnType<typeof getDetriments>>,
  TError = AxiosError<Error>,
>(
  params?: GetDetrimentsParams,
  options?: {
    query?: Partial<
      UseQueryOptions<Awaited<ReturnType<typeof getDetriments>>, TError, TData>
    >;
    axios?: AxiosRequestConfig;
  },
) => {
  const { query: queryOptions, axios: axiosOptions } = options ?? {};

  const queryKey = queryOptions?.queryKey ?? getGetDetrimentsQueryKey(params);

  const queryFn: QueryFunction<Awaited<ReturnType<typeof getDetriments>>> = ({
    signal,
  }) => getDetriments(params, { signal, ...axiosOptions });

  return { queryKey, queryFn, ...queryOptions } as UseQueryOptions<
    Awaited<ReturnType<typeof getDetriments>>,
    TError,
    TData
  > & { queryKey: QueryKey };
};

export type GetDetrimentsQueryResult = NonNullable<
  Awaited<ReturnType<typeof getDetriments>>
>;
export type GetDetrimentsQueryError = AxiosError<Error>;

export const useGetDetriments = <
  TData = Awaited<ReturnType<typeof getDetriments>>,
  TError = AxiosError<Error>,
>(
  params?: GetDetrimentsParams,
  options?: {
    query?: Partial<
      UseQueryOptions<Awaited<ReturnType<typeof getDetriments>>, TError, TData>
    >;
    axios?: AxiosRequestConfig;
  },
): UseQueryResult<TData, TError> & { queryKey: QueryKey } => {
  const queryOptions = getGetDetrimentsQueryOptions(params, options);

  const query = useQuery(queryOptions) as UseQueryResult<TData, TError> & {
    queryKey: QueryKey;
  };

  query.queryKey = queryOptions.queryKey;

  return query;
};

export const postDetriments = (
  detrimentRequest: DetrimentRequest,
  options?: AxiosRequestConfig,
): Promise<AxiosResponse<DetrimentResponse>> => {
  return axios.post(`/detriments`, detrimentRequest, options);
};

export const getPostDetrimentsMutationOptions = <
  TError = AxiosError<Error>,
  TContext = unknown,
>(options?: {
  mutation?: UseMutationOptions<
    Awaited<ReturnType<typeof postDetriments>>,
    TError,
    { data: DetrimentRequest },
    TContext
  >;
  axios?: AxiosRequestConfig;
}): UseMutationOptions<
  Awaited<ReturnType<typeof postDetriments>>,
  TError,
  { data: DetrimentRequest },
  TContext
> => {
  const { mutation: mutationOptions, axios: axiosOptions } = options ?? {};

  const mutationFn: MutationFunction<
    Awaited<ReturnType<typeof postDetriments>>,
    { data: DetrimentRequest }
  > = (props) => {
    const { data } = props ?? {};

    return postDetriments(data, axiosOptions);
  };

  return { mutationFn, ...mutationOptions };
};

export type PostDetrimentsMutationResult = NonNullable<
  Awaited<ReturnType<typeof postDetriments>>
>;
export type PostDetrimentsMutationBody = DetrimentRequest;
export type PostDetrimentsMutationError = AxiosError<Error>;

export const usePostDetriments = <
  TError = AxiosError<Error>,
  TContext = unknown,
>(options?: {
  mutation?: UseMutationOptions<
    Awaited<ReturnType<typeof postDetriments>>,
    TError,
    { data: DetrimentRequest },
    TContext
  >;
  axios?: AxiosRequestConfig;
}): UseMutationResult<
  Awaited<ReturnType<typeof postDetriments>>,
  TError,
  { data: DetrimentRequest },
  TContext
> => {
  const mutationOptions = getPostDetrimentsMutationOptions(options);

  return useMutation(mutationOptions);
};

export const getDetrimentsId = (
  id: number,
  options?: AxiosRequestConfig,
): Promise<AxiosResponse<DetrimentResponse>> => {
  return axios.get(`/detriments/${id}`, options);
};

export const getGetDetrimentsIdQueryKey = (id: number) => {
  return [`/detriments/${id}`] as const;
};

export const getGetDetrimentsIdQueryOptions = <
  TData = Awaited<ReturnType<typeof getDetrimentsId>>,
  TError = AxiosError<Error>,
>(
  id: number,
  options?: {
    query?: Partial<
      UseQueryOptions<
        Awaited<ReturnType<typeof getDetrimentsId>>,
        TError,
        TData
      >
    >;
    axios?: AxiosRequestConfig;
  },
) => {
  const { query: queryOptions, axios: axiosOptions } = options ?? {};

  const queryKey = queryOptions?.queryKey ?? getGetDetrimentsIdQueryKey(id);

  const queryFn: QueryFunction<Awaited<ReturnType<typeof getDetrimentsId>>> = ({
    signal,
  }) => getDetrimentsId(id, { signal, ...axiosOptions });

  return {
    queryKey,
    queryFn,
    enabled: !!id,
    ...queryOptions,
  } as UseQueryOptions<
    Awaited<ReturnType<typeof getDetrimentsId>>,
    TError,
    TData
  > & { queryKey: QueryKey };
};

export type GetDetrimentsIdQueryResult = NonNullable<
  Awaited<ReturnType<typeof getDetrimentsId>>
>;
export type GetDetrimentsIdQueryError = AxiosError<Error>;

export const useGetDetrimentsId = <
  TData = Awaited<ReturnType<typeof getDetrimentsId>>,
  TError = AxiosError<Error>,
>(
  id: number,
  options?: {
    query?: Partial<
      UseQueryOptions<
        Awaited<ReturnType<typeof getDetrimentsId>>,
        TError,
        TData
      >
    >;
    axios?: AxiosRequestConfig;
  },
): UseQueryResult<TData, TError> & { queryKey: QueryKey } => {
  const queryOptions = getGetDetrimentsIdQueryOptions(id, options);

  const query = useQuery(queryOptions) as UseQueryResult<TData, TError> & {
    queryKey: QueryKey;
  };

  query.queryKey = queryOptions.queryKey;

  return query;
};

export const putDetrimentsId = (
  id: number,
  detrimentRequest: DetrimentRequest,
  options?: AxiosRequestConfig,
): Promise<AxiosResponse<DetrimentResponse>> => {
  return axios.put(`/detriments/${id}`, detrimentRequest, options);
};

export const getPutDetrimentsIdMutationOptions = <
  TError = AxiosError<Error>,
  TContext = unknown,
>(options?: {
  mutation?: UseMutationOptions<
    Awaited<ReturnType<typeof putDetrimentsId>>,
    TError,
    { id: number; data: DetrimentRequest },
    TContext
  >;
  axios?: AxiosRequestConfig;
}): UseMutationOptions<
  Awaited<ReturnType<typeof putDetrimentsId>>,
  TError,
  { id: number; data: DetrimentRequest },
  TContext
> => {
  const { mutation: mutationOptions, axios: axiosOptions } = options ?? {};

  const mutationFn: MutationFunction<
    Awaited<ReturnType<typeof putDetrimentsId>>,
    { id: number; data: DetrimentRequest }
  > = (props) => {
    const { id, data } = props ?? {};

    return putDetrimentsId(id, data, axiosOptions);
  };

  return { mutationFn, ...mutationOptions };
};

export type PutDetrimentsIdMutationResult = NonNullable<
  Awaited<ReturnType<typeof putDetrimentsId>>
>;
export type PutDetrimentsIdMutationBody = DetrimentRequest;
export type PutDetrimentsIdMutationError = AxiosError<Error>;

export const usePutDetrimentsId = <
  TError = AxiosError<Error>,
  TContext = unknown,
>(options?: {
  mutation?: UseMutationOptions<
    Awaited<ReturnType<typeof putDetrimentsId>>,
    TError,
    { id: number; data: DetrimentRequest },
    TContext
  >;
  axios?: AxiosRequestConfig;
}): UseMutationResult<
  Awaited<ReturnType<typeof putDetrimentsId>>,
  TError,
  { id: number; data: DetrimentRequest },
  TContext
> => {
  const mutationOptions = getPutDetrimentsIdMutationOptions(options);

  return useMutation(mutationOptions);
};

export const deleteDetrimentsId = (
  id: number,
  options?: AxiosRequestConfig,
): Promise<AxiosResponse<number>> => {
  return axios.delete(`/detriments/${id}`, options);
};

export const getDeleteDetrimentsIdMutationOptions = <
  TError = AxiosError<Error>,
  TContext = unknown,
>(options?: {
  mutation?: UseMutationOptions<
    Awaited<ReturnType<typeof deleteDetrimentsId>>,
    TError,
    { id: number },
    TContext
  >;
  axios?: AxiosRequestConfig;
}): UseMutationOptions<
  Awaited<ReturnType<typeof deleteDetrimentsId>>,
  TError,
  { id: number },
  TContext
> => {
  const { mutation: mutationOptions, axios: axiosOptions } = options ?? {};

  const mutationFn: MutationFunction<
    Awaited<ReturnType<typeof deleteDetrimentsId>>,
    { id: number }
  > = (props) => {
    const { id } = props ?? {};

    return deleteDetrimentsId(id, axiosOptions);
  };

  return { mutationFn, ...mutationOptions };
};

export type DeleteDetrimentsIdMutationResult = NonNullable<
  Awaited<ReturnType<typeof deleteDetrimentsId>>
>;

export type DeleteDetrimentsIdMutationError = AxiosError<Error>;

export const useDeleteDetrimentsId = <
  TError = AxiosError<Error>,
  TContext = unknown,
>(options?: {
  mutation?: UseMutationOptions<
    Awaited<ReturnType<typeof deleteDetrimentsId>>,
    TError,
    { id: number },
    TContext
  >;
  axios?: AxiosRequestConfig;
}): UseMutationResult<
  Awaited<ReturnType<typeof deleteDetrimentsId>>,
  TError,
  { id: number },
  TContext
> => {
  const mutationOptions = getDeleteDetrimentsIdMutationOptions(options);

  return useMutation(mutationOptions);
};

export const getLounges = (
  params?: GetLoungesParams,
  options?: AxiosRequestConfig,
): Promise<AxiosResponse<LoungeListResponse>> => {
  return axios.get(`/lounges`, {
    ...options,
    params: { ...params, ...options?.params },
  });
};

export const getGetLoungesQueryKey = (params?: GetLoungesParams) => {
  return [`/lounges`, ...(params ? [params] : [])] as const;
};

export const getGetLoungesQueryOptions = <
  TData = Awaited<ReturnType<typeof getLounges>>,
  TError = AxiosError<Error>,
>(
  params?: GetLoungesParams,
  options?: {
    query?: Partial<
      UseQueryOptions<Awaited<ReturnType<typeof getLounges>>, TError, TData>
    >;
    axios?: AxiosRequestConfig;
  },
) => {
  const { query: queryOptions, axios: axiosOptions } = options ?? {};

  const queryKey = queryOptions?.queryKey ?? getGetLoungesQueryKey(params);

  const queryFn: QueryFunction<Awaited<ReturnType<typeof getLounges>>> = ({
    signal,
  }) => getLounges(params, { signal, ...axiosOptions });

  return { queryKey, queryFn, ...queryOptions } as UseQueryOptions<
    Awaited<ReturnType<typeof getLounges>>,
    TError,
    TData
  > & { queryKey: QueryKey };
};

export type GetLoungesQueryResult = NonNullable<
  Awaited<ReturnType<typeof getLounges>>
>;
export type GetLoungesQueryError = AxiosError<Error>;

export const useGetLounges = <
  TData = Awaited<ReturnType<typeof getLounges>>,
  TError = AxiosError<Error>,
>(
  params?: GetLoungesParams,
  options?: {
    query?: Partial<
      UseQueryOptions<Awaited<ReturnType<typeof getLounges>>, TError, TData>
    >;
    axios?: AxiosRequestConfig;
  },
): UseQueryResult<TData, TError> & { queryKey: QueryKey } => {
  const queryOptions = getGetLoungesQueryOptions(params, options);

  const query = useQuery(queryOptions) as UseQueryResult<TData, TError> & {
    queryKey: QueryKey;
  };

  query.queryKey = queryOptions.queryKey;

  return query;
};

export const postLounges = (
  loungeRequest: LoungeRequest,
  options?: AxiosRequestConfig,
): Promise<AxiosResponse<LoungeResponse>> => {
  return axios.post(`/lounges`, loungeRequest, options);
};

export const getPostLoungesMutationOptions = <
  TError = AxiosError<Error>,
  TContext = unknown,
>(options?: {
  mutation?: UseMutationOptions<
    Awaited<ReturnType<typeof postLounges>>,
    TError,
    { data: LoungeRequest },
    TContext
  >;
  axios?: AxiosRequestConfig;
}): UseMutationOptions<
  Awaited<ReturnType<typeof postLounges>>,
  TError,
  { data: LoungeRequest },
  TContext
> => {
  const { mutation: mutationOptions, axios: axiosOptions } = options ?? {};

  const mutationFn: MutationFunction<
    Awaited<ReturnType<typeof postLounges>>,
    { data: LoungeRequest }
  > = (props) => {
    const { data } = props ?? {};

    return postLounges(data, axiosOptions);
  };

  return { mutationFn, ...mutationOptions };
};

export type PostLoungesMutationResult = NonNullable<
  Awaited<ReturnType<typeof postLounges>>
>;
export type PostLoungesMutationBody = LoungeRequest;
export type PostLoungesMutationError = AxiosError<Error>;

export const usePostLounges = <
  TError = AxiosError<Error>,
  TContext = unknown,
>(options?: {
  mutation?: UseMutationOptions<
    Awaited<ReturnType<typeof postLounges>>,
    TError,
    { data: LoungeRequest },
    TContext
  >;
  axios?: AxiosRequestConfig;
}): UseMutationResult<
  Awaited<ReturnType<typeof postLounges>>,
  TError,
  { data: LoungeRequest },
  TContext
> => {
  const mutationOptions = getPostLoungesMutationOptions(options);

  return useMutation(mutationOptions);
};

export const getLoungesId = (
  id: number,
  options?: AxiosRequestConfig,
): Promise<AxiosResponse<LoungeResponse>> => {
  return axios.get(`/lounges/${id}`, options);
};

export const getGetLoungesIdQueryKey = (id: number) => {
  return [`/lounges/${id}`] as const;
};

export const getGetLoungesIdQueryOptions = <
  TData = Awaited<ReturnType<typeof getLoungesId>>,
  TError = AxiosError<Error>,
>(
  id: number,
  options?: {
    query?: Partial<
      UseQueryOptions<Awaited<ReturnType<typeof getLoungesId>>, TError, TData>
    >;
    axios?: AxiosRequestConfig;
  },
) => {
  const { query: queryOptions, axios: axiosOptions } = options ?? {};

  const queryKey = queryOptions?.queryKey ?? getGetLoungesIdQueryKey(id);

  const queryFn: QueryFunction<Awaited<ReturnType<typeof getLoungesId>>> = ({
    signal,
  }) => getLoungesId(id, { signal, ...axiosOptions });

  return {
    queryKey,
    queryFn,
    enabled: !!id,
    ...queryOptions,
  } as UseQueryOptions<
    Awaited<ReturnType<typeof getLoungesId>>,
    TError,
    TData
  > & { queryKey: QueryKey };
};

export type GetLoungesIdQueryResult = NonNullable<
  Awaited<ReturnType<typeof getLoungesId>>
>;
export type GetLoungesIdQueryError = AxiosError<Error>;

export const useGetLoungesId = <
  TData = Awaited<ReturnType<typeof getLoungesId>>,
  TError = AxiosError<Error>,
>(
  id: number,
  options?: {
    query?: Partial<
      UseQueryOptions<Awaited<ReturnType<typeof getLoungesId>>, TError, TData>
    >;
    axios?: AxiosRequestConfig;
  },
): UseQueryResult<TData, TError> & { queryKey: QueryKey } => {
  const queryOptions = getGetLoungesIdQueryOptions(id, options);

  const query = useQuery(queryOptions) as UseQueryResult<TData, TError> & {
    queryKey: QueryKey;
  };

  query.queryKey = queryOptions.queryKey;

  return query;
};

export const putLoungesId = (
  id: number,
  loungeRequest: LoungeRequest,
  options?: AxiosRequestConfig,
): Promise<AxiosResponse<LoungeResponse>> => {
  return axios.put(`/lounges/${id}`, loungeRequest, options);
};

export const getPutLoungesIdMutationOptions = <
  TError = AxiosError<Error>,
  TContext = unknown,
>(options?: {
  mutation?: UseMutationOptions<
    Awaited<ReturnType<typeof putLoungesId>>,
    TError,
    { id: number; data: LoungeRequest },
    TContext
  >;
  axios?: AxiosRequestConfig;
}): UseMutationOptions<
  Awaited<ReturnType<typeof putLoungesId>>,
  TError,
  { id: number; data: LoungeRequest },
  TContext
> => {
  const { mutation: mutationOptions, axios: axiosOptions } = options ?? {};

  const mutationFn: MutationFunction<
    Awaited<ReturnType<typeof putLoungesId>>,
    { id: number; data: LoungeRequest }
  > = (props) => {
    const { id, data } = props ?? {};

    return putLoungesId(id, data, axiosOptions);
  };

  return { mutationFn, ...mutationOptions };
};

export type PutLoungesIdMutationResult = NonNullable<
  Awaited<ReturnType<typeof putLoungesId>>
>;
export type PutLoungesIdMutationBody = LoungeRequest;
export type PutLoungesIdMutationError = AxiosError<Error>;

export const usePutLoungesId = <
  TError = AxiosError<Error>,
  TContext = unknown,
>(options?: {
  mutation?: UseMutationOptions<
    Awaited<ReturnType<typeof putLoungesId>>,
    TError,
    { id: number; data: LoungeRequest },
    TContext
  >;
  axios?: AxiosRequestConfig;
}): UseMutationResult<
  Awaited<ReturnType<typeof putLoungesId>>,
  TError,
  { id: number; data: LoungeRequest },
  TContext
> => {
  const mutationOptions = getPutLoungesIdMutationOptions(options);

  return useMutation(mutationOptions);
};

export const deleteLoungesId = (
  id: number,
  options?: AxiosRequestConfig,
): Promise<AxiosResponse<number>> => {
  return axios.delete(`/lounges/${id}`, options);
};

export const getDeleteLoungesIdMutationOptions = <
  TError = AxiosError<Error>,
  TContext = unknown,
>(options?: {
  mutation?: UseMutationOptions<
    Awaited<ReturnType<typeof deleteLoungesId>>,
    TError,
    { id: number },
    TContext
  >;
  axios?: AxiosRequestConfig;
}): UseMutationOptions<
  Awaited<ReturnType<typeof deleteLoungesId>>,
  TError,
  { id: number },
  TContext
> => {
  const { mutation: mutationOptions, axios: axiosOptions } = options ?? {};

  const mutationFn: MutationFunction<
    Awaited<ReturnType<typeof deleteLoungesId>>,
    { id: number }
  > = (props) => {
    const { id } = props ?? {};

    return deleteLoungesId(id, axiosOptions);
  };

  return { mutationFn, ...mutationOptions };
};

export type DeleteLoungesIdMutationResult = NonNullable<
  Awaited<ReturnType<typeof deleteLoungesId>>
>;

export type DeleteLoungesIdMutationError = AxiosError<Error>;

export const useDeleteLoungesId = <
  TError = AxiosError<Error>,
  TContext = unknown,
>(options?: {
  mutation?: UseMutationOptions<
    Awaited<ReturnType<typeof deleteLoungesId>>,
    TError,
    { id: number },
    TContext
  >;
  axios?: AxiosRequestConfig;
}): UseMutationResult<
  Awaited<ReturnType<typeof deleteLoungesId>>,
  TError,
  { id: number },
  TContext
> => {
  const mutationOptions = getDeleteLoungesIdMutationOptions(options);

  return useMutation(mutationOptions);
};

export const postLoungesIdLocalizations = (
  id: number,
  loungeLocalizationRequest: LoungeLocalizationRequest,
  options?: AxiosRequestConfig,
): Promise<AxiosResponse<LoungeLocalizationResponse>> => {
  return axios.post(
    `/lounges/${id}/localizations`,
    loungeLocalizationRequest,
    options,
  );
};

export const getPostLoungesIdLocalizationsMutationOptions = <
  TError = AxiosError<Error>,
  TContext = unknown,
>(options?: {
  mutation?: UseMutationOptions<
    Awaited<ReturnType<typeof postLoungesIdLocalizations>>,
    TError,
    { id: number; data: LoungeLocalizationRequest },
    TContext
  >;
  axios?: AxiosRequestConfig;
}): UseMutationOptions<
  Awaited<ReturnType<typeof postLoungesIdLocalizations>>,
  TError,
  { id: number; data: LoungeLocalizationRequest },
  TContext
> => {
  const { mutation: mutationOptions, axios: axiosOptions } = options ?? {};

  const mutationFn: MutationFunction<
    Awaited<ReturnType<typeof postLoungesIdLocalizations>>,
    { id: number; data: LoungeLocalizationRequest }
  > = (props) => {
    const { id, data } = props ?? {};

    return postLoungesIdLocalizations(id, data, axiosOptions);
  };

  return { mutationFn, ...mutationOptions };
};

export type PostLoungesIdLocalizationsMutationResult = NonNullable<
  Awaited<ReturnType<typeof postLoungesIdLocalizations>>
>;
export type PostLoungesIdLocalizationsMutationBody = LoungeLocalizationRequest;
export type PostLoungesIdLocalizationsMutationError = AxiosError<Error>;

export const usePostLoungesIdLocalizations = <
  TError = AxiosError<Error>,
  TContext = unknown,
>(options?: {
  mutation?: UseMutationOptions<
    Awaited<ReturnType<typeof postLoungesIdLocalizations>>,
    TError,
    { id: number; data: LoungeLocalizationRequest },
    TContext
  >;
  axios?: AxiosRequestConfig;
}): UseMutationResult<
  Awaited<ReturnType<typeof postLoungesIdLocalizations>>,
  TError,
  { id: number; data: LoungeLocalizationRequest },
  TContext
> => {
  const mutationOptions = getPostLoungesIdLocalizationsMutationOptions(options);

  return useMutation(mutationOptions);
};

export const getTerminals = (
  params?: GetTerminalsParams,
  options?: AxiosRequestConfig,
): Promise<AxiosResponse<TerminalListResponse>> => {
  return axios.get(`/terminals`, {
    ...options,
    params: { ...params, ...options?.params },
  });
};

export const getGetTerminalsQueryKey = (params?: GetTerminalsParams) => {
  return [`/terminals`, ...(params ? [params] : [])] as const;
};

export const getGetTerminalsQueryOptions = <
  TData = Awaited<ReturnType<typeof getTerminals>>,
  TError = AxiosError<Error>,
>(
  params?: GetTerminalsParams,
  options?: {
    query?: Partial<
      UseQueryOptions<Awaited<ReturnType<typeof getTerminals>>, TError, TData>
    >;
    axios?: AxiosRequestConfig;
  },
) => {
  const { query: queryOptions, axios: axiosOptions } = options ?? {};

  const queryKey = queryOptions?.queryKey ?? getGetTerminalsQueryKey(params);

  const queryFn: QueryFunction<Awaited<ReturnType<typeof getTerminals>>> = ({
    signal,
  }) => getTerminals(params, { signal, ...axiosOptions });

  return { queryKey, queryFn, ...queryOptions } as UseQueryOptions<
    Awaited<ReturnType<typeof getTerminals>>,
    TError,
    TData
  > & { queryKey: QueryKey };
};

export type GetTerminalsQueryResult = NonNullable<
  Awaited<ReturnType<typeof getTerminals>>
>;
export type GetTerminalsQueryError = AxiosError<Error>;

export const useGetTerminals = <
  TData = Awaited<ReturnType<typeof getTerminals>>,
  TError = AxiosError<Error>,
>(
  params?: GetTerminalsParams,
  options?: {
    query?: Partial<
      UseQueryOptions<Awaited<ReturnType<typeof getTerminals>>, TError, TData>
    >;
    axios?: AxiosRequestConfig;
  },
): UseQueryResult<TData, TError> & { queryKey: QueryKey } => {
  const queryOptions = getGetTerminalsQueryOptions(params, options);

  const query = useQuery(queryOptions) as UseQueryResult<TData, TError> & {
    queryKey: QueryKey;
  };

  query.queryKey = queryOptions.queryKey;

  return query;
};

export const postTerminals = (
  terminalRequest: TerminalRequest,
  options?: AxiosRequestConfig,
): Promise<AxiosResponse<TerminalResponse>> => {
  return axios.post(`/terminals`, terminalRequest, options);
};

export const getPostTerminalsMutationOptions = <
  TError = AxiosError<Error>,
  TContext = unknown,
>(options?: {
  mutation?: UseMutationOptions<
    Awaited<ReturnType<typeof postTerminals>>,
    TError,
    { data: TerminalRequest },
    TContext
  >;
  axios?: AxiosRequestConfig;
}): UseMutationOptions<
  Awaited<ReturnType<typeof postTerminals>>,
  TError,
  { data: TerminalRequest },
  TContext
> => {
  const { mutation: mutationOptions, axios: axiosOptions } = options ?? {};

  const mutationFn: MutationFunction<
    Awaited<ReturnType<typeof postTerminals>>,
    { data: TerminalRequest }
  > = (props) => {
    const { data } = props ?? {};

    return postTerminals(data, axiosOptions);
  };

  return { mutationFn, ...mutationOptions };
};

export type PostTerminalsMutationResult = NonNullable<
  Awaited<ReturnType<typeof postTerminals>>
>;
export type PostTerminalsMutationBody = TerminalRequest;
export type PostTerminalsMutationError = AxiosError<Error>;

export const usePostTerminals = <
  TError = AxiosError<Error>,
  TContext = unknown,
>(options?: {
  mutation?: UseMutationOptions<
    Awaited<ReturnType<typeof postTerminals>>,
    TError,
    { data: TerminalRequest },
    TContext
  >;
  axios?: AxiosRequestConfig;
}): UseMutationResult<
  Awaited<ReturnType<typeof postTerminals>>,
  TError,
  { data: TerminalRequest },
  TContext
> => {
  const mutationOptions = getPostTerminalsMutationOptions(options);

  return useMutation(mutationOptions);
};

export const getTerminalsId = (
  id: number,
  options?: AxiosRequestConfig,
): Promise<AxiosResponse<TerminalResponse>> => {
  return axios.get(`/terminals/${id}`, options);
};

export const getGetTerminalsIdQueryKey = (id: number) => {
  return [`/terminals/${id}`] as const;
};

export const getGetTerminalsIdQueryOptions = <
  TData = Awaited<ReturnType<typeof getTerminalsId>>,
  TError = AxiosError<Error>,
>(
  id: number,
  options?: {
    query?: Partial<
      UseQueryOptions<Awaited<ReturnType<typeof getTerminalsId>>, TError, TData>
    >;
    axios?: AxiosRequestConfig;
  },
) => {
  const { query: queryOptions, axios: axiosOptions } = options ?? {};

  const queryKey = queryOptions?.queryKey ?? getGetTerminalsIdQueryKey(id);

  const queryFn: QueryFunction<Awaited<ReturnType<typeof getTerminalsId>>> = ({
    signal,
  }) => getTerminalsId(id, { signal, ...axiosOptions });

  return {
    queryKey,
    queryFn,
    enabled: !!id,
    ...queryOptions,
  } as UseQueryOptions<
    Awaited<ReturnType<typeof getTerminalsId>>,
    TError,
    TData
  > & { queryKey: QueryKey };
};

export type GetTerminalsIdQueryResult = NonNullable<
  Awaited<ReturnType<typeof getTerminalsId>>
>;
export type GetTerminalsIdQueryError = AxiosError<Error>;

export const useGetTerminalsId = <
  TData = Awaited<ReturnType<typeof getTerminalsId>>,
  TError = AxiosError<Error>,
>(
  id: number,
  options?: {
    query?: Partial<
      UseQueryOptions<Awaited<ReturnType<typeof getTerminalsId>>, TError, TData>
    >;
    axios?: AxiosRequestConfig;
  },
): UseQueryResult<TData, TError> & { queryKey: QueryKey } => {
  const queryOptions = getGetTerminalsIdQueryOptions(id, options);

  const query = useQuery(queryOptions) as UseQueryResult<TData, TError> & {
    queryKey: QueryKey;
  };

  query.queryKey = queryOptions.queryKey;

  return query;
};

export const putTerminalsId = (
  id: number,
  terminalRequest: TerminalRequest,
  options?: AxiosRequestConfig,
): Promise<AxiosResponse<TerminalResponse>> => {
  return axios.put(`/terminals/${id}`, terminalRequest, options);
};

export const getPutTerminalsIdMutationOptions = <
  TError = AxiosError<Error>,
  TContext = unknown,
>(options?: {
  mutation?: UseMutationOptions<
    Awaited<ReturnType<typeof putTerminalsId>>,
    TError,
    { id: number; data: TerminalRequest },
    TContext
  >;
  axios?: AxiosRequestConfig;
}): UseMutationOptions<
  Awaited<ReturnType<typeof putTerminalsId>>,
  TError,
  { id: number; data: TerminalRequest },
  TContext
> => {
  const { mutation: mutationOptions, axios: axiosOptions } = options ?? {};

  const mutationFn: MutationFunction<
    Awaited<ReturnType<typeof putTerminalsId>>,
    { id: number; data: TerminalRequest }
  > = (props) => {
    const { id, data } = props ?? {};

    return putTerminalsId(id, data, axiosOptions);
  };

  return { mutationFn, ...mutationOptions };
};

export type PutTerminalsIdMutationResult = NonNullable<
  Awaited<ReturnType<typeof putTerminalsId>>
>;
export type PutTerminalsIdMutationBody = TerminalRequest;
export type PutTerminalsIdMutationError = AxiosError<Error>;

export const usePutTerminalsId = <
  TError = AxiosError<Error>,
  TContext = unknown,
>(options?: {
  mutation?: UseMutationOptions<
    Awaited<ReturnType<typeof putTerminalsId>>,
    TError,
    { id: number; data: TerminalRequest },
    TContext
  >;
  axios?: AxiosRequestConfig;
}): UseMutationResult<
  Awaited<ReturnType<typeof putTerminalsId>>,
  TError,
  { id: number; data: TerminalRequest },
  TContext
> => {
  const mutationOptions = getPutTerminalsIdMutationOptions(options);

  return useMutation(mutationOptions);
};

export const deleteTerminalsId = (
  id: number,
  options?: AxiosRequestConfig,
): Promise<AxiosResponse<number>> => {
  return axios.delete(`/terminals/${id}`, options);
};

export const getDeleteTerminalsIdMutationOptions = <
  TError = AxiosError<Error>,
  TContext = unknown,
>(options?: {
  mutation?: UseMutationOptions<
    Awaited<ReturnType<typeof deleteTerminalsId>>,
    TError,
    { id: number },
    TContext
  >;
  axios?: AxiosRequestConfig;
}): UseMutationOptions<
  Awaited<ReturnType<typeof deleteTerminalsId>>,
  TError,
  { id: number },
  TContext
> => {
  const { mutation: mutationOptions, axios: axiosOptions } = options ?? {};

  const mutationFn: MutationFunction<
    Awaited<ReturnType<typeof deleteTerminalsId>>,
    { id: number }
  > = (props) => {
    const { id } = props ?? {};

    return deleteTerminalsId(id, axiosOptions);
  };

  return { mutationFn, ...mutationOptions };
};

export type DeleteTerminalsIdMutationResult = NonNullable<
  Awaited<ReturnType<typeof deleteTerminalsId>>
>;

export type DeleteTerminalsIdMutationError = AxiosError<Error>;

export const useDeleteTerminalsId = <
  TError = AxiosError<Error>,
  TContext = unknown,
>(options?: {
  mutation?: UseMutationOptions<
    Awaited<ReturnType<typeof deleteTerminalsId>>,
    TError,
    { id: number },
    TContext
  >;
  axios?: AxiosRequestConfig;
}): UseMutationResult<
  Awaited<ReturnType<typeof deleteTerminalsId>>,
  TError,
  { id: number },
  TContext
> => {
  const mutationOptions = getDeleteTerminalsIdMutationOptions(options);

  return useMutation(mutationOptions);
};
